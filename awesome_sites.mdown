# Awesome Sites



Order of items is just based on Nothing :: Maybe.

## Blog
* [lali3344/os](http://blog.csdn.net/melody_lu123)
* [Unixwiz](http://unixwiz.net/)
* [Diting0x/cppconcurrency](http://www.chongh.wiki/archives/)
* [Herb-Sutter/c++](https://herbsutter.com/)
* [Preshing on Programming/c++](http://preshing.com/)
* [BS/c++](http://www.stroustrup.com/)
* [MSDN-Blogs](https://blogs.msdn.microsoft.com/)
* [Cheukyin/Cpp-FP](http://www.cnblogs.com/cheukyin/)
* [Techdelight/Alg](http://www.techiedelight.com/)
* [Armin-Ronacher/Python](http://lucumr.pocoo.org/)
* [HN-Blog](https://www.diffur.com/which-programming-blogs-do-you-follow)
* [jjhou/cpp](http://jjhou.boolan.com/)
* [youxu](https://blog.youxu.info/)
* [Carlos-Schults/C#](http://carlosschults.net/)
* [UnitUniverse/Cpp](http://blog.csdn.net/unituniverse2)
* [��ΰ��/Cpp](http://blog.csdn.net/pongba)
* [lockless/Cpp](http://locklessinc.com/articles/)
* [VBird/Linux](http://linux.vbird.org/)
* [Leavesong/Reverse](https://www.leavesongs.com/)
* [Bracha/PLT](http://bracha.org/Site/Home.html)
* [Chris-Taylor/PLT](http://chris-taylor.github.io/)
* [Lambda-Startup/FP](http://lambda-startup.com/)
* [Beej/Network](http://beej.us/blog/)
* [Chenshuo/csdn](http://blog.csdn.net/solstice/article/)
* [CrazyCpp](https://crazycpp.wordpress.com/)
* [Vczh](http://www.cppblog.com/vczh/)
* [Damotou/Haskell](https://zhuanlan.zhihu.com/damotou)
* [Matt-might/PLT](http://matt.might.net/articles/)
* [Sighingnow](http://sighingnow.github.io/)
* [Nark.cc](http://nark.cc/)
* [ds.laboratory/PLT](http://dmitrysoshnikov.com/)
* [yinyang/PLT](http://www.yinwang.org/)
* [Cpptruth](http://cpptruths.blogspot.jp/)
* [i11r](http://www.is-programmer.com/)
* [Alastair-Reid/ARM](https://alastairreid.github.io/alastairreid.github.io/)
* [Typelevel/Scala](http://typelevel.org/blog/)
* [Oleg/PLT](http://okmij.org/ftp/)
* [oleksandr-manzyuk/PLT](https://oleksandrmanzyuk.wordpress.com/)
* [SunnyElf/CTF](https://www.hackfun.org/)
* [RainerGrimm/Cpp](https://www.patreon.com/rainer_grimm/posts)
* [贺师俊/JS/FP](http://johnhax.net/)
* [sigfpe/Haskell](http://blog.sigfpe.com/)
* [LogicMatters/Logic](http://www.logicmatters.net/)
* [Bartosz Milewski/C++/Haskell/Category-Theory](https://bartoszmilewski.com/)
* [ice1000/Kotlin/Java](http://ice1000.org/)
* [Nadeau/C/Cpp](http://nadeausoftware.com/articles/c_c)
* [Baiy/Cpp](http://baiy.cn/)
* [SuperV1234/Cpp](https://vittorioromeo.info/index.html)
* [agner/Cpp/Assembly/CPU](http://www.agner.org/optimize/blog/)
* [ProjectZero](https://googleprojectzero.blogspot.com/)
* [Regehr/Embedded](https://blog.regehr.org)
* [PPP/CTF](http://dttw.tech/)
* [Well-Typed/Haskell](http://www.well-typed.com/blog/)
* [OldNewThings](https://blogs.msdn.microsoft.com/oldnewthing/)
* [RFX/VM](http://rednaxelafx.iteye.com/blog/492667)
* [lihaoyi/Scala](http://www.lihaoyi.com/)
* [ReWolf/Security](http://blog.rewolf.pl/blog/)
* [Stupid-Python-Ideas](http://stupidpythonideas.blogspot.com/)
* [preshing/Cpp](http://preshing.com/archives/)
* [GeoffChappel/SoftwareAnalysis](http://www.geoffchappell.com/index.htm)
* [Pointer/Smq/C++](http://www.cnblogs.com/pointer-smq/)
* [Ytliu/OS/Linux](http://ytliu.info/blog/archives/)
* [Eli-BenderSky](https://eli.thegreenplace.net/archives/all)
* [Diting0x/Security](http://www.diting0x.com/archives/)
* [Ezyang/ML/PL](http://blog.ezyang.com/archives/)
* [dangokyo/Security](https://dangokyo.me/)


### OI/Alg
* [Riteme](https://riteme.github.io)
* [Menci](https://oi.men.ci/#blog)
* [CreationAugust](http://blog.csdn.net/creationaugust)
* [Claris](http://www.cnblogs.com/clrs97/)
* [tangjz](http://blog.csdn.net/skywalkert)
* [miskcoo](http://blog.miskcoo.com/about)
* [hzwer](http://hzwer.com/)
* [ctzsm](http://www.ctzsm.com/)
* [TDL-wiki](https://wiki-tdl.icpc-camp.org/)


## Book/Booklist
* [Beautiful-SICP](http://sarabander.github.io/sicp/html/index.xhtml)
* [SICP-answer](http://sicp.readthedocs.io/en/latest/)
* The little schemer -] EOPL -] TAPL -] PFPL
* [Real-world-haskell](http://book.realworldhaskell.org/)
* [Real-world-haskell-cn](http://cnhaskell.com/)
* [PLAI/PLT](https://zhuanlan.zhihu.com/lotuc)
* [FreeBSD-handbook](https://www.freebsd.org/doc/zh_CN.UTF-8/books/handbook/)
* [The-Little-Book-of-Rust-Macros](https://danielkeep.github.io/tlborm/book/index.html)
* [From NAND to Tetris](http://www.nand2tetris.org/)
* [Probabilistic-Programming-and-Bayesian=Methods](http://camdavidsonpilon.github.io/Probabilistic-Programming-and-Bayesian-Methods-for-Hackers/)
* [Hrbust-acm-book](https://hrbust-acm-team.gitbooks.io/acm-book/content/)
* [Stonybrook-alg](http://www3.cs.stonybrook.edu/~algorith/video-lectures/)
* [UnlambdaPL/PLT/Combinator](http://www.madore.org/~david/programs/unlambda/)
* [Programming-in-D](http://ddili.org/ders/d.en/index.html)
* [Deep-Learning-MIT](http://www.deeplearningbook.org/)
* [MarisaKirisame-bookmarks](https://github.com/MarisaKirisame/bookmarks)
* [PLT-steshaw](http://steshaw.org/plt/)
* [Build-your-own-lisp-en](http://www.buildyourownlisp.com/contents)
* [Build-your-own-lisp-cn](https://ksco.gitbooks.io/build-your-own-lisp/)
* [Effective-Scala](http://twitter.github.io/effectivescala/index.html)
* [Communicating-Sequential-Processes](http://www.usingcsp.com/cspbook.pdf)
* [Competitive-Programming-Book](https://cses.fi/book.html)
* [Graphical-Linear-Algebra/PLT](https://graphicallinearalgebra.net/)
* [PLT-ama](https://zhuanlan.zhihu.com/p/19917853?)
* [Tagless-Cookbook](http://okmij.org/ftp/tagless-final/cookbook.html)
* [PersonalWiki/C++/C#/JS](https://www.gitbook.com/book/aleen42/personalwiki/details)
* [Haskell-GHC](https://zhuanlan.zhihu.com/p/26375722)
* [How to make a computer operating system](https://samypesse.gitbooks.io/how-to-create-an-operating-system/)
* [Cpp-draft](http://eel.is/c++draft/)
* [Mathematical-Components](https://github.com/math-comp/mcb)
* [How-to-Learn-Haskell](https://www.zhihu.com/question/20193745)
* [Python-for-Scientists=and-Engineers](http://pythonforengineers.com/python-for-scientists-and-engineers/)
* [Windows-SysInternals](https://technet.microsoft.com/en-us/sysinternals/)
* [Rust-Cookbook](https://brson.github.io/rust-cookbook/)
* [Mostly-Adequate-Guide-to-FP/js](https://drboolean.gitbooks.io/mostly-adequate-guide/content/)
* [Kotlin-primer](https://kymjs.com/code/2017/02/03/01/)
* [Functional-Design-and-Architecture](https://drive.google.com/drive/folders/0B1Rdr1fbS6M9SjlKUk1zMVNjOVU)
* [CONSTRAINT PROGRAMMING](http://ktiml.mff.cuni.cz/~bartak/constraints/index.html)
* [The Algorithm Design Manual](http://www8.cs.umu.se/kurser/TDBA77/VT06/algorithms/BOOK/BOOK/BOOK.HTM)
* [O'Relly-Free](http://www.oreilly.com/programming/free/?cmp=li-business-free-info-onboarding_li_freereport_programming_ac)
* [Growing-Compiler](http://www.cs.dartmouth.edu/~mckeeman/cs48/mxcom/gem/html/GrowingCompiler.html)
* [Underscore/Scala](http://underscore.io/books/)
* [The-Book-of-Shaders](https://thebookofshaders.com/)
* [Common-Lisp-Cookbook](https://lispcookbook.github.io/cl-cookbook/)
* [Parallel and Concurrent Programming in Haskell](http://chimera.labs.oreilly.com/books/1230000000929/index.html)
* [How-to-Design-Programs](http://www.ccs.neu.edu/home/matthias/HtDP2e/index.html)
* [SIMPLY-FPU](http://www.ray.masmcode.com/tutorial/)


## Community/Maillist
* [IBM-developerworks](https://www.ibm.com/developerworks/)
* [Qita](https://qiita.com/)
* [C-FAQ/comp.lang.c](http://c-faq.com/)
* [ISOCPP](https://isocpp.org/)
* [pediy](http://bbs.pediy.com/)
* [schoolofhaskell](https://www.schoolofhaskell.com/)
* [ali-yq](https://yq.aliyun.com/articles)
* [MeetingCpp](http://meetingcpp.com/)
* [Lambda-the-Ultimate](http://lambda-the-ultimate.org/)
* [CERT](https://www.cert.org/)
* [ghc-trac](https://ghc.haskell.org/trac/ghc)
* [KDE](https://community.kde.org/Policies)
* [Blackhat](http://www.blackhat.com/)
* [Dlang](https://dlang.org/)
* [Comonod](http://comonad.com/reader/)
* [BleepingComputer/Security](https://www.bleepingcomputer.com/)
* [Freebuf](http://www.freebuf.com/)
* [seebug](http://paper.seebug.org/)
* [National-Cyber-Security-Centre](https://www.ncsc.gov.uk/)
* [Haskell-Cafe](https://mail.haskell.org/pipermail/haskell-cafe/)
* [VS-feedback](https://connect.microsoft.com/VisualStudio/feedback/)
* [LLVM-project-blog](http://blog.llvm.org/)
* [VCBlog](https://blogs.msdn.microsoft.com/vcblog)
* [Usenet-Archive](http://yarchive.net/home.html)
* [WG21](https://wg21.cmeerw.net/)




## Conference
* [BoB/PLT](https://www.youtube.com/playlist?list=PLHvf3gk-RdgU8CUcxpFA-aq1nTeJ0njhF)
* [Summer-Haskell](summer.haskell.org)
* [Topconf](https://www.topconf.com/)
* [code.haskell.org](http://code.haskell.org/)
* [SIGBOVIK](http://sigbovik.org/)
* [ACCUConf/Cpp](https://conference.accu.org/site/index.html)
* [DConf/Dlang](http://dconf.org/)
* [ICFP](http://www.icfpconference.org/)
* [ACL](https://www.aclweb.org/portal/acl)
* [CppCon/Cpp](https://cppcon.org/)
* [CppNow/Cpp](http://cppnow.org/)
* [ZuriHac/Haskell](https://zurihac.info/)
* [China-Theory-Week](http://itcs.shufe.edu.cn/ctw2017/)
* [LambdaConf/PLT](http://lambdaconf.us/)
* [GopherCon](https://www.gophercon.com/)
* [OPLSS](https://www.cs.uoregon.edu/research/summerschool/summer17/)
* [DSSS](https://deepspec.org/main)
* [DefCon](https://media.defcon.org/)
* [USENIX-Security](https://www.usenix.org/conference/usenixsecurity17)


## Criteria/Documentation/Reference/Wiki
* [POSIX](http://pubs.opengroup.org/onlinepubs/9699919799/)
* [WG21-Cpp](http://open-std.org/JTC1/SC22/WG21/)
* [Itanium-Cpp-ABI](http://itanium-cxx-abi.github.io/cxx-abi/)
* [ARM-ABI](http://infocenter.arm.com/help/index.jsp?topic=/com.arm.doc.subset.swdev.abi/index.html)
* [Linux Manual](http://man7.org/)
* [Linux man-pages](https://www.kernel.org/doc/man-pages/)
* [RFC](http://www.rfc-editor.org/rfc/)
* [Python-PEP](https://www.python.org/dev/peps/)
* [Unicode](http://www.unicode.org/versions/Unicode9.0.0/)
* [Unicode-draft](http://www.unicode.org/versions/Unicode10.0.0/)
* [SSS/Collection](https://zhuanlan.zhihu.com/p/25644695)
* [Intel-IA](https://software.intel.com/en-us/articles/intel-sdm)
* [AMD-doc](http://developer.amd.com/resources/developer-guides-manuals/)
* [Intel-doc](https://software.intel.com/en-us/search/site/article)
* [OpenSceneGraph](http://camlosg.sourceforge.net/osg/index.html)
* [MSDN](https://msdn.microsoft.com/library)
* [GCC](https://gcc.gnu.org/onlinedocs/index.html)
* [Clang](http://clang.llvm.org/docs/index.html)
* [LLVM-project](https://llvm.org/svn/llvm-project/)
* [FHS](http://www.pathname.com/fhs/)
* [FreeBSD](https://www.freebsd.org/doc/)
* [Lua](https://www.lua.org/manual/5.3/)
* [Dlang-wiki](https://wiki.dlang.org/The_D_Programming_Language)
* [Cppreference](http://en.cppreference.com/w/)
* [Scholarpedia](http://www.scholarpedia.org/article/Main_Page)
* [Hoogle](https://www.haskell.org/hoogle/)
* [Esolang](https://esolangs.org/wiki/Main_Page)
* [Stanford-Encyclopedia-of-Philosopy](https://plato.stanford.edu/entries/goedel-incompleteness/)
* [ECMA](http://www.ecma-international.org/publications/)
* [Rust-lang](https://doc.rust-lang.org/)
* [Dlang](http://wiki.dlang.org/)
* [Deitel-Resource-Center-C](http://www.deitel.com/Default.aspx?tabid=204)
* [Haskell-2010-Report](https://www.haskell.org/onlinereport/haskell2010/)
* [avrgcc](http://www.arduino.cn/avrgcc/modules.html)
* [ReferenceSource](http://referencesource.microsoft.com/)
* [Racket](http://docs.racket-lang.org/reference/index.html)
* [Symbols/ObjC](http://www.cpp01.com/)
* [Typeclassopedia](https://wiki.haskell.org/Typeclassopedia)
* [OWASP/Security](https://www.owasp.org/index.php/Main_Page)
* [nLab](https://ncatlab.org/nlab/show/HomePage)
* [C/C++-Platform-Macro](http://nadeausoftware.com/articles/2012/01/c_c_tip_how_use_compiler_predefined_macros_detect_operating_system)
* [gcc-SVN](https://gcc.gnu.org/viewcvs/gcc/trunk/libstdc%2B%2B-v3/include/)
* [GNU-FTP](http://ftp.gnu.org/)
* [NT-Status-Code](https://msdn.microsoft.com/en-us/library/cc704588.aspx)
* [MSDN-Library](https://msdn.microsoft.com/en-us/library/ms123401.aspx)
* [MSDN-Open-Spec](https://msdn.microsoft.com/en-us/library/dd208104.aspx)
* [Visual-Cpp-Language-Reference(C++/CX)](https://docs.microsoft.com/zh-cn/cpp/cppcx/visual-c-language-reference-c-cx)
* [Stackage](https://www.stackage.org/)
* [PyTorch-CN](http://pytorch-cn.readthedocs.io/zh/latest/)
* [LLVM](http://llvm.org/docs/index.html)
* [W3C](https://www.w3.org/TR/)
* [CSS](https://www.w3.org/TR/CSS)
* [Bugs-ProjectZero](https://bugs.chromium.org/p/project-zero/issues/list)
* [Memory-management](http://www.memorymanagement.org/index.html)
* [Program-Transformation](http://www.program-transformation.org/Transform/WebHome)
* [STABS-debug-symbol](https://sourceware.org/gdb/current/onlinedocs/stabs/index.html)
* [Linux-Standard-Base](http://refspecs.linuxfoundation.org/lsb.shtml)
* [Undocumented-Functions-in-NT](https://undocumented.ntinternals.net/)
* [CTF-wiki](https://ctf-wiki.github.io/ctf-wiki/#/)


## Github
* [Kivy-CN](https://github.com/cycleuser/Kivy-CN)
* [awesome](https://github.com/sindresorhus/awesome)
* [csharplang](https://github.com/dotnet/csharplang)
* [dotnet-standard](https://github.com/dotnet/standard)
* [haskell-ghc](https://github.com/ghc/ghc)
* [CppCoreGuideline](https://github.com/isocpp/CppCoreGuidelines)
* [Cpp1z-qqgroup](http://git.oschina.net/mongodb_client/cpp1z-group-awesome)
* [YSlib](https://github.com/FrankHB/YSlib)
* [pl-docs](https://github.com/FrankHB/pl-docs)
* [MCF](https://github.com/lhmouse/MCF)
* [AES-GCM-SIV](https://github.com/Shay-Gueron/AES-GCM-SIV)
* [Stanford-ACM](https://github.com/jaehyunp/stanfordacm)
* [Anyrainel-ACM](https://github.com/Anyrainel)
* [awesome-cpp](https://github.com/fffaraz/awesome-cpp)
* [awesome-dotnet](https://github.com/quozd/awesome-dotnet)
* [Pi-forall-PLV](https://github.com/sweirich/pi-forall)
* [System-Design-Interview](https://github.com/checkcheckzz/system-design-interview)
* [System-Design-Primer](https://github.com/donnemartin/system-design-primer)
* [what-happen-when-CN](https://github.com/skyline75489/what-happens-when-zh_CN)
* [SLAMBook](https://github.com/gaoxiang12/slambook)
* [FuckGalEngine](https://github.com/Inori/FuckGalEngine)
* [Syscall-Monitor](https://github.com/hzqst/Syscall-Monitor)
* [Mostly-adequate-guide-FP](https://github.com/MostlyAdequate/mostly-adequate-guide)
* [Implementations-DL](https://github.com/tdeboissiere/DeepLearningImplementations)
* [Cheukyin/Cpp](https://github.com/Cheukyin)
* [Vlpp/Cpp](https://github.com/vczh-libraries/Vlpp)
* [Reflection++/Cpp](https://github.com/hczhcz/reflectionpp)
* [Tensorflow](https://github.com/tensorflow/tensorflow)
* [LFS8-CN](https://github.com/LinuxStory/lfs-8.0-Chinese)
* [Docker-Programming-Language](https://github.com/nacyot/docker-programming-languages)
* [Snippets/Cpp](https://github.com/mclow/snippets)
* [Book-notes](https://github.com/mgp/book-notes)
* [Swift-Alg-Club](https://github.com/raywenderlich/swift-algorithm-club)
* [Interactive-Latency](https://github.com/colin-scott/interactive_latencies)
* [Loki](https://github.com/dutor/loki)
* [Continuable](https://github.com/Naios/continuable)
* [Cpp1z-Change](https://github.com/tvaneerd/cpp17_in_TTs)
* [call-in-stack/coroutine-cpp](https://github.com/yuanzhubi/call_in_stack)
* [syntax-suger-python](https://github.com/czheo/syntax_sugar_python)
* [dev-awesomeness/cppcon+gdc17](https://github.com/mc-gulu/dev-awesomenesses)
* [pycparser](https://github.com/eliben/pycparser)
* [compilingTheory](https://github.com/netcan/compilingTheory)
* [500lines/Python](https://github.com/aosabook/500lines)
* [PyTricks](https://github.com/brennerm/PyTricks)
* [macropy](https://github.com/lihaoyi/macropy)
* [q/python](https://github.com/zestyping/q)
* [cosmos/cpp](https://github.com/qicosmos/cosmos)
* [RTCCpp](https://github.com/RuntimeCompiledCPlusPlus/RuntimeCompiledCPlusPlus)
* [Interview](https://github.com/kdn251/interviews)
* [CSDI/Notes](https://github.com/SJTU-SE/CSDI)
* [pytorch-tutorial](https://github.com/yunjey/pytorch-tutorial)
* [qicosmos](https://github.com/qicosmos/cosmos)
* [Windows-hack](https://github.com/LazoCoder/Windows-Hacks)
* [Effective-Modern-Cpp-CN](https://github.com/Ricardo666666/Effective-Modern-Cpp-Zh)
* [JASEL/Cpp-proposals](https://github.com/viboes/std-make)
* [Value-category-cheatsheet/Cpp](https://github.com/jeaye/value-category-cheatsheet)
* [WASM-Lua](https://github.com/vvanders/wasm_lua)
* [Web-Developer-Roadmap](https://github.com/kamranahmedse/developer-roadmap)
* [C4](https://github.com/rswier/c4)
* [dyweb-course](https://github.com/dyweb/course)
* [Write-you-a-haskell](https://github.com/sdiehl/write-you-a-haskell)
* [Pretty-RFC](http://pretty-rfc.herokuapp.com/)
* [Swapview](https://github.com/lilydjwg/swapview)
* [algo4j/jni](https://github.com/ice1000/algo4j)
* [boost.outcome/cpp](https://github.com/ned14/boost.outcome/tree/master/include/boost/outcome)
* [range-v3/cpp](https://github.com/ericniebler/range-v3)
* [match3/cpp](https://github.com/modern-cpp-examples/match3)
* [boost.sml/cpp](https://github.com/boost-experimental/sml/tree/278efceb553eba357518d2889066102156ce4d5f)
* [algorithm-data-structure/cpp](https://github.com/xtaci/algorithms)
* [coding-questions](https://github.com/checkcheckzz/coding-questions)
* [tinyrenderer/cpp](https://github.com/ssloy/tinyrenderer)
* [bhuztez/cpp](https://github.com/bhuztez)
* [july-taocp](https://github.com/julycoding/The-Art-Of-Programming-By-July)
* [CS-offer](https://github.com/xuelangZF/CS_Offer)
* [fp-course](https://github.com/tonymorris/course)
* [MiniOS](https://github.com/bajdcc/MiniOS)
* [coodtransform](https://github.com/wandergis/coordtransform)
* [Probabilistic-Programming-and-Bayesian=Methods](https://github.com/CamDavidsonPilon/Probabilistic-Programming-and-Bayesian-Methods-for-Hackers)
* [rust-lang-nursery/reference](https://github.com/rust-lang-nursery/reference)
* [state-of-Haskell-ecosystem](https://github.com/Gabriel439/post-rfc)
* [FormalSystem](https://github.com/alexprengere/FormalSystems)
* [go-is-not-good](https://github.com/ksimka/go-is-not-good)
* [LookupTable](https://github.com/Const-me/LookupTables)
* [Sample-Prothon-Project](https://github.com/pypa/sampleproject)
* [Local-hook/Cpp](https://github.com/yuanzhubi/local_hook)
* [Write-you-a-Haskell](https://github.com/sdiehl/write-you-a-haskell)
* [Bash-guide](https://github.com/Idnan/bash-guide)
* [Lambda-Calculus/Haskell](https://github.com/txyyss/Lambda-Calculus)
* [AlgoDS](https://github.com/sherxon/AlgoDS/blob/master/README.md)
* [Programming-in-D](https://github.com/DlangRen/Programming-in-D)
* [Google-re2](https://github.com/google/re2/)
* [arrayfire/GPU](https://github.com/arrayfire/arrayfire)
* [job-hunting/OOP](https://github.com/yaobinwen/job_hunting)
* [ChihuahuaLang/PLT](https://github.com/molikto/ChihuahuaLang)
* [pysmt/Satisfiability/PLT](https://github.com/pysmt/pysmt)
* [awesome-rust](https://github.com/kud1ing/awesome-rust)
* [awesome-d](https://github.com/zhaopuming/awesome-d)
* [awesome-dotnet](https://github.com/quozd/awesome-dotnet)
* [awesome-dotnot-core](https://github.com/thangchung/awesome-dotnet-core)
* [awesome-haskell](https://github.com/krispo/awesome-haskell)
* [Bigint-toybi/Cpp](https://github.com/iamstupid/toybi)
* [instaparse/Clojure](https://github.com/Engelberg/instaparse)
* [Tars/rpc/cpp](https://github.com/Tencent/Tars)
* [Simple-FP/PLT](https://github.com/psygnisfive/SimpleFP)
* [Simple-FP-v2/PLT](https://github.com/psygnisfive/SimpleFP-v2)
* [CTF-pwn-tips](https://github.com/Naetw/CTF-pwn-tips)
* [Thrill/Distributed/Cpp](https://github.com/thrill/thrill)
* [libuid/Dlang](https://github.com/mogud/libuid)
* [yu/Dlang](https://github.com/dushibaiyu/yu)
* [S2-geometric-lib/Cpp](https://github.com/yjwong/s2-geometry-library)
* [pifs/code](https://github.com/philipl/pifs)
* [dale/C/Lisp](https://github.com/tomhrr/dale)
* [Build-your-own-lisp](https://github.com/orangeduck/BuildYourOwnLisp)
* [Computer-science-ranking](https://github.com/emeryberger/CSrankings)
* [Interviews](https://github.com/kdn251/interviews)
* [Coq-tactics](https://github.com/JasonGross/coq-tactics)
* [fiat/PLV](https://github.com/mit-plv/fiat)
* [StanfordPL](https://github.com/StanfordPL)
* [coding-interview-university](https://github.com/jwasham/coding-interview-university)
* [Low-Level-Programming-University](https://github.com/gurugio/lowlevelprogramming-university)
* [WindowsUIDevLabs](https://github.com/Microsoft/WindowsUIDevLabs)
* [FLRC/FP](https://github.com/IntelLabs/flrc)
* [AILab-NN-For-Beginner](https://github.com/AILabUSiena/NeuralNetworksForBeginners)
* [Learn-you-a-lambda/PLT](https://github.com/ninegua/lambda-viewer)
* [else-lambda-calculus/PLT](https://github.com/ucsd-progsys/elsa)
* [nbind-cpp-js](https://github.com/charto/nbind)
* [Jamesbound/PI-calculus/PLT](https://github.com/bordaigorl/jamesbound)
* [winetricks-CN](https://github.com/hillwoodroc/winetricks-zh)
* [What-I-Wish-I-Knew-When-Learning-Haskell](https://github.com/sdiehl/wiwinwlh)
* [Shadowbroker/Security](https://github.com/misterch0c/shadowbroker)
* [Neural-Complete](https://github.com/kootenpv/neural_complete)
* [totalscript/PLT](https://github.com/totalscript/totalscript)
* [kqr-gists](https://github.com/kqr/gists)
* [learnhaskell](https://github.com/bitemyapp/learnhaskell)
* [gopherchina-conference](https://github.com/gopherchina/conference)
* [jos](https://github.com/Clann24/jos)
* [awesome-windows](https://github.com/Awesome-Windows/Awesome)
* [awesome-uwp](https://github.com/tomzorz/awesome-uwp)
* [awesome-programmer](https://github.com/rekihattori/awesome-programmers)
* [cpp_exception_handling_abi](https://github.com/nicolasbrailo/cpp_exception_handling_abi)
* [CompCert/C/PLT](https://github.com/AbsInt/CompCert)
* [Notes-python](https://github.com/lijin-THU/notes-python)
* [tensor-ops/Haskell/ML](https://github.com/mstksg/tensor-ops)
* [json/Modern-Cpp](https://github.com/nlohmann/json)
* [Flex-bison-cpp-example](https://github.com/bingmann/flex-bison-cpp-example)
* [network-ts-impl/Cpp](https://github.com/chriskohlhoff/networking-ts-impl)
* [VisualCPU](https://github.com/IntelOrca/VisualCPU)
* [Executors/Cpp](https://github.com/chriskohlhoff/executors)
* [panicparse](https://github.com/maruel/panicparse)
* [cppast](https://github.com/foonathan/cppast)
* [Klee/LLVM/OS](https://github.com/klee/klee)
* [STP/PLV](https://github.com/stp/stp)
* [Annah/FP](https://github.com/Gabriel439/Haskell-Annah-Library)
* [API-Guideline/REST](https://github.com/Microsoft/api-guidelines)
* [lld/LLVM](https://github.com/llvm-mirror/lld)
* [DMOJ/OJ](https://github.com/DMOJ/judge)
* [Compatibility/Cpp](https://github.com/foonathan/compatibility)
* [lightsaber/Scheme](https://github.com/happlebao/lightsabers)
* [type checking by evaluation](https://github.com/AndrasKovacs/tcbe)
* [VK9/D3D/Vulkan/Graphics](https://github.com/disks86/VK9)
* [Continuable/Cpp](https://github.com/Naios/continuable)
* [Cppstddb](https://github.com/cruisercoder/cppstddb)
* [learning-cmake](https://github.com/Akagi201/learning-cmake)
* [Church/JS/Haskell/PLT](https://github.com/benji6/church)
* [Py-backwards](https://github.com/nvbn/py-backwards)
* [acl2/PLV](https://github.com/acl2/acl2)
* [Mathematical-Components](https://github.com/math-comp/math-comp)
* [Gitpitch/Markdown/Git](https://github.com/gitpitch/gitpitch)
* [argagg/Cpp](https://github.com/vietjtnguyen/argagg)
* [VC-LTL/Cpp/MSVCAPI](https://github.com/Chuyu-Team/VC-LTL)
* [NativeLib/Cpp/WindowsAPI](https://github.com/Chuyu-Team/NativeLib)
* [Dragon-Book-Answer](https://github.com/fool2fish/dragon-book-exercise-answers)
* [clang-user-manual-CN](https://github.com/oxnz/clang-user-manual)
* [x64asm](https://github.com/StanfordPL/x64asm)
* [changelog](https://github.com/mh-cbon/changelog)
* [ctai/Cpp/TMP](https://github.com/stryku/ctai)
* [db-readings/DB](https://github.com/rxin/db-readings)
* [pbrt-v3/Graphics](https://github.com/mmp/pbrt-v3)
* [LinearML/PLT](https://github.com/pikatchu/LinearML)
* [C++ Language Interface Foundation](https://github.com/google/clif)
* [Simple-OS-Book](https://github.com/chyyuu/simple_os_book)
* [Odin-Holmes-talks/Cpp](https://github.com/odinthenerd/talks)
* [TLisp](https://github.com/raviqqe/tisp)
* [计算机网络－自顶向下方法-Notes](https://github.com/moranzcw/Computer-Networking-A-Top-Down-Approach-NOTES)
* [HaskSymb](https://github.com/colah/HaskSymb)
* [Dafny/PLV](https://github.com/Microsoft/dafny)
* [Boogie/PLV](https://github.com/boogie-org/boogie)
* [xv6-Chinese/OS](https://github.com/ranxian/xv6-chinese)
* [Haacks/Security](https://github.com/Haacked/CodeHaacks)
* [qq-tg-irc](https://github.com/vjudge1/qq-tg-irc)
* [llvm-pass](https://github.com/foreverbell/llvm-pass)
* [schnorr/Dlang/Crypto](https://github.com/deadalnix/schnorr)
* [ig-visual-cpp-call-graph](https://github.com/goldsborough/ig)
* [Knowledge-Map](https://github.com/nikitavoloboev/knowledge-map)
* [JNI.hpp/Cpp](https://github.com/mapbox/jni.hpp)
* [XAML-standard](https://github.com/Microsoft/xaml-standard)
* [Modular-Windows.h/Cpp](https://github.com/Leandros/WindowsHModular)
* [Quchen's-Articles/Haskell](https://github.com/quchen/articles)
* [BeRoot/Security/Win](https://github.com/AlessandroZ/BeRoot)
* [RSAM/PLT](https://github.com/renll/RSAM)
* [awesome-compiler/Compiler](https://github.com/aalhour/awesome-compilers)
* [Write-a-C-Interpreter/Compiler](https://github.com/lotabout/write-a-C-interpreter)
* [dnsmasq-china-list](https://github.com/felixonmars/dnsmasq-china-list)
* [Dotty/Scala](https://github.com/lampepfl/dotty)
* [ghc-proposals/Haskell](https://github.com/ghc-proposals/ghc-proposals)
* [Kubernetes-handbook/Dis](https://github.com/rootsongjc/kubernetes-handbook)
* [searx/Security](https://github.com/asciimoo/searx)
* [SOC-Programs/Internship](https://github.com/tapasweni-pathak/SOC-Programs)
* [tbvaccine-pretty-traceback/Python](https://github.com/skorokithakis/tbvaccine/)
* [Rust-cookbook](https://github.com/brson/rust-cookbook)
* [Mostly-Adequate-Guide-to-FP/js](https://github.com/MostlyAdequate/mostly-adequate-guide)
* [Boostache-text-generator/Cpp](https://github.com/cierelabs/boostache)
* [ProofGeneral/Coq/Emacs](https://proofgeneral.github.io/)
* [awesome-Kotlin](https://github.com/KotlinBy/awesome-kotlin)
* [Ammonite/Scala](https://github.com/lihaoyi/Ammonite)
* [Boost.PolyCollection/Cpp](https://github.com/joaquintides/poly_collection)
* [Contiki/OS](https://github.com/contiki-os/contiki)
* [loadlibrary/Win/Linux](https://github.com/taviso/loadlibrary)
* [HelloGCC](https://github.com/hellogcc)
* [Wizard Zhang/Security](https://github.com/wizardforcel)
* [Learning-SICP](https://github.com/DeathKing/Learning-SICP)
* [Linux](https://github.com/torvalds/linux)
* [articles/PLT](https://github.com/Dobiasd/articles)
* [awesome-android-security](https://github.com/ashishb/android-security-awesome)
* [CTFS-write-up](https://github.com/ctfs)
* [Student-resources](https://github.com/ivmm/Student-resources)
* [EasyHook/Windows](https://github.com/EasyHook/EasyHook)
* [NSA-open-source](https://nationalsecurityagency.github.io/)
* [Competitive-Programming-Lib](https://github.com/AhmadElsagheer/Competitive-programming-library)
* [make-a-lisp](https://github.com/kanaka/mal)
* [science-based-games-list](https://github.com/stared/science-based-games-list)
* [Templight](https://github.com/mikael-s-persson/templight)
* [copy-elision-NRVO](https://stackoverflow.com/questions/12953127/what-are-copy-elision-and-return-value-optimization)
* [Iota-Jot-Zot](https://en.wikipedia.org/wiki/Iota_and_Jot)
* [Hard-coded-hardware-address-in-C/Cpp](https://kristerw.blogspot.com/2017/07/hard-coded-hardware-addresses-in-cc.html)
* [Thoughts-on-VC++-AST](https://blogs.msdn.microsoft.com/vcblog/2006/08/16/thoughts-on-the-visual-c-abstract-syntax-tree-ast/)
* [Rejuvenating the Microsoft C/C++ Compiler](https://blogs.msdn.microsoft.com/vcblog/2015/09/25/rejuvenating-the-microsoft-cc-compiler/)
* [static-print](https://github.com/saarraz/static-print)
* [chezscheme](https://github.com/cisco/ChezScheme)
* [minhook/win](https://github.com/TsudaKageyu/minhook)
* [API-Security-Checklist]((https://github.com/shieldfy/API-Security-Checklist)
* [List-of-games-with-source-on-Github](https://github.com/leereilly/games)
* [unconstexpr/Cpp](https://github.com/DaemonSnake/unconstexpr)
* [awesome-hack](https://github.com/Hack-with-Github/Awesome-Hacking/blob/master/README.md)
* [master-plan](https://github.com/rodrigosetti/master-plan)
* [THU-SAAC](https://git.thusaac.org/publish)




## Guide/Tutorial
* [Apple Security Coding Guide](https://developer.apple.com/library/content/documentation/Security/Conceptual/SecureCodingGuide/Introduction.html#//apple_ref/doc/uid/TP40002477-SW1)
* [Category Theory for Programmer](https://bartoszmilewski.com/2014/10/28/category-theory-for-programmers-the-preface/)
* [CppCoreGuideline](http://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines)
* [Google Coding Style](https://google.github.io/styleguide/cppguide.html)
* [LLVM-Tutorial](http://llvm.org/docs/tutorial/)
* [Amit��s Game Programming Information](http://www-cs-students.stanford.edu/~amitp/gameprog.html)
* [LFS](http://www.linuxfromscratch.org/)
* [Wykobi-Computer-Geometry-Tutorial](http://wykobi.com/tutorial.html)
* [ANTLR-Mega-Tutorial](https://tomassetti.me/antlr-mega-tutorial/)
* [Undergraduate-Programming-Languages](http://www.eecs.ucf.edu/~leavens/teaching-prog-lang/Undergraduate.html)
* [Graduate-Programming-Languages](http://www.eecs.ucf.edu/~leavens/teaching-prog-lang/Graduate.html)
* [Soimort-wiki/PL](https://wiki.soimort.org/)
* [Algorithm-DS/python](http://interactivepython.org/runestone/static/pythonds/index.html)
* [Annotated-Computer-Vision-Bibliography/CV](http://www.visionbib.com/bibliography/contents.html)
* [Rust](https://doc.rust-lang.org/book/README.html)
* [Teach-yourself-cs](https://teachyourselfcs.com/)
* [OpenGL](http://ogldev.atspace.co.uk/)
* [BeautifulRacket](http://beautifulracket.com/)
* [Stanford-CS-Edu-Lib](http://cslibrary.stanford.edu/)
* [ScratchPixel/Graphics](http://www.scratchapixel.com/)
* [Animista/CSS](http://animista.net/)
* [Stanford-CS188/AI](http://ai.berkeley.edu/home.html)
* [Google-code-style-CN](http://zh-google-styleguide.readthedocs.io/en/latest/google-cpp-styleguide/)
* [US-Web-Design](https://standards.usa.gov/whats-new/releases/)
* [30-day-VR](https://risonsimon.com/days-in-vr/)
* [RFC-Chinese](http://man.chinaunix.net/develop/rfc/default.htm)
* [How-to-write-Common-Lisp](http://articulate-lisp.com/)
* [Graphics](https://www.zhihu.com/question/27544895/answer/99021929)
* [Interactive-code-challenge](https://github.com/donnemartin/interactive-coding-challenges)
* [Write-you-a-Haskell](http://dev.stephendiehl.com/fun/)
* [FP-Compiler-Optimization](https://zhuanlan.zhihu.com/p/19994962)
* [The-power-of-Prolog](https://www.metalevel.at/prolog)
* [Regex-Russ-Cox](https://swtch.com/~rsc/regexp/)
* [D-idioms](https://p0nce.github.io/d-idioms/)
* [D-Dlps](https://github.com/dlang/DIPs/tree/master/DIPs)
* [Incompatibilities Between ISO C99 and ISO C++98](http://david.tribble.com/text/cdiffs.htm) (See N4660 Appendix A)
* [Cpp-Project](https://www.zhihu.com/question/28341521)
* [Hacker-list/Security](https://zhuanlan.zhihu.com/p/26227423)
* [CppCodingStandard-CMU](https://users.ece.cmu.edu/~eno/coding/CppCodingStandard.html)
* [ES7-in-7-days](https://getgood.at/js/es7-in-7-days)
* [Learn-you-a-lambda](https://github.com/ninegua/lambda-viewer)
* [Python3-Module-of-the-Week](https://pymotw.com/3/)
* [Python3-Module-of-the-Week-CN](http://www.pandacademy.com/pymotw-3-%E4%BB%8B%E7%BB%8D/)
* [The-Mechanization-of-Standard-ML](https://github.com/SMLFamily/The-Mechanization-of-Standard-ML)
* [WHAT-I-WISH-I-KNEW-WHEN-LEARNING-HASKELL](http://dev.stephendiehl.com/hask/)
* [500-Data-structures-and-algorithms-interview-questions-and-their-solutions](https://techiedelight.quora.com/500-Data-structures-and-algorithms-interview-questions-and-their-solutions)
* [this-week-in-rust](https://www.reddit.com/domain/this-week-in-rust.org/)
* [shadertoy](https://www.shadertoy.com/)
* [CERT-Coding-Standard](https://www.securecoding.cert.org/confluence/display/cplusplus/1+Front+Matter)
* [Try-Git](https://try.github.io/levels/1/challenges/1)
* [APFS/OS](https://blog.cugu.eu/post/apfs/)
* [Advance-project/C](http://stackoverflow.com/questions/4583746/what-open-source-c-projects-are-worth-studying-for-learning-good-design)
* [CppSamples](http://www.cppsamples.com/)
* [Cppr-libs](http://en.cppreference.com/w/cpp/links/libs)
* [HS-GotW/Cpp](https://herbsutter.com/gotw/)
* [Haskell-Report-98](https://www.haskell.org/onlinereport/)
* [Haskell-Report-10](https://www.haskell.org/onlinereport/haskell2010/)
* [Haskell-src](http://hackage.haskell.org/package/base-4.9.1.0/docs/src/)
* [pbrt-v3](https://github.com/mmp/pbrt-v3)
* [Calling-Convention-MSVC](https://msdn.microsoft.com/en-us/library/9b372w95(v=vs.140).aspx)
* [Haskell-Idioms](https://wiki.haskell.org/Category:Idioms)
* [C++-Super-FAQ](https://isocpp.org/wiki/faq)
* [Codewars-Haskell](https://zhuanlan.zhihu.com/p/20528665)
* [24-Days-of-GHC-Extension](https://ocharles.org.uk/blog/pages/2014-12-01-24-days-of-ghc-extensions.html)
* [.Net-Coding-Guideline](https://github.com/dotnet/corefx/tree/master/Documentation/coding-guidelines)
* [Cpp-Document-Stackoverflow](http://stackoverflow.com/documentation/c%2b%2b)
* [手把手教你构建 C 语言编译器](http://lotabout.me/2015/write-a-C-interpreter-0/)
* [How-to-learn-Haskell](https://github.com/bitemyapp/learnhaskell/blob/master/guide-zh_CN.md)
* [Categories from scratch](http://science.raphael.poss.name/categories-from-scratch.html)
* [AI-playbook](http://aiplaybook.a16z.com/)
* [SOC-Programs/Internship](https://github.com/tapasweni-pathak/SOC-Programs)
* [ELF-Hello-World](http://www.cirosantilli.com/elf-hello-world/)
* [Learn-X-in-Y-minutes](https://learnxinyminutes.com/)
* [Python-tutorials](https://bento.io/topic/python/tutorials)
* [Writing-a-Lisp-Haskell](http://reinvanderwoerd.nl/index.html)
* [LearnOpenGL](https://learnopengl.com/)
* [scratchpixel](http://www.scratchapixel.com/)
* [LearnOpenGLp-CN](http://bullteacher.com/category/zh_learnopengl_com)
* [MurrayC-compiler-experiments](https://github.com/murraycu/murrayc-compiler-experiments)
* [Cpp17](https://github.com/cpprefjp/site/wiki/cpp17)
* [ftmalloc](https://github.com/sudokuhk/ftmalloc)
* [windows-driver-doc](https://github.com/MicrosoftDocs/windows-driver-docs)
* [Human-Interface-Guidelines](https://developer.apple.com/design/)
* [Write-a-Linux-Cpp-Debugger](https://blog.tartanllama.xyz/c++/2017/03/21/writing-a-linux-debugger-setup/)
* [深入浅出-Java-Concurrency](http://www.blogjava.net/xylz/archive/2010/07/08/325587.html)
* [LinuxCommand](http://linuxcommand.org/)
* [Let's-code-a-TCP/IP-stack](http://www.saminiir.com/lets-code-tcp-ip-stack-1-ethernet-arp/)
* [Ethereum from scratch](https://ocalog.com/post/10/)
* [Regular-expression.info](http://www.regular-expressions.info/)
* [Security-Tools](https://zhuanlan.zhihu.com/p/28048495)
* [Writing-a-GCC-backend](https://kristerw.blogspot.se/2017/08/writing-gcc-backend_4.html)
* [Write-a-CPU-in-VHDL](http://labs.domipheus.com/blog/designing-a-cpu-in-vhdl-part-1-rationale-tools-method/)
* [Beautiful-concurrency/Haskell](https://www.schoolofhaskell.com/school/advanced-haskell/beautiful-concurrency)
* [render-papers/Graphics](https://zhuanlan.zhihu.com/p/28407938)
* [Request-for-RFC-explanation](https://request-for-explanation.github.io/podcast/)
* [Build-a-Simple-Database](https://cstack.github.io/db_tutorial/)


## Intellectual Breath
* [Openquestions](http://www.openquestions.com/oq-main.htm)
* [Number-Theory-Web](http://www.numbertheory.org/)
* [Interactive-Linear-Algebra](http://immersivemath.com/ila/index.html)
* [Companion-to-Lang-Algebra](https://math.berkeley.edu/~gbergman/.C.to.L/)

## Jokes/DDD/misc
* [Git-commit-message](https://chris.beams.io/posts/git-commit/)
* [Hack-escape-VM](http://hn.premii.com/#/article/13898968)
* [BSD-Family-tree](https://github.com/freebsd/freebsd/blob/master/share/misc/bsd-family-tree)
* [IOCCC](http://www.ioccc.org/years.html)
* [C++-FQA](http://yosefk.com/c++fqa/)
* [Typical-code-comment](https://www.reddit.com/r/ProgrammerHumor/comments/60adxr/typical_code_comments/)
* [Consolia-comic](https://consolia-comic.com/)
* [xkcd](https://xkcd.com)
* [Explain-xkcd](http://www.explainxkcd.com/wiki/index.php/Main_Page)
* [turnoff.us](http://turnoff.us/geek)
* [Emojipedia](https://emojipedia.org/)

## MOOC/Class
* [MIT-OCW](https://ocw.mit.edu/courses/electrical-engineering-and-computer-science/)
* [UCB](http://webcast.berkeley.edu/series.html#c,d,Computer_Science)
* [�ε�Haskell](http://www.iqiyi.com/u/1355304922)
* [CIS194-Intro-Haskell](http://www.seas.upenn.edu/~cis194/fall16/index.html)
* [UCB-MOOC-Archive](https://archive.is/D1Ail)
* [Advanced-compilers](http://matt.might.net/teaching/advanced-compilers/2013-fall/)
* [CSAPP-LAB](http://csapp.cs.cmu.edu/3e/labs.html)
* [ParsingBeyondCFG](https://user.phil.hhu.de/~kallmeyer/ParsingBeyondCFG/)
* [Compilers-PLT](http://web.cs.wpi.edu/~kal/courses/cs4533/)
* [BCPierce/PLT](http://www.cis.upenn.edu/~bcpierce/)
* [FrankPfenning/PLT](https://www.cs.cmu.edu/~fp/courses.html)
* [Parallel and Sequential Data Structures and Algorithms](http://www.cs.cmu.edu/~15210/index.html)
* [Typed-tagless-final](http://okmij.org/ftp/tagless-final/course/#lecture)
* [Oregon Programming Languages Summer School](https://www.cs.uoregon.edu/research/summerschool/summer15/curriculum.html)
* [CS228-probabilistic graphical models](https://ermongroup.github.io/cs228-notes/)
* [15883-Computational-Models-of-Neural-System](http://www.cs.cmu.edu/afs/cs/academic/class/15883-f15/)
* [Linux Assembly HOWTO](http://tldp.org/HOWTO/Assembly-HOWTO/)
* [CSCI5828-Foundations-of-Software-Engineering](https://www.cs.colorado.edu/~kena/classes/5828/f14/lectures/)
* [Robert-Harper](https://scs.hosted.panopto.com/Panopto/Pages/Sessions/List.aspx?#folderID=%2207756bb0-b872-4a4a-95b1-b77ad206dab3%22)
* [Data Structures and Functional Programming](http://www.cs.cornell.edu/courses/cs3110/2017sp/lecture_notes.php)
* [Computer System](http://www.cs.cornell.edu/courses/cs3410/2017sp/)
* [TeachYourselfLogic](http://www.logicmatters.net/tyl/)
* [Category-Theory](https://www.youtube.com/user/TheCatsters#p/u/68/xqLgGB7Hv7g)
* [Theory of Language Translation](http://www.cs.umd.edu/~mvz/cmsc430-s07/)
* [COS-326-Functional-Programming](http://www.cs.princeton.edu/courses/archive/fall16/cos326/)
* [CMU-15-317-Constructive Logic](http://symbolaris.com/course/constlog15-schedule.html)
* [CMU-15-816-Linear Logic](https://www.cs.cmu.edu/~fp/courses/15816-s12/)
* [MIT-18.783-Elliptic Curves](https://math.mit.edu/classes/18.783/2015/lectures.html)
* [Foundations-of-Software/PLT](https://fos2016.github.io/staff.html)
* [Practical-Deep-Learning](http://course.fast.ai/)
* [MIT-6.035-Compiler](http://6.035.scripts.mit.edu/sp16/schedule.html)
* [Reasoning about Action and High-Level Programs](http://www.cse.yorku.ca/~lesperan/Roma09PhDcourse/)
* [CSE-231-LLVM](https://cseweb.ucsd.edu/classes/fa15/cse231-a/part1.html)


## Papers
* [JMLR](http://jmlr.org/proceedings/)
* [ACM-Sigplan](http://www.sigplan.org/)
* [The-morning-paper](https://blog.acolyer.org/)
* [CMU-repo](http://repository.cmu.edu/compsci/)
* [ICFP](https://github.com/gasche)
* [render-time-rendering/Graphics](http://kesen.realtimerendering.com/)

## Quiz
* [Regex Golf](https://alf.nu/RegexGolf)
* [Cpp Quiz](http://cppquiz.org/)
* [Project-Euler](https://projecteuler.net/)
* [Project-Euler-CN](http://pe-cn.github.io/)
* [Deadlock-Empire](https://deadlockempire.github.io/)
* [SQL-WIndows-Function](http://www.windowfunctions.com/questions/0)

### Security
* [pwnable.tw](https://pwnable.tw/)
* [exploit-exercises](https://exploit-exercises.com/)
* [liveoverflow](http://liveoverflow.com/)
* 


## Serenpity
### 2017-3-13
* [正则表达式如何匹配 3 的倍数/DFA](https://www.zhihu.com/question/24824487)
* [状态机](https://www.zhihu.com/question/21090429)
* [TD-List-of-All](http://www.techiedelight.com/list-of-problems/)
* [Hashing=in=DS](http://www.techiedelight.com/hashing-in-data-structure/)
* [Recursion-quiz](http://www.techiedelight.com/recursion-practice-problems-with-solutions/)
* [STL-question](http://www.techiedelight.com/data-structures-and-algorithms-interview-questions-stl/)
* [unique_ptr-with-incomplete](http://stackoverflow.com/questions/9954518/stdunique-ptr-with-an-incomplete-type-wont-compile)
* [Top-10-Cpp-Bugs](https://www.viva64.com/en/b/0483/)
* [Whats-new-in-Cpp17](https://jfbastien.github.io/what-is-cpp17/)
* [gcc-builtin-function](http://stackoverflow.com/questions/23930588/how-gcc-handles-built-in-function)
* [���������鵥](https://zhuanlan.zhihu.com/p/20130808)
* [PLT�鵥](https://zhuanlan.zhihu.com/p/19917853?columnSlug=forallplt)
* [Type](https://www.zhihu.com/question/19918532)
* [Coroutine](http://www.cnblogs.com/xybaby/p/6406191.html)
* [Сparser](https://zhuanlan.zhihu.com/p/20178871?columnSlug=prattle)
* [not-inheritance-from-std::string](http://stackoverflow.com/questions/6006860/why-should-one-not-derive-from-c-std-string-class)

### 2017-3-14
* [universal-reference](https://isocpp.org/blog/2012/11/universal-references-in-c11-scott-meyers)
* [2016-most-popular-js](https://risingstars2016.js.org/zh/)
* [lvalue-rvalue-move-forward](http://blog.csdn.net/unituniverse2/article/details/6580733)
* [esp-ebp](http://blog.csdn.net/yang_yulei/article/details/45795591)

### 2017-3-15
* [BCNF/3NF/DB](http://www.cnblogs.com/ybwang/archive/2010/06/04/1751279.html)

### 2017-3-16
* [RCL-ROL/Assembly](http://www.myexception.cn/assembly-language/802293.html)
* [FSG-shell](http://www.2cto.com/os/201507/416726.html)
* [Python-topic-mining](http://ahmedbesbes.com/how-to-mine-newsfeed-data-and-extract-interactive-insights-in-python.html)
* [Python-change-opcode](https://zhuanlan.zhihu.com/p/25850970)
* [simple-fork/Linux](http://blog.csdn.net/jason314/article/details/5640969)

### 2017-3-19
* [Magic-get/Cpp](http://purecpp.org/?p=1074)
* [200M-LFS](https://l-lfsp200.rhcloud.com/)
* [Quake-square-root](https://www.zhihu.com/question/26287650/answer/32552231)
* [Python-code-confusing](https://www.v2ex.com/t/348602#reply21)
* [Good-vimrc](https://dougblack.io/words/a-good-vimrc.html)

### 2017-3-20
* [descent-parser](http://www.craftinginterpreters.com/parsing-expressions.html)
* [self-hosting-c-compiler-40-days](http://www.sigbus.info/how-i-wrote-a-self-hosting-c-compiler-in-40-days.html)
* [Cpp17-new-property-2](https://zhuanlan.zhihu.com/p/25855097)

### 2017-3-22
* [paxos-in-25-lines](http://nil.csail.mit.edu/6.824/2015/notes/paxos-code.html)

### 2017-3-23
* [curry-vs-partial](https://www.zhihu.com/question/20459948)
* [Modern-cpp-vs-lisp](https://chriskohlhepp.wordpress.com/advanced-c-lisp/convergence-of-modern-cplusplus-and-lisp/)
* [SAM-complexity](https://zhuanlan.zhihu.com/p/25948077)
* [SAM-general-intro](https://huntzhan.org/suffix-automaton-tutorial/)
* [SAM-general-intro-2](http://blog.csdn.net/wmdcstdio/article/details/44780707)
* [n4661](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2017/n4661.html)

### 2017-3-24
* [Cpp-Now-17](http://purecpp.org/?p=1228)
* [Copy-memory-quickly](http://nadeausoftware.com/articles/2012/05/c_c_tip_how_copy_memory_quickly)

### 2017-3-25
* [Cpp-status](https://isocpp.org/std/status)
* [python-annotation-hack](https://www.v2ex.com/t/350274#;)

### 2017-3-26
* [iOS10-security-guide](https://www.apple.com/business/docs/iOS_Security_Guide.pdf)
* [programmer-competency-matrix](http://sijinjoseph.com/programmer-competency-matrix/)
* [Cpp-check-constexpr-variable](https://www.zhihu.com/question/57644416)

### 2017-3-27
* [17-Gauss](https://www.zhihu.com/question/26096850/answer/153666091)

### 2017-3-28
* [linux-aio](http://www.wzxue.com/linux-kernel-aio%E8%BF%99%E4%B8%AA%E5%A5%87%E8%91%A9/)
* [deep-dive-into-APL](http://hn.premii.com/#/article/13973812)
* [circle-to-julia](http://hn.premii.com/#/article/13976354)
* [PyFunctionObject](http://www.jianshu.com/p/d00108741a18)
* [template-keywords/cpp](http://www.aerialmantis.co.uk/blog/2017/03/17/template-keywords/)
* [python-metaclass](http://blog.jobbole.com/21351/)
* [python-__new__](http://www.cnblogs.com/dotxxx/p/4191620.html)

### 2017-3-29
* [traversing-tree-tail-recursively](http://lambda-startup.com/traversing-trees-tail-recursively/)
* [FFT](http://negiizhao.blog.uoj.ac/blog/2423)
* [Learn-redis-the-hard-way](http://tech.trivago.com/2017/01/25/learn-redis-the-hard-way-in-production/?)

### 2017-3-30
* [iostream-WTF](http://stackoverflow.com/questions/2753060/who-architected-designed-cs-iostreams-and-wouldit-still-be-considered-well)

### 2017-4-3
* [Parallel-vs-Sequential](http://s1l3n0.blogspot.jp/2013/04/serial-vs-parallel-sequential-vs.html)
* [Algorithm-W](https://zhuanlan.zhihu.com/p/26076902)
* [Schemeless-RPC](https://zhuanlan.zhihu.com/p/26140674)

### 2017-4-4
* [One-hole-Contexts](http://zhihu.com/question/49249958/answer/116474414)
* [Polymorphism_cast](http://tieba.baidu.com/p/962647505)
* [Godel's-Incomplete-Theorem](https://plato.stanford.edu/entries/goedel-incompleteness/)
* [Python-project-file](https://www.v2ex.com/t/352474)
* [GBA-by-example](http://kylehalladay.com/blog/tutorial/2017/04/04/GBA-By-Example-2.html)

### 2017-4-5
* [GADT](https://en.wikibooks.org/wiki/Haskell/GADT)
* [ADT](https://codewords.recurse.com/issues/three/algebra-and-calculus-of-algebraic-data-types)
* [Rust-optimization](http://robert.ocallahan.org/2017/04/rust-optimizations-that-c-cant-do.html?m=1)
* [Return-type-deduction](http://gulu-dev.com/post/2014-08-04-type-deduction)
* [First-website](http://info.cern.ch/)

### 2017-4-6
* [Devirtualization/gcc](https://zhuanlan.zhihu.com/p/23233548)
* [Devirtualization/c](http://hubicka.blogspot.jp/2014/01/devirtualization-in-c-part-1.html)
* [Fast-a+b](http://uoj.ac/submission/15232)
* [gcc-hash-sign](http://stackoverflow.com/questions/5370539/what-is-the-meaning-of-lines-starting-with-a-hash-sign-and-number-like-1-a-c)
* [Preprocessor-output](https://gcc.gnu.org/onlinedocs/cpp/Preprocessor-Output.html)
* [Inside-memory-management](https://www.ibm.com/developerworks/linux/library/l-memory/)
* [Python-decorator-closure](https://www.quora.com/What-is-the-difference-between-closures-and-decorators-in-Python)
* [HIDWORD](http://bbs.csdn.net/topics/380035824)
* [WebGL-water](http://madebyevan.com/webgl-water/)
* [Fun-with-Linux-terminal](http://blog.regehr.org/archives/1483)

### 2017-4-8
* [Reinvent-YCombinator](http://picasso250.github.io/2015/03/31/reinvent-y.html)
* [Ycombinator-origin](https://www.zhihu.com/question/21099081)
* [Dmd-boost-license](http://hn.premii.com/#/article/14060846)
* [enable_shared_from_this](http://www.tuicool.com/articles/NJVjIv)
* [Brzozowski-derivative](https://en.wikipedia.org/wiki/Brzozowski_derivative)
* [Brzozowski-derivative-general](http://cstheory.stackexchange.com/questions/3280/generalizations-of-brzozowskis-method-of-derivatives-of-regular-expressions-to)
* [Dependent-types-in-half-of-D](http://www.infognition.com/blog/2015/dependent_types_in_d.html)
* [OOP-Alan-Kay](http://lists.squeakfoundation.org/pipermail/squeak-dev/1998-October/017019.html)
* [Alan-Kay-Definition-of-OOP](http://wiki.c2.com/?AlanKaysDefinitionOfObjectOriented)

### 2017-4-9
* [Call/cc-discussion](https://www.zhihu.com/question/21954238)
* [Coroutine-call-cc](http://www.tuicool.com/articles/BjyYrqI)
* [NFA-DFA-FA](http://www.cnblogs.com/Ninputer/archive/2011/06/12/2078671.html)
* [Alg-cheatsheet](http://snailya.org/posts/02-algorithm-cheatsheet.html)
* [pxls.space](http://pxls.space/)
* [The-New-C](http://www.drdobbs.com/the-new-c-integers-in-c99-part-1/184401323)
* [Understand-dynamic-loading/Cpp](http://edoren.me/blog/dynamic_library_loading_cpp/)
* [Two-phase-lookup-and-MSVC/Cpp](http://stackoverflow.com/questions/6273176/what-exactly-is-broken-with-microsoft-visual-cs-two-phase-template-instanti)
* [k-CFA/PLT](http://matt.might.net/articles/implementation-of-kcfa-and-0cfa/)
* [Max-product-in-N](http://www.techiedelight.com/maximum-product-rod-cutting/)
* [Torch/LuaJIT](http://torch.ch/)

### 2017-4-10
* [De-Brujin](http://blog.163.com/qiukl1987@126/blog/static/9809584920121125101249199/)
* [Any-no-move-only](https://www.reddit.com/r/cpp/comments/4fyt3v/why_doesnt_stdany_support_move_only_types/)
* [Nonstandard-Behavior](https://msdn.microsoft.com/en-us/library/x84h5b78.aspx)
* [CPS-Coroutine](https://zhuanlan.zhihu.com/p/25964339)
* [CPS](https://zhuanlan.zhihu.com/p/22721931)
* [Call/cc-fork/C](http://mainisusuallyafunction.blogspot.jp/2012/02/continuations-in-c-with-fork.html)
* [call/cc-proposal/Cpp](http://open-std.org/JTC1/SC22/WG21/docs/papers/2017/p0534r0.pdf)
* [Yinyang-puzzle](https://www.zhihu.com/question/27683900)
* [Yinyang-puzzle-clearer](http://www.jianshu.com/p/b5d0c72ab1cc)

### 2017-4-11
* [Output-without-stdio](http://zuoxinyu.xyz/C-C/Output-whithout-stdio/)
* [boxing-unboxing-java](http://www.cnblogs.com/danne823/archive/2011/04/22/2025332.html)
* [Dotty/scala](http://dotty.epfl.ch/)
* [list-of-languages-compile-to-JS](https://github.com/jashkenas/coffeescript/wiki/List-of-languages-that-compile-to-JS)
* [O(1)-stack=min](http://blog.csdn.net/x_y_r129/article/details/50854931)

### 2017-4-12
* [pi-calculus](https://golem.ph.utexas.edu/category/2009/08/the_pi_calculus.html)
* [pi-calculus-ii](https://golem.ph.utexas.edu/category/2009/09/the_pi_calculus_ii.html)
* [pi-diagram](http://bhuztez.github.io/pi-diagram/)
* [Haskell-lifting](http://stackoverflow.com/questions/2395697/haskell-what-is-lifting)

### 2017-4-13
* [point-free](https://eiriktsarpalis.wordpress.com/2017/04/02/programming-in-the-point-free-style/)
* [Four-color-alg](http://www.cnblogs.com/moondark/p/3594188.html)

### 2017-4-14
* [How-we-build-r/place](https://redditblog.com/2017/04/13/how-we-built-rplace/)
* [curry-vs-partial](https://gist.github.com/ukari/6b8997d5a5dba4df9358cfb09496d5c5)
* [binary-gcd](http://chaishushan.blog.163.com/blog/static/13019289720091154384779/)

### 2017-4-15
* [What pure functional programming is all about: Part 1](https://www.fpcomplete.com/blog/2017/04/pure-functional-programming)

### 2017-4-16
* [eq-eqv-equal](http://stackoverflow.com/questions/16299246/what-is-the-difference-between-eq-eqv-equal-and-in-scheme)
* [Minimal-CRT](https://msdn.microsoft.com/en-us/library/bb985746.aspx)
* [Makefile-hacks](https://blog.melski.net/2010/11/30/makefile-hacks-print-the-value-of-any-variable/)
* [UB-and-optimization](https://www.slideshare.net/linaroorg/bkk16503-undefined-behavior-and-compiler-optimizations-why-your-program-stopped-working-with-a-newer-compiler)
* [ÿ��C����ԱӦ��֪����δ������Ϊ](http://blog.csdn.net/monkey07118124/article/details/50588336)
* [Chrome-firefox-unicode-phishing](https://www.wordfence.com/blog/2017/04/chrome-firefox-unicode-phishing/)

### 2017-4-18
* [C++ exception handling internals](https://monoinfinito.wordpress.com/series/exception-handling-in-c/)
* [working va_arg implementation](https://forum.dlang.org/post/c72nnp$vr6$1@digitaldaemon.com)
* [std::move with std::shared_ptr in lambda](http://stackoverflow.com/questions/43319352/stdmove-with-stdshared-ptr-in-lambda)
* [Modify-Python-in-7mins](https://hackernoon.com/modifying-the-python-language-in-7-minutes-b94b0a99ce14)

### 2017-4-19
* [C#-DSL](https://msdn.microsoft.com/en-us/library/ee943825.aspx)
* [tail-call](https://en.wikipedia.org/wiki/Tail_call)
* [MMA-pattern-match](http://www.guokr.com/post/579176/)
* [Book-list](https://zhuanlan.zhihu.com/p/24752590)
* [what-programming-language-used-late-night](https://stackoverflow.blog/2017/04/19/programming-languages-used-late-night/)
* [restore-glibc](https://zhuanlan.zhihu.com/p/20062978)

### 2017-4-22
* [Fold-Church-Encoding-CPS](http://stackoverflow.com/questions/13575894/why-do-we-use-folds-to-encode-datatypes-as-functions)
* [Church-encoded datatypes in Haskell](http://www.cbdumas.com/posts/church_encoding.html)
* [Church-encoded datatypes in Haskell, part 2](http://www.cbdumas.com/posts/church_encoding2.html)
* [fold-function](https://en.wikipedia.org/wiki/Fold_(higher-order_function))
* [Metaprogramming-less-fun-D](https://epi.github.io/2017/03/18/less_fun.html)
* [Why-MIT-Scheme-To-Python](https://www.wisdomandwonder.com/link/2110/why-mit-switched-from-scheme-to-python)
* [Lambda Calculus Live Tutorial with Klipse: Boolean Algebra](http://blog.klipse.tech/lambda/2016/07/24/lambda-calculus-2.html)
* [Replacing Disqus with GitHub Comments](http://donw.io/post/github-comments/)
* [Haskell-forall](http://stackoverflow.com/questions/3071136/what-does-the-forall-keyword-in-haskell-ghc-do)
* [Haskell-newtype](http://www.jianshu.com/p/bf6c9dbe7346)
* [Neural Networks, Types, and Functional Programming](http://colah.github.io/posts/2015-09-NN-Types-FP/)


### 2017-4-23
* [The oldest temporary hack in the Linux kernel](http://kazet.co/2016/04/29/temporary-hacks.html)

### 2017-4-24
* [Evolution-of-a-Haskell-Programmer](http://www.willamette.edu/~fruehr/haskell/evolution.html)

### 2017-4-25
* [EDSL](https://wiki.haskell.org/Embedded_domain_specific_language)
* [overcommit-OOM](http://www.win.tue.nl/~aeb/linux/lk/lk-9.html#ss9.6)
* [Coroutines and Reference Parameters](https://toby-allsopp.github.io/2017/04/22/coroutines-reference-params.html)
* [free-monads-in-cpp](https://toby-allsopp.github.io/2016/10/12/free-monads-in-cpp.html)

### 2017-4-26
* [VSC-2017-4](https://blogs.msdn.microsoft.com/vcblog/2017/04/25/visual-studio-code-cc-extension-april-2017-update/)

### 2017-4-27
* [Animated-Bezier](https://www.jasondavies.com/animated-bezier/)
* [Category-Theory-Syntactically](http://www.hedonisticlearning.com/posts/category-theory-syntactically.html)
* [Visual-lexicon-LINQ](https://www.simple-talk.com/dotnet/net-development/visual-lexicon-linq/)
* [linux-programming-signals-the-easy-way](https://www.stev.org/post/linuxprogrammingsignalstheeasyway)

### 2017-4-28
* [pygit](http://benhoyt.com/writings/pygit/)
* [adventures-in-parsec](http://panicsonic.blogspot.jp/2009/12/adventures-in-parsec.html)
* [foldl->foldr](https://zhuanlan.zhihu.com/p/26573107)
* [A-serious-bug-in-GCC](https://akrzemi1.wordpress.com/2017/04/27/a-serious-bug-in-gcc/)
* [Church-Encoding-lists](http://benji6.github.io/church/docs/lists.html)
* [2017-PyData](https://medium.com/@srdjan.santic/interesting-talks-from-pydata-amsterdam-2017-db009ca7c832)
* [Catalan-number](http://blog.csdn.net/u010582082/article/details/69569237)
* [UTF-9](https://github.com/enricobacis/utf9)
* [Monads-in-Cpp](https://bartoszmilewski.com/2011/07/11/monads-in-c/)
* [Free-monads-in-cpp](https://toby-allsopp.github.io/2016/10/12/free-monads-in-cpp.html)
* [If Linux kernel were exposed as COM interfaces Raw](https://gist.github.com/chenshuo/867174)
* [aliasing-constructor-shared-ptr](http://codesynthesis.com/~boris/blog/2012/04/25/shared-ptr-aliasing-constructor/)
* [state-machine-impl](http://wisol.ch/w/articles/2015-03-27-state-machine-impl/)

### 2017-4-29
* [some stupid security](https://www.troyhunt.com/reckon-youve-seen-some-stupid-security-things-here-hold-my-beer/)
* [Haskell-Num-Type-Convert](http://www.jianshu.com/p/1c326391f077)

### 2017-4-30
* [GCC fails to optimize aligned std::array like C array](http://stackoverflow.com/questions/43651923/gcc-fails-to-optimize-aligned-stdarray-like-c-array#comment74352188_43651923)
* [Z80-godbolt](http://8bitworkshop.com/viz.html?redir=1&platform=base_z80&file=prng.c)
* [STL-for_each-return-function](http://stackoverflow.com/questions/2048967/why-does-stdfor-eachfrom-to-function-return-function)

### 2017-5-1
* [C++-Template-Haskell=TypeClass](http://stackoverflow.com/questions/4411279/haskell-typeclasses-and-c-template-classes)
* [OOP-vs-Typeclass](https://wiki.haskell.org/OOP_vs_type_classes)
* [How Many x86-64 Instructions Are There Anyway](https://stefanheule.com/blog/how-many-x86-64-instructions-are-there-anyway/)
* [VHDL-or-Verilog](http://fpgasite.blogspot.jp/2017/04/vhdl-or-verilog.html)
* [The Mother of all Monads](http://blog.sigfpe.com/2008/12/mother-of-all-monads.html)
* [no-returning-rvalue-reference](http://stackoverflow.com/questions/4986673/c11-rvalues-and-move-semantics-confusion-return-statement)
* [move-proposal](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2002/n1377.htm)
* [Optimize-Option](https://gcc.gnu.org/onlinedocs/gcc/Optimize-Options.html)
* [Mirrored-Lenses/Haskell](http://comonad.com/reader/2012/mirrored-lenses/)

### 2017-5-2
* [Intel-AMT-remote-vulnerability](https://mjg59.dreamwidth.org/48429.html)
* [How-to-create-AWS-python-lambda-function](https://www.fullstackpython.com/blog/aws-lambda-python-3-6.html)
* [Cpp-Integral-Conversion](https://zhuanlan.zhihu.com/p/26675068)
* [PWN2OWN-2017-Linux](https://zhuanlan.zhihu.com/p/26674557)
* [ctai-compile-time-x86](http://stryku.pl/poetry/ctai.php)
* [Applicative-other-than-monad-ziplist](http://stackoverflow.com/questions/2120509/applicative-functors-other-than-monads-and-ziplist)

### 2017-5-3
* [Not-lisp-again](https://funcall.blogspot.jp/2009/03/not-lisp-again.html)
* [GUI-Architecture](https://martinfowler.com/eaaDev/uiArchs.html)
* [SQL-43-Yrs](http://blog.sqlizer.io/posts/sql-43/)
* [I tried Haskell for 5 years and here’s how it was](https://metarabbit.wordpress.com/2017/05/02/i-tried-haskell-for-5-years-and-heres-how-it-was/)
* [passing-parameter-assembly](https://www.cs.uaf.edu/2010/fall/cs301/lecture/09_20_functions_parameters.html)
* [How to write x64 assembly functions in Visual C++](http://www.sciencezero.org/index.php?title=How_to_write_x64_assembly_functions_in_Visual_C%2B%2B)
* [X86-calling-conventions](https://en.wikipedia.org/wiki/X86_calling_conventions#x86-64_calling_conventions)
* [Function-parameter-eval-order-C/Cpp](http://stackoverflow.com/questions/9566187/function-parameter-evaluation-order)
* [Beginner-guide-python-nn-sklearn](https://www.springboard.com/blog/beginners-guide-neural-network-in-python-scikit-learn-0-18/)
* [SBrain-extended-brainfuck](https://silverwingedseraph.net/programming/2017/04/16/sbrain-an-extension-of-brainfzck.html)

### 2017-5-4
* [FP-Concurrency](https://softwareengineering.stackexchange.com/questions/195718/functional-programming-right-ideas-about-concurrency-and-state)
* [BS-Expectation-Cpp17](https://www.reddit.com/r/cpp/comments/49dgdb/why_i_am_not_happy_with_c17_c_17_outlook_march/)
* [Alternative-MonadPlus](https://en.wikibooks.org/wiki/Haskell/Alternative_and_MonadPlus)
* [Alternative-MonadPlus-Monoid](http://stackoverflow.com/questions/13080606/confused-by-the-meaning-of-the-alternative-type-class-and-its-relationship-to?noredirect=1&lq=1)
* [xanthe/Dlang](https://gitlab.com/sarneaud/xanthe)

### 2017-5-5
* [C#-GC](https://www.reddit.com/r/csharp/comments/69aime/what_are_good_resources_on_garbage_collection_in_c/)
* [Linus-node**](http://coolshell.cn/articles/8990.html)
* [No-Show-instance-function](https://wiki.haskell.org/Show_instance_for_functions)

### 2017-5-6
* [ST-vs-State](http://haskell.1045720.n5.nabble.com/ST-vs-State-td3192383.html)
* [()-in-Haskell](http://stackoverflow.com/questions/16892570/what-is-in-haskell-exactly)
* [Horror-in-libstdc++](https://www.zerotier.com/blog/2017-05-05-theleak.shtml)
* [Generating all permutations, combinations, and power set of a string (or set of numbers)](http://exceptional-code.blogspot.com/2012/09/generating-all-permutations.html)
* [Cpp-Modules-in-VS](https://blogs.msdn.microsoft.com/vcblog/2017/05/05/cpp-modules-in-visual-studio-2017/)
* [No-overlaping-circles](https://www.zhihu.com/question/53012468)

### 2017-5-7
* [When my base class’s constructor calls a virtual function on its this object, why doesn’t my derived class’s override of that virtual function get invoked?](https://isocpp.org/wiki/faq/strange-inheritance#calling-virtuals-from-ctors)
* [JSON-hijack](http://haacked.com/archive/2009/06/25/json-hijacking.aspx/)
* [JSON-while(1)](http://stackoverflow.com/questions/2669690/why-does-google-prepend-while1-to-their-json-responses)
* [Cpp-reflection-std::meta-reflexpr](http://matus-chochlik.github.io/mirror/doc/html/index.html)
* [Fun-with-Reflection-in-Cpp](http://jackieokay.com/2017/05/06/reflection2.html)
* [Cppx-meta](https://godbolt.org/g/Gcmdel)
* [Is It Time To Get Rid Of The Linux OS Model In The Cloud](http://highscalability.com/blog/2012/1/19/is-it-time-to-get-rid-of-the-linux-os-model-in-the-cloud.html)
* [shared_ptr==nullptr](https://segmentfault.com/q/1010000004078858)
* [this==nullptr](https://www.reddit.com/r/cpp_questions/comments/3roy3e/this_nullptr_can_this_ever_be_true/)
* [this==nullptr-2](http://stackoverflow.com/questions/21724951/do-compilers-assume-that-this-is-not-nullptr-in-debug-mode)
* [this==nullptr-3](https://www.viva64.com/en/b/0226/)
* [this==nullptr-4](https://www.viva64.com/en/w/V704/)
* [this==nullptr-5](https://hownot2code.com/2016/07/04/do-not-compare-this-to-nullptr-anymore/)

### 2017-5-8
* [The key differences between Python 2.7.x and Python 3.x with examples](http://sebastianraschka.com/Articles/2014_python_2_3_key_diff.html)
* [strong types are (mostly) free in C++](http://www.fluentcpp.com/2017/05/05/news-strong-types-are-free)
* [Is the preprocessor still needed in C++](http://foonathan.net/blog/2017/05/08/preprocessor.html)
* [COW-String](http://developer.51cto.com/art/201608/516340.htm)
* [四论-数理逻辑、类型论、抽象代数及范畴论](https://www.zhihu.com/question/37050853?sort=created)

### 2017-5-9
* [Build-gcc-7-in-WSL](https://solarianprogrammer.com/2017/05/04/building-gcc-wsl-windows-subsystem-linux/)
* [Functional Programming in Javascript === Garbage](http://awardwinningfjords.com/2014/04/21/functional-programming-in-javascript-equals-garbage.html)
* [mprotect](http://man7.org/linux/man-pages/man2/mprotect.2.html)
* [VirtualProtect](https://msdn.microsoft.com/en-us/library/windows/desktop/aa366898)

### 2017-5-10
* [HOAS-SKI](https://zhuanlan.zhihu.com/p/22231273)
* [Dynamic-Dispatch-in-Haskell](https://two-wrongs.com/dynamic-dispatch-in-haskell-how-to-make-code-extendable)
* [Python-unbuffer-output](http://stackoverflow.com/questions/107705/disable-output-buffering)

### 2017-5-11
* [C++17-in-VS2017.3](https://blogs.msdn.microsoft.com/vcblog/2017/05/10/c17-features-in-vs-2017-3/)
* [FizzBuzz](https://www.reddit.com/r/programming/comments/10d7w/fizzbuzz_spoilers/)
* [NN-FP](http://colah.github.io/posts/2015-09-NN-Types-FP/)
* [Thonny-Python-IDE](http://thonny.org/)

### 2017-5-12
* [dllexport-WINAPI-conflict](http://stackoverflow.com/questions/538134/exporting-functions-from-a-dll-with-dllexport)
* [IBM-memory-manage](https://www.ibm.com/developerworks/cn/linux/l-memory/)
* [glibc-malloc](https://code.woboq.org/userspace/glibc/malloc/malloc.c.html)
* [linked-list-sort-1-2-4-8](https://www.zhihu.com/question/47675652/answer/167696236)
* [DB-benchmark-5-10](https://www.techempower.com/benchmarks/?#section=data-r14)
* [WSL-openSUSE-Fedora](https://blogs.msdn.microsoft.com/commandline/2017/05/11/new-distros-coming-to-bashwsl-via-windows-store/)
* [The-year-of-Linux-Desktop-Reddit](https://www.reddit.com/r/linux/comments/6alcsr/the_year_of_the_linux_desktop/)
* [SciKit-GIFs](https://dashee87.github.io/data%20science/general/Clustering-with-Scikit-with-GIFs/)

### 2017-5-13
* [自然变换-Natural-Transformation](https://zh.wikipedia.org/wiki/%E8%87%AA%E7%84%B6%E8%AE%8A%E6%8F%9B)
* [Cpp-vs-Rust](https://www.reddit.com/r/cpp/comments/6asjmd/my_friend_keeps_trying_to_convince_me_to_use_rust/)
* [Natural-Transformation](https://www.johndcook.com/blog/2017/03/16/natural-transformations/)
* [Rewrite-BSD-like-1994-cat](https://www.youtube.com/watch?v=MCuzvy79WWQ)
* [constexpr-float](http://stackoverflow.com/questions/34665079/initializing-a-constexpr-with-a-const-int-vs-float)
* [What Every Programmer Should Know About Floating-Point Arithmetic](http://floating-point-gui.de/)
* [I-made-a-game-in-Rust](https://michaelfairley.com/blog/i-made-a-game-in-rust/)
* [Simon Peyton-Jones: Escape from the ivory tower: the Haskell journey](https://www.youtube.com/watch?v=re96UgMk6GQ)
* [Implement-cpp-borrow-checker](http://nibblestew.blogspot.com/2017/05/emulating-rust-borrow-checker-with-c.html)
* [std::async](https://bartoszmilewski.com/2011/10/10/async-tasks-in-c11-not-quite-there-yet/)
* [cpp-pointer-vs2015-bug](https://social.msdn.microsoft.com/Forums/sqlserver/en-US/15529acd-259b-488d-8961-13e834cdc1fe/c-pointer-to-member-nullptr-check-fails-with-multiple-inheritance?forum=vclanguage&prof=required)

### 2017-5-14
* [idiomatic Haskell-1](http://bitemyapp.com/posts/2014-12-03-why-are-types-useful.html)
* [idiomatic Haskell-2](http://bitemyapp.com/posts/2014-11-18-strong-types-and-testing.html)
* [The-Unsound-Playground](http://io.livecode.ch/learn/namin/unsound)
* [Declarative Control Flow](https://www.youtube.com/watch?v=WjTrfoiB0MQ)
* [Null-Reference-The-Billion-Dollar-Mistake](https://www.infoq.com/presentations/Null-References-The-Billion-Dollar-Mistake-Tony-Hoare)
* [Hands-on-Dotty](https://www.youtube.com/watch?v=aftdOFuVU1o)

### 2017-5-15
* [C++-object-model](https://zhihu.com/question/59810837/answer/169132185)
* [Linux-ELF-in-Windows](http://www.cnblogs.com/zkweb/p/6856879.html?from=timeline)

### 2017-5-16
* [“What part of Milner-Hindley do you not understand?”](http://stackoverflow.com/questions/12532552/what-part-of-milner-hindley-do-you-not-understand)
* [difference-between-auto-decltype(auto)](http://stackoverflow.com/questions/21369113/what-is-the-difference-between-auto-and-decltypeauto-when-returning-from-a-fun)
* [WannaCry-North-Korea](https://blog.comae.io/wannacry-links-to-lazarus-group-dcea72c99d2d)
* [Pyformat](https://pyformat.info/)
* [asm-view-of-call-convention](http://www.unixwiz.net/techtips/win32-callconv-asm.html)
* [Meizu-QR-code-analysis](https://zhuanlan.zhihu.com/p/26936016)
* [MS-calling-convention](http://www.cs.cornell.edu/courses/cs412/2001sp/resources/microsoft-calling-conventions.html)
* [x86-cdecl/stdcall](http://www.cs.cornell.edu/courses/cs412/2001sp/resources/microsoft-calling-conventions.html)
* [Timsort](https://en.wikipedia.org/wiki/Timsort)
* + linked-list connect sort (1 5 3 | 4 5 6 2 | 3 -> merge 1-3-5 2-4-5-6 3)
* [code-as-data](http://stackoverflow.com/questions/5833033/in-lisp-code-is-data-what-benefit-does-that-provide)

### 2017-5-17
* [Haskell-Bits](http://www.kovach.me/posts/2017-01-30-haskell-bits-randomness.html)
* [How misaligning data can increase performance 12x by reducing cache misses](https://danluu.com/3c-conflict/)
* [Design-by-Introspection-AA](https://www.youtube.com/watch?v=es6U7WAlKpQ)

### 2017-5-18
* [INLIN(E)ING-Haskell](http://mpickering.github.io/posts/2017-05-17-inlining-case-study.html)
* [std::allocator-deprecated-c++17](http://stackoverflow.com/questions/39414610/why-are-are-stdallocators-construct-and-destroy-functions-deprecated-in-c17)
* [SEH](http://www.pediy.com/kssd/pediy08/pediy8-308.htm)
* [SEH-Compiler](https://www.codeproject.com/Articles/2126/How-a-C-compiler-implements-exception-handling)
* [Callstack](http://www.cnblogs.com/saucerman/articles/3912157.html)
* [Setup-a-Hoogle](https://www.reddit.com/r/haskelltil/comments/6bsfqa/how_to_set_up_hoogle_for_a_particular_project_eg/)
* [TH-Haskell-And-recursive-type](https://www.reddit.com/r/haskellquestions/comments/6bt4iz/defining_two_types_whose_definitions_depend_on/)
* [Solve-GetVerson-Bug](http://blog.csdn.net/justfwd/article/details/44856277)
* [Macro-Type-Racket](https://zhuanlan.zhihu.com/p/26971686)
* [Schwartzian-Transform](https://en.wikipedia.org/wiki/Schwartzian_transform)

### 2017-5-19
* [git-log-pretty](http://www.cnblogs.com/bellkosmos/p/5923439.html)
* [Google-5K-Error-Page](https://slashcrypto.org/2017/05/17/5k_Error_Page/)
* [Let-them-paste-passwords](https://www.ncsc.gov.uk/blog-post/let-them-paste-passwords)
* [noexcept-container-in-vector](http://stackoverflow.com/questions/21320391/can-i-mark-a-classes-move-operation-noexcept-if-it-contains-a-standard-container)
* [Y-combinator](https://zhuanlan.zhihu.com/p/26995216)
* [C-main](http://imzlp.me/posts/15272/)
* [Cpp-simulate-hardware](https://blog.feabhas.com/2017/03/making-things-stuff-part-1/)

### 2017-5-20
* [nth-prime-estimation](https://math.stackexchange.com/questions/1270814/bounds-for-n-th-prime)
* [setjmp.h](https://zh.wikipedia.org/wiki/Setjmp.h)
* [setjmp](http://web.eecs.utk.edu/~huangj/cs360/360/notes/Setjmp/lecture.html)

### 2017-5-21
* [rust-for-semantics](http://www.asaj.org/talks/lola16/?full#cover)
* [Escape-hell-with-Monads](https://philipnilsson.github.io/Badness10k/posts/2017-05-07-escaping-hell-with-monads.html)
* [memorize-fib-difference](https://www.zhihu.com/question/60112058/answer/172415244)

### 2017-5-22
* [Hussling Haskell types into Hasse diagrams](http://blog.ezyang.com/2010/12/hussling-haskell-types-into-hasse-diagrams/)
* [Haskell-Lattice-Bottom](http://stackoverflow.com/questions/6379458/the-concept-of-bottom-in-haskell)
* [Haskell-undefined-vs-Java-null](http://stackoverflow.com/questions/3962939/whats-the-difference-between-undefined-in-haskell-and-null-in-java)
* [Linux-pipeline](http://blog.csdn.net/recordme/article/details/22102241)
* [UB-closer](https://software.intel.com/en-us/blogs/2016/02/05/undefined-behavior-is-closer-than-you-think)
* [Cpp-Accelerate-GPU-SYCL](https://blog.tartanllama.xyz/c++/2017/05/19/sycl/)


### 2017-5-23
* [oh-my-dear-js](https://thomas-yang.me/projects/oh-my-dear-js/)
* [Z3-prover-soduko](https://www.zhihu.com/question/60145535/answer/173343948)

### 2017-5-24
* [underscore-in-Python](https://dbader.org/blog/meaning-of-underscores-in-python#.)
* [a-brief-history-of-types](http://arcanesentiment.blogspot.com/2015/01/a-brief-history-of-type.html)
* [Precedence-vs-Sequence](https://stackoverflow.com/questions/5473107/operator-precedence-vs-order-of-evaluation)
* [Python-GIL](https://wiki.python.org/moin/GlobalInterpreterLock)

### 2017-5-25
* [u8-character](https://stackoverflow.com/questions/31970111/what-is-the-point-of-the-utf-8-character-literals-proposed-for-c17)
* [Cpp17-new](https://stackoverflow.com/questions/38060436/what-are-the-new-features-in-c17)
* [Scheme-delimited-continuation](https://zhuanlan.zhihu.com/p/25864185)
* [type-family=vs-data-family](https://stackoverflow.com/questions/20870432/type-family-vs-data-family-in-brief)

### 2017-5-26
* [Lazier function definitions by merging partial values](http://conal.net/blog/posts/lazier-function-definitions-by-merging-partial-values)
* [Write-fast-json-parser](https://chadaustin.me/2017/05/writing-a-really-really-fast-json-parser/)
* [partition-problem-with-order](http://www8.cs.umu.se/kurser/TDBA77/VT06/algorithms/BOOK/BOOK2/NODE45.HTM)
* [partition-problem](https://www.quora.com/A-group-of-N-integer-numbers-need-to-be-divided-fairly-into-K-subgroups-A-fair-division-is-that-the-max-of-the-sums-of-K-subgroups-is-minimal)

### 2017-5-27
* [class-template-argument-deduction-not-working-with-alias-template](https://stackoverflow.com/questions/41008092/class-template-argument-deduction-not-working-with-alias-template)

### 2017-5-28
* [dependent-type](https://www.douban.com/group/topic/2718805/)
* [GADT](https://en.wikipedia.org/wiki/Generalized_algebraic_data_type)
* [real-world-use-of-gadt](https://stackoverflow.com/questions/3859200/real-world-use-of-gadt)
* [existential-type](https://stackoverflow.com/questions/292274/what-is-an-existential-type)
* [longshao-CPU](https://bbs.kechuang.org/t/68167)
* [Draw Behind Desktop Icons in Windows 8+](https://www.codeproject.com/articles/856020/draw-behind-desktop-icons-in-windows)
* [hackett](https://lexi-lambda.github.io/blog/2017/05/27/realizing-hackett-a-metaprogrammable-haskell/)
* [TLA+](https://pron.github.io/posts/tlaplus_part1)
* [__vectorcall/__circcall/__cdecl/__thiscall/__stdcall/__fastcall](https://my.oschina.net/ray1421/blog/699540)
* [Why-windows-lock-file](https://www.zhihu.com/question/19830109)
* [save-9-GB-with-slots](http://tech.oyster.com/save-ram-with-python-slots/)

### 2017-5-29
* [List-of-Cpp-online-compiler](https://arne-mertz.de/2017/05/online-compilers/)
* [RankNTypes](https://www.reddit.com/r/haskell/comments/6doa7e/what_is_the_use_of_rankntypes_language_extension/)
* [Existential Quantification Patterns and Antipatterns](https://medium.com/@jonathangfischoff/existential-quantification-patterns-and-antipatterns-3b7b683b7d71)
* [外接CPU](https://www.zhihu.com/question/23954924)
* [cache-instruction-_mm_clfushopt/_mm_prefetch](https://stackoverflow.com/questions/36563277/x86-64-cache-load-and-eviction-instruction)
* [prefetch-example](https://stackoverflow.com/questions/7327994/prefetching-examples)
* [gcc-prefetch](https://gcc.gnu.org/projects/prefetch.html)
* [difference-between-static_if-and-if_constexpr](https://www.reddit.com/r/cpp/comments/4y4opt/what_is_the_difference_between_constexpr_if_and/)

### 2017-5-30
* [DataKinds-Haskell](https://stackoverflow.com/questions/20558648/what-is-the-datakinds-extension-of-haskell)
* [Term:Type:Kind:Sort](http://itscstime.blogspot.com/2011/02/term-type-kind-sort.html)
* [Haskell-Concepts](http://v.youku.com/v_show/id_XMTQ4ODgxNTMwMA==.html?from=y1.7-2)
* [Linux-Calltable-for-x86-64](http://blog.rchapman.org/posts/Linux_System_Call_Table_for_x86_64/)
* [static-inline-functon-cpp](https://stackoverflow.com/questions/10876930/should-one-never-use-static-inline-function)
* [GNU-inline](https://gcc.gnu.org/onlinedocs/gcc/Inline.html)
* [Monomorphism-Restriction-Haskell](https://stackoverflow.com/questions/32496864/what-is-the-monomorphism-restriction)

### 2017-5-31
* [one-past-end-address](https://stackoverflow.com/questions/988158/take-the-address-of-a-one-past-the-end-array-element-via-subscript-legal-by-the)
* [rand()-quality](https://www.zhihu.com/question/20222653)
* [Interprocedural optimization in GCC](https://kristerw.blogspot.com/2017/05/interprocedural-optimization-in-gcc.html)
* [自指](https://chaoli.club/index.php/3302/p1#p39948)
* [enough-big-num-C](https://chaoli.club/index.php/1004/p1#p15591)
* [cpp-lambda](http://okmij.org/ftp/cpp-digest/Lambda-CPP-more.html)
* [二段构造](http://www.cppblog.com/huaxiazhihuo/archive/2012/06/14/178799.aspx)
* [expression-template](http://www.flipcode.com/archives/Faster_Vector_Math_Using_Templates.shtml)

### 2017-6-1
* [n3538-restrict-in-cpp](http://www.open-std.org/JTC1/SC22/WG21/docs/papers/2013/n3538.html)
* [virtual-class-initialization](https://stackoverflow.com/questions/2126522/c-virtual-inheritance)
* [Are Mutable References Fast?/Haskell](https://medium.com/@jonathangfischoff/are-mutable-references-in-haskell-fast-f095f4144977)
* [CPU-features-for-debugging](https://www.reddit.com/r/cpp/comments/6elgsg/cpu_features_for_debugging/)
* [递归下降](https://www.zhihu.com/question/41077098)
* [上下文有关文法(CSG)](https://www.zhihu.com/question/52619126)

### 2017-6-2
* [void-as-literal-type-in-cpp1y/Cpp](https://bugs.llvm.org/show_bug.cgi?id=19714)
* [const-void/Cpp](https://stackoverflow.com/questions/37881240/what-is-const-void)
* [constexpr-parameter-cannot-user-defined/Cpp](https://mpark.github.io/programming/2017/05/26/constexpr-function-parameters/)
* [Pointer Overflow Checking is in LLVM](https://blog.regehr.org/archives/1518)
* [多边形内接最大三角形-O(n)-错误](https://zhuanlan.zhihu.com/p/27222683?group_id=854098576312274944)

### 2017-6-3
* [superpipeline-superscalar/CPU](http://personal.denison.edu/~bressoud/cs281-s10/Supplements/pipelining.pdf)
* [超标量-超流水线/CPU](http://blog.csdn.net/do2jiang/article/details/4545889)
* [RISC-CISC/CPU](http://blog.csdn.net/shinezhang86/article/details/48393203)
* [mbcs-unicode](https://stackoverflow.com/questions/3298569/difference-between-mbcs-and-utf-8-on-windows)
* [MonadTransformer/Haskell](http://cnhaskell.com/chp/18.html)
* [STM/Haskell](http://cnhaskell.com/chp/28.html)
* [Strong-type-no-core-dump-?/Haskell](https://www.zhihu.com/question/19780166)

### 2017-6-4
* [create-a-breakpoint/C](https://stackoverflow.com/questions/4326414/set-breakpoint-in-c-or-c-code-programmatically-for-gdb-on-linux)
* [CRTP-detection-cannot-construct/Cpp](https://www.zhihu.com/question/51297276)
* [Write-Linux-Kernel-in-Rust](https://dominuscarnufex.github.io/cours/rs-kernel/en.html)
* [Report-error-in-Haskell](http://blog.ezyang.com/2011/08/8-ways-to-report-errors-in-haskell-revisited/)
* [Eleven Reasons to use Haskell as a Mathematician](http://blog.sigfpe.com/2006/01/eleven-reasons-to-use-haskell-as.html)
* [constexpr-quicksort-Cpp17](http://playfulprogramming.blogspot.com/2017/06/constexpr-quicksort-in-c17.html)
* [exception-handling-cpp-abi](https://monoinfinito.wordpress.com/series/exception-handling-in-c/)
* [void_t-is-partialization](https://stackoverflow.com/questions/27687389/how-does-void-t-work)
* [vector-growth-speed](https://github.com/facebook/folly/blob/master/folly/docs/FBVector.md)


### 2017-6-5
* [empty-infinite-loop-ub?](https://stackoverflow.com/questions/3592557/optimizing-away-a-while1-in-c0x)
* [template-type-covariance](https://stackoverflow.com/questions/2203388/c-templates-polymorphism)
* [string.data](https://stackoverflow.com/questions/34155390/why-doesnt-stdstring-data-provide-a-mutable-char)
* [nested-namespace-extern-C](https://stackoverflow.com/questions/28996944/extern-c-linkage-inside-c-namespace)
* [dependent-type/Scala](http://japgolly.blogspot.com/2017/06/dependently-typed-functions.html)
* [list-metaprogramming-for-Cpp/Clojure/Cpp](https://deque.blog/2017/06/05/lisp-meta-programming-for-c-developers-automatic-traces-part-2/)
* [find-difference-pair/Alg](https://stackoverflow.com/questions/22282066/find-pairs-with-given-difference)
* [async-in-linux-epoll-select-poll/Linux](https://jvns.ca/blog/2017/06/03/async-io-on-linux--select--poll--and-epoll/)
* [reserved-identifiers-for-underscore/Cpp](https://stackoverflow.com/questions/228783/what-are-the-rules-about-using-an-underscore-in-a-c-identifier)


### 2017-6-6
* [Scheme-Type/Scheme](https://www.zhihu.com/question/21089222)
* [luogu-A+B/Alg](https://www.luogu.org/wiki/show?name=%E9%A2%98%E8%A7%A3+P1001)
* [standard=layout/Cpp](https://msdn.microsoft.com/en-us/library/mt767760.aspx)
* [non-trivially-copyable-memcpy/Cpp](https://stackoverflow.com/questions/29777492/why-would-the-behavior-of-stdmemcpy-be-undefined-for-objects-that-are-not-triv)
* [unordered_map-erase-before-Cpp14-UB/Cpp](https://stackoverflow.com/questions/38468844/erasing-elements-from-unordered-map-in-a-loop)
* [assignment-:=-or-=](https://en.wikipedia.org/wiki/Assignment_(computer_science))

### 2017-6-7
* [adder-overflow-detection](http://www.c-jump.com/CIS77/CPU/Overflow/lecture.html)
* [c++-exception](https://www.zhihu.com/question/22889420)
* [Cleaner, more elegant, and wrong](https://blogs.msdn.microsoft.com/oldnewthing/20040422-00/?p=39683)
* [Cleaner, more elegant, and harder to recognize](https://blogs.msdn.microsoft.com/oldnewthing/20050114-00/?p=36693/)
* [member-function-template-non-namespace-scope-explicit-specialization](https://stackoverflow.com/questions/3052579/explicit-specialization-in-non-namespace-scope?noredirect=1&lq=1)
* [webassembly-101](http://blog.openbloc.fr/webassembly-first-steps/)

### 2017-6-8
* [lookahead-adder](http://www.yalewoo.com/alu_adder.html)
* [ALU-one-adder](http://www.c-jump.com/CIS77/CPU/Overflow/lecture.html)

### 2017-6-9
* [code-as-data](https://stackoverflow.com/questions/28267029/what-does-code-as-data-mean)
* [ie-old-bugs](http://www.freebuf.com/articles/web/136299.html)
* [A-early-look-of-C#7.1-1](https://www.infoq.com/news/2017/06/CSharp-7.1-a?utm_source=infoq&utm_medium=popular_widget&utm_campaign=popular_content_list&utm_content=homepage)
* [A-early-look-of-C#7.1-2](https://www.infoq.com/news/2017/06/CSharp-7.1-b?utm_source=infoq&utm_medium=popular_widget&utm_campaign=popular_content_list&utm_content=homepage)
* [stateful-stateless](http://blog.csdn.net/zhoumingp/article/details/50457203)
* [TCP/IP-OSI](http://blog.csdn.net/superjunjin/article/details/7841099)
* [repeated-move-in-boost-asio](https://stackoverflow.com/questions/17715794/repeated-stdmove-on-an-boostasio-socket-object-in-c11)
* [difference-between-32bit-64bit-programming](https://www.reddit.com/r/learnprogramming/comments/6g24r5/whats_the_difference_between_32_bit_and_64_bit/)

### 2017-6-10
* [openbsd-daily](https://blog.tintagel.pl/2017/06/09/openbsd-daily.html)
* [JPEG](https://zhuanlan.zhihu.com/p/27296876)
* [BDE-allocator](https://github.com/bloomberg/bde/wiki/BDE-Allocator-model)
* [allocator-vs-new](https://stackoverflow.com/questions/31358804/whats-the-advantage-of-using-stdallocator-instead-of-new-in-c?noredirect=1&lq=1)
* [gcc-generate-memmove-instead-of-memcpy/Cpp](https://stackoverflow.com/questions/37175209/why-does-gcc-generate-a-memmove-instead-of-a-memcpy-for-copying-a-stdvector)
* [compile-time-jump-table](https://stackoverflow.com/questions/908256/getting-template-metaprogramming-compile-time-constants-at-runtime)

### 2017-6-11
* [Diting0x-concurrency](http://www.chongh.wiki/categories/High-performance/)
* [Translating a C++ parser to Haskell](http://www.haskellforall.com/2017/06/translating-c-parser-to-haskell.html)

### 2017-6-12
* [Memory-barrier/Cpp](https://stackoverflow.com/questions/8841738/c-memory-barriers-for-atomics)
* [volatile-vs-atomic/Cpp](https://stackoverflow.com/questions/12878344/volatile-in-c11)
* [asm volatile("" ::: "memory")-gcc/Cpp](https://stackoverflow.com/questions/14950614/working-of-asm-volatile-memory)
* [volatile-cpp-microsoft/Cpp](https://docs.microsoft.com/zh-cn/cpp/cpp/volatile-cpp)
* [volatile-cpp-gcc/Cpp](https://gcc.gnu.org/onlinedocs/gcc/Volatiles.html)
* [Init-in-Cpp-is-bonker](https://accu.org/index.php/journals/2379)

### 2017-6-13
* [atomic-signal-fence](https://stackoverflow.com/questions/14581090/how-to-correctly-use-stdatomic-signal-fence)
* [compile-time-fence](https://stackoverflow.com/questions/18449291/when-is-a-compiler-only-memory-barrier-such-as-stdatomic-signal-fence-useful?rq=1)
* [Memory Ordering at Compile Time](http://preshing.com/20120625/memory-ordering-at-compile-time/)
* [asm-vs-fence](https://stackoverflow.com/questions/40579342/is-there-any-compiler-barrier-which-is-equal-to-asm-memory-in-c11)
* [scanner-less-parsing](https://en.wikipedia.org/wiki/Scannerless_parsing)
* [sort-semantics](https://cs.stackexchange.com/questions/11735/what-is-a-sort-in-programming-language-semantics)
* [cerr-flush](https://stackoverflow.com/questions/6027034/why-cerr-flushes-the-buffer-of-cout)
* [how-is-GNU-yes-efficient](https://news.ycombinator.com/item?id=14542938)
* [next-permutation/Cpp/Alg](http://blog.csdn.net/c18219227162/article/details/50301513)
* [std::pair的复杂异常安全](https://code.woboq.org/llvm/include/c++/6.3.1/bits/stl_pair.h.html)
* [Exception-Handling](https://msdn.microsoft.com/en-us/library/4t3saedz.aspx)
* [exception-handling-in-C++](https://stackoverflow.com/questions/490773/how-is-the-c-exception-handling-runtime-implemented)
* [Exception-handling-wiki](https://zh.wikipedia.org/wiki/%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86)
* [ifstream.eof](https://stackoverflow.com/questions/4533063/how-does-ifstreams-eof-work)

### 2017-6-14
* [write-a-unix-shell](https://indradhanush.github.io/blog/writing-a-unix-shell-part-2/)
* [statement-expression](https://gcc.gnu.org/onlinedocs/gcc/Statement-Exprs.html)
* [TCPL-ub-which-changed-in-function-parameter-evalutaion-order-Cpp17](https://stackoverflow.com/questions/27158812/does-this-code-from-the-c-programming-language-4th-edition-section-36-3-6-ha/27158813#27158813)
* [rust-as-a-gateway-drug-to-Haskell](http://xion.io/post/programming/rust-into-haskell.html)
* [vtable-entry-itanium/Cpp](https://stackoverflow.com/questions/5712808/what-is-the-first-int-0-vtable-entry-in-the-output-of-g-fdump-class)

### 2017-6-15
* [blocking-non-blocking-verilog](http://www.cnblogs.com/xd-elegant/p/3982274.html)
* [WASAPI](https://stackoverflow.com/questions/37468283/how-to-get-below-10ms-latency-using-wasapi-shared-mode#)
* [lambda-function-pointer-compare](https://stackoverflow.com/questions/3988869/c-lambda-operator)

### 2017-6-16
* [shared_ptr-performance-problem](https://stackoverflow.com/questions/3628081/shared-ptr-horrible-speed)
* [CriticalSecion-by-WaitonAddress](https://blogs.msdn.microsoft.com/oldnewthing/20160825-00/?p=94165)
* [llvm-dynamic-cast](https://www.zhihu.com/question/61101212)

### 2017-6-17
* [switch-assembly](https://www.codeproject.com/Articles/100473/Something-You-May-Not-Know-About-the-Switch-Statem)
* [mmap-faster-than-sequential-IO](https://stackoverflow.com/questions/9817233/why-mmap-is-faster-than-sequential-io)
* [mmap-cnblog](http://www.cnblogs.com/charlesblc/p/6263665.html)
* [member-template-function-cannot-be-virtual](https://stackoverflow.com/questions/2354210/can-a-c-class-member-function-template-be-virtual)
* [ISPC-Intel-SPMD-Program-Compiler](http://ispc.github.io/documentation.html)
* [VLA-implement](https://stackoverflow.com/questions/21182307/how-does-gcc-implement-variable-length-arrays)
* [implement-alloca](https://stackoverflow.com/questions/714692/alloca-implementation)
* [Heegner number](http://zhihu.com/question/51033691/answer/134759209)
* [rust-fv](https://zhuanlan.zhihu.com/p/27438530)
* [Idris-over-Haskell](https://deque.blog/2017/06/14/10-things-idris-improved-over-haskell/)


### 2017-6-19
* [java-value-type](http://cr.openjdk.java.net/~jrose/values/values-0.html)
* [direct-value-type-proposal](http://cr.openjdk.java.net/~dlsmith/values.html)
* [avoid-unboxing](http://blog.zhaojie.me/2013/04/dont-go-half-way-of-preventing-boxing.html)
* [visual-c++-is-so-liberal-avoid-nonconst-lvalue-ref-bind-to-rvalue](http://www.asawicki.info/news_1482_visual_c_is_so_liberal.html)
* [haskell-practice](http://zhihu.com/question/61225796/answer/185412037)
* [wire-reg-verilog](https://www.zhihu.com/question/21021718)
* [FSM-PDA-TM](https://www.zhihu.com/question/22303575)
* [dir-overflow](http://zhihu.com/question/46394184/answer/185429008)


### 2017-6-20
* [find_if-native-STL-for-loop](https://kristerw.blogspot.jp/2017/06/a-look-at-range-v3-code-generation.html?m=1)
* [inside-D's-GC](http://olshansky.me/gc/runtime/dlang/2017/06/14/inside-d-gc.html)
* [move-only-vector-initializer-list](https://stackoverflow.com/questions/8468774/can-i-list-initialize-a-vector-of-move-only-type)
* [Tinix/OS](https://github.com/bajdcc/tinix)
* [GNU-GPL-v2](https://jxself.org/translations/gpl-2.zh.shtml)
* [ISO-C-forbid-void*-function-pointer](https://stackoverflow.com/questions/14134245/iso-c-void-and-function-pointers)
* [dlsym-2004](http://pubs.opengroup.org/onlinepubs/009695399/functions/dlsym.html)
* [dlsym-2016](http://pubs.opengroup.org/onlinepubs/9699919799/functions/dlsym.html)
* [assign-deassign-force-release](http://www.eefocus.com/xiaxing_fpga/blog/11-08/230004_7058d.html)
* [scanf-printf-in-libc](https://stackoverflow.com/questions/2199076/printf-and-scanf-work-without-stdio-h-why)
* [auto-stdio](https://stackoverflow.com/questions/4654147/without-including-stdio-h)

### 2017-6-21
* [behavior-tree](http://blog.renatopp.com/2014/07/25/an-introduction-to-behavior-trees-part-1/)
* [horrible-union-with-undefined-behavior](https://stackoverflow.com/questions/13334703/implementation-of-c-cast)

### 2017-6-22
* [Rust-vs-C++](http://mainisusuallyafunction.blogspot.com/2017/06/a-rust-view-on-effective-modern-c.html)
* [common-ub](https://stackoverflow.com/questions/367633/what-are-all-the-common-undefined-behaviours-that-a-c-programmer-should-know-a)

### 2017-6-23
* [FreeMonadInterpreter/F#](http://fssnip.net/7SX/title/Freemonad-interpreter)
* [VS-RTC-0c0h](https://stackoverflow.com/questions/4024492/can-anyone-help-me-interpret-this-simple-disassembly-from-windbg)
* [Challenges of Debugging Optimized x64 Code](https://blogs.msdn.microsoft.com/ntdebugging/2009/01/09/challenges-of-debugging-optimized-x64-code/)
* [7-ways-for-better-Cpp-code](http://www.fluentcpp.com/2017/06/23/7-ways-better-cpp-summer/)
* [64bit-fastcall-reserve-stack-shadow-space](https://stackoverflow.com/questions/21991961/fastcall-what-happens-with-the-stack)
* [x64-calling-convention](http://www.cnblogs.com/shines77/p/3788514.html?utm_source=tuicool&utm_medium=referral)
* [Stack frame layout on x86-64](http://eli.thegreenplace.net/2011/09/06/stack-frame-layout-on-x86-64)

### 2017-6-24
* [weak-callback-bind-weak_ptr](https://stackoverflow.com/questions/11680680/binding-to-a-weak-ptr)
* [weak-callback-weak_ptr](http://blog.csdn.net/pi9nc/article/details/19325653)
* [CESU-8-UTF-16](https://en.wikipedia.org/wiki/CESU-8)
* [Exploring Kotlin’s hidden costs — Part 1](https://medium.com/@BladeCoder/exploring-kotlins-hidden-costs-part-1-fbb9935d9b62)
* [Exploring Java's hidden costs](https://news.realm.io/news/360andev-jake-wharton-java-hidden-costs-android/)
* [torrent-sites](https://www.lifewire.com/top-torrent-sites-alternatives-to-kat-2483512)
* [C-extern-inline](https://stackoverflow.com/questions/216510/extern-inline)
* [C-inline-undefined-reference](https://stackoverflow.com/questions/6312597/is-inline-without-static-or-extern-ever-useful-in-c99)

### 2017-6-25
* [inline-cpp-internal-entity](http://www.alinshans.com/2017/05/23/p1705231/)
* [RFC-character-sets](https://www.iana.org/assignments/character-sets/character-sets.xhtml)
* [llvm-says-no-global-static-ctor](https://stackoverflow.com/questions/1271248/c-when-and-how-are-c-global-static-constructors-called)
* [Python-package-phishing](http://paper.seebug.org/326/)
* [test-32-64-bit-golf](https://codegolf.stackexchange.com/questions/127322/is-my-os-32-bit-or-64-bit)
* [member-initializer-list](https://stackoverflow.com/questions/926752/why-should-i-prefer-to-use-member-initialization-list)
* [smart-pointer-bad-idea](https://www.zhihu.com/question/61008381)
* [difference-between-shared_ptr-make_shared](https://stackoverflow.com/questions/20895648/difference-in-make-shared-and-normal-shared-ptr-in-c)
* [object-files](https://stackoverflow.com/questions/23615282/object-files-vs-library-files-and-why)
* [xvalue-ends-when-full-expression-evaluated](https://stackoverflow.com/questions/2506793/c-life-span-of-temporary-arguments)
* [is-std::atomic_compare_and_exchange-implementable](https://herbsutter.com/2014/02/19/reader-qa-is-stdatomic_compare_exchange_-implementable/)
* [LZ4](https://ticki.github.io/blog/how-lz4-works/)

### 2017-6-26
* [MSVC-not-support-x64-asm](https://stackoverflow.com/questions/1295452/why-does-msvc-not-support-inline-assembly-for-amd64-and-itanium-targets)
* [zhihu-x64-msvc-no-asm](https://www.zhihu.com/question/28357966)
* [const-T[]-prvalue-subscript-lvalue](https://gcc.gnu.org/ml/gcc-patches/2017-05/msg00656.html)
* [array-rvalue](https://www.quora.com/What-is-a-array-rvalue-in-C++)
* [array-rvalue-bugs](https://zhuanlan.zhihu.com/p/27550465)
* [verilog-execution-order](http://www.vlsiinterviewquestions.org/2012/07/18/verilog-execution-order/)

### 2017-6-27
* [getline-cpp](https://gehrcke.de/2011/06/reading-files-in-c-using-ifstream-dealing-correctly-with-badbit-failbit-eofbit-and-perror/)
* [ELI5-Kerberos](http://www.roguelynn.com/words/explain-like-im-5-kerberos/)
* [python-pickle-multiprocess](https://www.zhihu.com/question/61617396)
* [harddisk](https://zybuluo.com/GavinNicholas/note/795957)

### 2017-6-28
* [void()](https://stackoverflow.com/questions/28688522/why-cannot-we-use-brace-initializer-in-an-un-evaluated-context)
* [return-void](https://stackoverflow.com/questions/35987493/return-void-type-in-c-and-c)
* [5-languages-should-learn](http://www.bradcypert.com/5-programming-languages-you-could-learn-from/)

### 2017-6-29
* [cryptocurrencies](https://news.ycombinator.com/item?id=14659775)
* [interview-questions](http://jamescun.github.io/iPG/)

### 2017-6-30
* [effective-matplotlib](http://pbpython.com/effective-matplotlib.html)
* [injective-class-name](https://stackoverflow.com/questions/25549652/why-is-there-an-injected-class-name)
* [GPG-SSH](http://ryanlue.com/posts/2017-06-29-gpg-for-ssh-auth)

### 2017-7-1
* [Integral-tricks](http://zhihu.com/question/24853026/answer/191406404)
* [regex-XHTML](https://stackoverflow.com/questions/1732348/regex-match-open-tags-except-xhtml-self-contained-tags/1732454#1732454)
* [Are-Css-Regular](https://cs.stackexchange.com/questions/12867/are-html-and-css-regular-languages)
* [网站权限加固](http://www.jianshu.com/p/44fe3ec5b704)
* [From-pixels-to-POC](https://blogs.technet.microsoft.com/srd/2017/06/20/tales-from-the-msrc-from-pixels-to-poc/)
* [filepath-bash](http://blog.csdn.net/ljianhui/article/details/43128465)
* [sudo-secure-path-in-root-user](https://unix.stackexchange.com/questions/8646/why-are-path-variables-different-when-running-via-sudo-and-su)
* [void* p = &p](https://www.quora.com/What-does-void*-p-p-mean-in-C++)

### 2017-7-2
* [rm-root-directory](https://superuser.com/questions/542978/is-it-possible-to-remove-the-root-directory)
* [boost-typeof-implementation](https://stackoverflow.com/questions/12199280/how-to-implement-boost-typeof)
* [What's-in-a-Continuation](http://jlongster.com/Whats-in-a-Continuation)
* [Turing-Complete-Language-Realization](https://cs.stackexchange.com/questions/63961/why-are-some-programming-languages-turing-complete-but-lack-some-abilities-of-ot)
* [Cpp17-new](https://zhuanlan.zhihu.com/p/27551890)
* [TRESOR/cipher](https://en.wikipedia.org/wiki/TRESOR)

### 2017-7-3
* [VLC-player-out-of-bounds](http://www.freebuf.com/articles/system/138574.html)
* [Python-hacker-tools](http://www.freebuf.com/sectool/138779.html)
* [Nuts and Bolts of Multithreaded Programming](https://software.intel.com/en-us/articles/nuts-and-bolts-of-multithreaded-programming)

### 2017-7-4
* [make_shared-RTTI-QoI](https://stackoverflow.com/questions/43093492/why-does-stdmake-shared-perform-two-separate-allocations-with-fno-rtti)
* [RTTI-shared_ptr-get_deleter](https://gcc.gnu.org/viewcvs/gcc/trunk/libstdc%2B%2B-v3/include/bits/shared_ptr_base.h?r1=154376&r2=154377&pathrev=154377&)
* [LLVM-_LIBCPP_NO_RTTI-get_deleter](https://github.com/llvm-mirror/libcxx/blob/master/include/memory)
* [How-I-found-intel-skylake-bug](http://gallium.inria.fr/blog/intel-skylake-bug/)
* [Writing-a-Memory-Allocator-for-Fast-Serialization](http://www.idryman.org/blog/2017/06/28/opic-a-memory-allocator-for-fast-serialization/)
* [Windows-locale-gbk-core-unicode](https://www.zhihu.com/question/24103924)
* [The-Utlimate-Oldschool-PC-fonts](http://int10h.org/oldschool-pc-fonts/)
* [Old-C-declaration](https://www.zhihu.com/question/59092129)

### 2017-7-5
* [Haskell-lazy-IO](https://stackoverflow.com/questions/8225920/lazy-evaluation-and-io-side-effect-confusion)
* [Haskell-bad-lazy-IO](https://stackoverflow.com/questions/5892653/whats-so-bad-about-lazy-i-o)
* [UB-in-2017](https://blog.regehr.org/archives/1520)
* [RE-to-Verilog-FSM](http://198.23.161.92/)
* [代数基本定理](http://zhihu.com/question/62027029/answer/194040006)

### 2017-7-6
* [value-init-and-=delete-aggregate](https://stackoverflow.com/questions/23882409/c14-value-initialization-with-deleted-constructor)
* [aggregate-delete-ctor-solution](https://stackoverflow.com/questions/33988297/deleted-default-constructor-objects-can-still-be-created-sometimes)
* [Why-INI-deprecated](https://blogs.msdn.microsoft.com/oldnewthing/20071126-00/?p=24383/)
* [/r/Python-users](https://www.reddit.com/r/Python/comments/6leaqy/top_250_subreddits_that_rpython_users_are_active/)
* [How-the-clipboard-works](https://blogs.msdn.microsoft.com/ntdebugging/2012/03/16/how-the-clipboard-works-part-1/)
* [Brainfucker-visualizer](https://fatiherikli.github.io/brainfuck-visualizer/#)
* [ZIP-defend](https://blog.haschek.at/2017/how-to-defend-your-website-with-zip-bombs.html)
* [Applicative-Normal-Order](http://blog.csdn.net/sk__________________/article/details/12848597)
* [Sound-effects](http://ninichimusic.com/blog/2017/3/29/12-great-places-to-find-sound-effects-for-your-game-or-project)
* [Cpp-seeding-surprise](http://www.pcg-random.org/posts/cpp-seeding-surprises.html#bias)

### 2017-7-7
* [VS-debug](https://blogs.msdn.microsoft.com/visualstudio/2017/06/26/7-lesser-known-hacks-for-debugging-in-visual-studio/)
* [comment-Python-speed](https://stackoverflow.com/questions/2731022/do-comments-slow-down-an-interpreted-language)


### 2017-7-8
* [16-bit-floating-number-opengl](https://stackoverflow.com/questions/22210684/16-bit-floats-and-gl-half-float)

### 2017-7-9
* [cisco-guide-in-DDoS](http://www.cisco.com/c/en/us/about/security-center/guide-ddos-defense.html)
* [challenge-collapsar](http://blog.sina.com.cn/s/blog_a5097c1a01015vwt.html)
* [GPU-performance-for-game-artists](http://www.fragmentbuffer.com/gpu-performance-for-game-artists/)
* [C++-design-error](http://tieba.baidu.com/p/3202116449)
* [docker-sandbox-judger](https://oi.men.ci/docker-sandbox-judger/)
* [Catch-segmentation-fault](https://stackoverflow.com/questions/2350489/how-to-catch-segmentation-fault-in-linux)
* [Heap-elision](https://www.reddit.com/r/cpp/comments/5j8h1e/c_weekly_ep_42_clangs_heap_elision/)
* [API-Security-Checklist](https://github.com/shieldfy/API-Security-Checklist)


### 2017-7-10
* [three-address-code](http://blog.csdn.net/attilax/article/details/51224390)
* [Byzantine Generals Problem](https://www.zhihu.com/question/23167269)
* [Understanding-SVM-via-examples](https://sadanand-singh.github.io/posts/svmpython/)
* [Alice-Bob-Eve-Crypto](https://zh.wikipedia.org/wiki/%E6%84%9B%E9%BA%97%E7%B5%B2%E8%88%87%E9%AE%91%E4%BC%AF)
* [How-not-to-use-DLLs](https://h3r2tic.github.io/posts/how-not-to-use-dlls/)
* [Python-import-from-performance-difference](https://stackoverflow.com/questions/3591962/python-import-x-or-from-x-import-y-performance)
* [PythonSpeed](https://wiki.python.org/moin/PythonSpeed)

### 2017-7-11
* [24-core-cpu](https://randomascii.wordpress.com/2017/07/09/24-core-cpu-and-i-cant-move-my-mouse/)
* [How-rust-is-tested](https://brson.github.io/2017/07/10/how-rust-is-tested)

### 2017-7-12
* [not-inverted-connected-itself-ring-oscillator](https://electronics.stackexchange.com/questions/243977/what-will-happen-if-the-output-from-a-not-gate-injected-back-to-its-own-input)
* [Profunctor](https://www.schoolofhaskell.com/school/to-infinity-and-beyond/pick-of-the-week/profunctors)
* [Template-explicit-instantiaton](https://stackoverflow.com/questions/2351148/explicit-instantiation-when-is-it-used)
* [Profunctor-zhihu](https://www.zhihu.com/question/40102263)
* [Profunctor-in-Haskell](http://blog.sigfpe.com/2011/07/profunctors-in-haskell.html)
* [Keeping Python competitive](https://lwn.net/Articles/723752/#723949)
* [Tagged pointer](http://www.infoq.com/cn/articles/deep-understanding-of-tagged-pointer/)
* [PEP: Hide implementation details in the C API](https://mail.python.org/pipermail/python-ideas/2017-July/046399.html)
* [C++-undecidable-grammar](https://stackoverflow.com/questions/794015/what-do-people-mean-when-they-say-c-has-undecidable-grammar)
* [Exotic Data Structures](http://concatenative.org/wiki/view/Exotic%20Data%20Structures)
* [.io-Network-hack](https://thehackerblog.com/the-io-error-taking-control-of-all-io-domains-with-a-targeted-registration/)
* [FAT-Python](https://medium.com/@anthonypjshaw/fat-python-the-next-chapter-in-python-optimization-69dc974bcca2)

### 2017-7-13
* [cout-volatile-pointer](https://stackoverflow.com/questions/2501737/why-does-stdcout-convert-volatile-pointers-to-bool)
* [system-error-cpp](https://akrzemi1.wordpress.com/2017/07/12/your-own-error-code/)
* [No-UB-pass-uninitialized-reference](https://stackoverflow.com/questions/35306345/is-it-undefined-behavior-to-pass-by-reference-uninitialized-variable)

### 2017-7-14
* [toward-go-2](https://blog.golang.org/toward-go2)
* [hello_world-without-header](https://pastebin.com/QG7MM3a7)
* [no-header-c-program](https://stackoverflow.com/questions/18223649/c-c-program-without-header-files)
* [PCH-VC++](https://blogs.msdn.microsoft.com/vcblog/2017/07/13/precompiled-header-pch-issues-and-recommendations/)
* [Performance-std::vector<std::unique_ptr<T>>](https://stackoverflow.com/questions/45089049/performance-of-resizing-stdvectorstdunique-ptrt)
* [guokr-soft-string-match](https://guokr.github.io/pattern-matching-problem.html)

### 2017-7-15
* [How to save a web page to the Internet Archive](http://www.bitsgalore.org/2014/08/02/How-to-save-a-web-page-to-the-Internet-Archive)
* [Python-books](http://pythonbooks.org/)
* [gameUI-patterns](http://www.gameuipatterns.com/)
* [What's in C++20 and the C++17 final score card](https://www.codeplay.com/portal/10-06-17-whats-in-cpp-20-and-cpp17-final-score-card)
* [Microsoft-free-ebook](https://blogs.msdn.microsoft.com/mssmallbiz/2017/07/11/largest-free-microsoft-ebook-giveaway-im-giving-away-millions-of-free-microsoft-ebooks-again-including-windows-10-office-365-office-2016-power-bi-azure-windows-8-1-office-2013-sharepo/)

### 2017-7-16
* [Convering-DOS-to-Shell](http://tldp.org/LDP/abs/html/dosbatch.html)
* [Develop-ecosystem](https://www.jetbrains.com/research/devecosystem-2017/#fun-facts)
* [Cpp20TO](https://www.reddit.com/r/cpp/comments/6ngkgc/2017_toronto_iso_c_committee_discussion_thread/)
* [HS-trip-report-to-Cpp20TO](https://herbsutter.com/2017/07/15/trip-report-summer-iso-c-standards-meeting-toronto/)
* [thread-accumulate](https://stackoverflow.com/questions/33766857/thread-pool-example-in-concurrency-in-action)
* [字体子集化](https://ecomfe.github.io/fontmin/)

### 2017-7-17
* [Basic Syntax Extension/Haskell](https://www.schoolofhaskell.com/school/to-infinity-and-beyond/pick-of-the-week/guide-to-ghc-extensions/basic-syntax-extensions)
* [stateful-metaprogramming-cpp](https://stackoverflow.com/questions/44267673/is-stateful-metaprogramming-ill-formed-yet)
* [difference-between-static-and-global](https://stackoverflow.com/questions/13415321/difference-between-static-auto-global-and-local-variable-in-the-context-of-c-a)

### 2017-7-18
* [bad-design-of-cpp-iostream](https://stackoverflow.com/questions/2753060/who-architected-designed-cs-iostreams-and-would-it-still-be-considered-wel)
* [java-gc](https://www.zhihu.com/question/21539353)
* [DFT-IDFT-Polynomial-Square](http://blog.miskcoo.com/2015/04/polynomial-multiplication-and-fast-fourier-transform)
* [STL-Alg-for-overload](http://www.fluentcpp.com/2017/07/18/can-you-wield-cpp-function-overloading-like-jon-snow-wields-longclaw/)
* [enable_shared_from_this](https://stackoverflow.com/questions/712279/what-is-the-usefulness-of-enable-shared-from-this)

### 2017-7-19
* [SS-deprecate-OTA](https://juejin.im/entry/589d3e4386b599006b2cbaae)
* [Typeable/Haskell](https://stackoverflow.com/questions/6600380/what-is-haskells-data-typeable)

### 2017-7-20
* [bitcount/cpp](https://stackoverflow.com/questions/45188786/bit-count-preprocessor-magic-vs-modern-c)
* [difference-between-static-extern](https://www.quora.com/What-is-the-deep-difference-between-static-extern-declaration-in-C-C++-programming)
* [non-type-template-lvalue-reference](https://stackoverflow.com/questions/5687540/non-type-template-parameters)

### 2017-7-21
* [js-no-lookbehind](https://stackoverflow.com/questions/30118815/why-are-lookbehind-assertions-not-supported-in-javascript)
* [mimic-js-lookbehind](http://blog.stevenlevithan.com/archives/mimic-lookbehind-javascript)
* [js-lookbehind-alternative](https://stackoverflow.com/questions/7376238/javascript-regex-look-behind-alternative)
* [code-golf-sum](https://codegolf.stackexchange.com/questions/133109/sum-of-all-integers-from-1-to-n)

### 2017-7-22
* [valgrind-on-WSL](http://www.albertgao.xyz/2016/09/28/how-to-use-valgrind-on-windows/)
* [valgrind-on-WSL-hack](https://github.com/Grauniad/valgrind)
* [ld.so.nohwcap](https://www.quora.com/What-is-the-purpose-of-the-code-etc-ld-so-nohwcap-code-file-on-Linux-Systems)

### 2017-7-23
* [lens-tutorial](http://www.mchaver.com/posts/2017-07-12-lens-tutorial-1.html)
* [Library InductiveTypes](http://adam.chlipala.net/cpdt/html/InductiveTypes.html)
* [The Y Combinator and strict positivity](http://blog.ezyang.com/2012/09/y-combinator-and-strict-positivity/)
* [strlen-optimization](https://github.com/lhmouse/MCF/issues/7#issuecomment-317245365)
* [Computational-Linear-Algebra](http://www.fast.ai/2017/07/17/num-lin-alg/)
* [Reasoning about type inhabitants in Haskell](https://gist.github.com/pchiusano/444de1f222f1ceb09596)
* [Type-inhabitation](https://www.zhihu.com/question/41925054)

### 2017-7-23
* [difference-between-pedantic-errors-and-Werror=pedantic](https://stackoverflow.com/questions/31567491/the-difference-between-pedantic-errors-and-werror-pedantic-in-gcc)
* [Fibonacci-matrix-Russian-peasant](https://thesundayprogrammer.wordpress.com/2016/06/27/on-computing-the-fibonacci-number-in-ologn-iteratively/)
* [1<<32-undefined](https://stackoverflow.com/questions/45268467/is-131-well-defined-in-c-when-sizeofint-4)

### 2017-7-25
* [binary-hello-world](https://stackoverflow.com/questions/10821875/how-could-i-write-hello-world-in-binary)
* [(a - > b) -> b === a](https://stackoverflow.com/questions/45287954/is-having-a-a-b-b-equivalent-to-having-an-a)
* [Roles/Haskell](https://typesandkinds.wordpress.com/2013/08/15/roles-a-new-feature-of-ghc/)

### 2017-7-26
* [Intro=to-UCRT](https://blogs.msdn.microsoft.com/vcblog/2015/03/03/introducing-the-universal-crt/)
* [XSS](https://www.zhihu.com/question/26628342/answer/33572866)
* [Java-NIO](http://blog.csdn.net/foart/article/details/47614841)
* [Strict-aliasing-is-really-bad](https://blog.regehr.org/archives/1307)
* [memset-avoid-side-channel-attack](http://git.musl-libc.org/cgit/musl/tree/src/string/memset.c#n33)
* [iOS-security](https://zhuanlan.zhihu.com/p/28068886)
* [Distribute-source-cpp-code](https://hackernoon.com/6-reasons-why-we-distribute-c-libraries-as-source-code-2dc614d5ef1e)
* [ADL-for-old-style-enumeration-template](https://stackoverflow.com/questions/45307231/how-to-get-enum-value-from-enum-type)
* [bool-vs-void*-in-operator-if](https://stackoverflow.com/questions/45322138/bool-vs-void-casts-on-the-same-object)

### 2017-7-29
* [Evolution of trust](http://ncase.me/trust/)
* [GHC-warnings-you-should-use](https://functor.tokyo/blog/2017-07-28-ghc-warnings-you-should-enable)
* [Herb-Metaclasses](https://www.youtube.com/watch?v=6nsyX37nsRs)
* [NTFS-MFT-joke](https://arstechnica.com/information-technology/2017/05/in-a-throwback-to-the-90s-ntfs-bug-lets-anyone-hang-or-crash-windows-7-8-1/)

### 2017-7-30
* [Build-a-8bit-computer-from-scratch](https://eater.net/8bit/)
* [The purpose of memory_order_consume](http://preshing.com/20140709/the-purpose-of-memory_order_consume-in-cpp11/)
* [modify-python-grammar-ast-flowpython](https://github.com/thautwarm/flowpython)
* [Using Enum Classes as Bitfields](https://accu.org/index.php/journals/2228)
* [Shor-algorithm](http://www.scottaaronson.com/blog/?p=208)
* [Throw-exception-through-SEH](https://blogs.msdn.microsoft.com/oldnewthing/20170728-00/?p=96706)

### 2017-7-31
* [Python-raw-string-with-ending-\\](https://stackoverflow.com/questions/647769/why-cant-pythons-raw-string-literals-end-with-a-single-backslash/19654184#19654184)
* [fprintf](http://pubs.opengroup.org/onlinepubs/9699919799/functions/printf.html)
* [Computed goto for efficient dispatch tables](http://eli.thegreenplace.net/2012/07/12/computed-goto-for-efficient-dispatch-tables#id4)
* [try-else-python](https://stackoverflow.com/questions/8130355/whats-try-else-good-for-in-python)
* [Elm-in-production](https://charukiewi.cz/posts/elm/)
* [LaTeX-math-in-Office](https://blogs.msdn.microsoft.com/murrays/2017/07/30/latex-math-in-office/)

### 2017-8-1
* [unlifted-unboxed-ghc](https://stackoverflow.com/questions/39985296/what-are-lifted-and-unlifted-product-types-in-haskell)
* [levity-polymorphism](https://stackoverflow.com/questions/35318562/what-is-levity-polymorphism/35320729#35320729)
* [UnLiftedDataTypes](https://ghc.haskell.org/trac/ghc/wiki/UnliftedDataTypes)
* [CEK](https://cs.umd.edu/class/summer2015/cmsc330/material/cek/)
* [*-in-Haskell](https://stackoverflow.com/questions/27095011/what-exactly-is-the-kind-in-haskell/27095012#27095012)
* [What should the ISO C++ Standards Committee be doing?](https://isocpp.org/blog/2017/07/what-should-the-iso-cpp-standards-committee-be-doing)
* [Computed-GOTO-gcc](https://github.com/python/cpython/blob/master/Python/ceval.c#L714)
* [C++-metaprogramming-HTML-parser](https://github.com/rep-movsd/see-phit)

### 2017-8-2
* [libc++-overload-lvalue-ref-move-element-in-vector](https://stackoverflow.com/questions/30695810/libc-difference-between-vectorinsert-overloads)
* [RAII-IncreaseAnnotator](https://code.woboq.org/llvm/libcxx/include/vector.html#std::__1::vector::__RAII_IncreaseAnnotator)
* [boost-multi-index-implementation](https://stackoverflow.com/questions/4206349/how-boost-multi-index-is-implemented)
* [qualified-polymorphism-vs-bounded-polymorphism(subtyping)](https://stackoverflow.com/questions/11474754/what-are-types-with-type-constraints-called)
* + typeclass 约束的 instance 是 type，interface 约束的是 value
* [why-no-subtyping-haskell](https://www.reddit.com/r/haskell/comments/423o0c/why_no_subtypingsubtype_polymorphism/)
* [Bottom-up Type Annotation with the Cofree Comonad](https://brianmckenna.org/blog/type_annotation_cofree)
* [lens-over-tea](https://artyom.me/lens-over-tea-1)

### 2017-8-3
* [Floating-math-not-associative](https://stackoverflow.com/questions/6430448/why-doesnt-gcc-optimize-aaaaaa-to-aaaaaa?rq=1)
* [Microsoft didn’t sandbox Windows Defender, so I did](https://blog.trailofbits.com/2017/08/02/microsoft-didnt-sandbox-windows-defender-so-i-did/)
* [non-lexicla-scope-rust](https://zhuanlan.zhihu.com/p/25429005)
* [votaile-C-abstract-machine](https://blog.regehr.org/archives/28)
* [volatile-setjump](https://stackoverflow.com/questions/7996825/why-volatile-works-for-setjmp-longjmp)
* [multithread-volatile-useless](https://software.intel.com/en-us/blogs/2007/11/30/volatile-almost-useless-for-multi-threaded-programming/)
* [How I implemented my own crypto](http://loup-vaillant.fr/articles/implemented-my-own-crypto)
* [function-try-block](https://stackoverflow.com/questions/5612486/when-is-a-function-try-block-useful)


### 2017-8-4
* [power-of-set-on-another-set-map-function](https://math.stackexchange.com/questions/129301/whats-the-meaning-of-a-set-to-the-power-of-another-set)
* [typedef-as-storage-class-specifier](https://stackoverflow.com/questions/8674236/is-typedef-a-storage-class-specifier)
* [lambda-function-list-or-tuple-deep-or-shadow-copy](https://stackoverflow.com/questions/6076270/python-lambda-function-in-list-comprehensions)
* [metaclass-summary-cpp](http://www.fluentcpp.com/2017/08/04/metaclasses-cpp-summary/)


### 2017-8-5
* [The constraint trick for instances-Haskell](http://chrisdone.com/posts/haskell-constraint-trick)
* [getch-in-linux](https://stackoverflow.com/questions/7469139/what-is-equivalent-to-getch-getche-in-linux)
* [kbhit-in-linux](https://stackoverflow.com/questions/29335758/using-kbhit-and-getch-on-linux)


### 2017-8-6
* [CppTO20-vcblog](https://blogs.msdn.microsoft.com/vcblog/2017/07/28/trip-report-evolution-working-group-at-the-summer-iso-c-standards-meeting-toronto/)
* [Scott-encoding-for-haskell-type](https://kseo.github.io/posts/2016-12-13-scott-encoding.html)
* [Church-and-scott](https://www.zhihu.com/question/39930042)
* [Church-encoding-for-hasekll-type](http://www.cbdumas.com/posts/church_encoding.html)
* [Bootloader and Low-Level Programming Tutorial](https://www.apriorit.com/dev-blog/66-develop-boot-loader)
* [INTRO TO LINUX FORENSICS](https://countuponsecurity.com/2017/04/12/intro-to-linux-forensics/)


### 2017-8-7
* [How-do-malloc-free-work](https://stackoverflow.com/questions/1119134/how-do-malloc-and-free-work)
* [SRP](https://en.wikipedia.org/wiki/Single_responsibility_principle)
* [constexpr-counter](https://segmentfault.com/n/1330000008559854)
* [SMP-+1/cpp](https://zhuanlan.zhihu.com/p/24928414)
* [SMP-1/cpp](https://zhuanlan.zhihu.com/p/24835482)
* [SMP-2/cpp](https://zhuanlan.zhihu.com/p/24910829)
* [mmap/linux](http://www.cnblogs.com/huxiao-tee/p/4660352.html)
* [ECS-entity-component-system](https://en.wikipedia.org/wiki/Entity%E2%80%93component%E2%80%93system)
* [pmr-polymorphic_allocator/Cpp](https://stackoverflow.com/questions/38010544/polymorphic-allocator-when-and-why-should-i-use-it)
* [synchronized/Cpp](https://stackoverflow.com/questions/45487135/what-advantage-does-the-new-feature-synchronized-block-in-c-provide)


### 2017-8-8
* [gcc-generate-ud2/udf-for-ub](https://twitter.com/blackhole0173/status/306286002215993346)
* [rm-rf-and-UEFI](https://www.zhihu.com/question/60703547)
* [WindowsNT-undocumented](http://www.stratigery.com/nt.sekrits.html)
* [Include-a-file-as-string/Cpp](https://stackoverflow.com/questions/410980/include-a-text-file-in-a-c-program-as-a-char)
* [Add-static-resource-to-executable](https://stackoverflow.com/questions/4864866/c-c-with-gcc-statically-add-resource-files-to-executable-library)
* [Raw-string-tokens(tokenization)-before-preprocessor/Cpp](https://stackoverflow.com/questions/30997129/in-c11-what-should-happen-first-raw-string-expansion-or-macros)
* [include-a-file-as-a-string-and-a-code](https://stackoverflow.com/questions/28103029/how-to-include-a-file-in-cpp-as-both-a-string-and-code)

### 2017-8-9
* [in_constexpr](http://saadahmad.ca/detecting-evaluation-context-inside-constexpr-functions/)
* [__attribute__((constructor))](https://stackoverflow.com/questions/2053029/how-exactly-does-attribute-constructor-work)
* [Nmap-cheat-sheet](https://www.stationx.net/nmap-cheat-sheet/)
* [Haskell-libgmp](http://www.well-typed.com/blog/32/)


### 2017-8-10
* [Python-code-object](https://late.am/post/2012/03/26/exploring-python-code-objects.html)
* [How-python-lookup-work](https://stupidpythonideas.blogspot.com/2015/12/how-lookup-works.html)
* [Performance profiling with ghc-events-analyze](http://www.well-typed.com/blog/2014/02/ghc-events-analyze/)
* [covariance-contravariance](https://www.fpcomplete.com/blog/2016/11/covariance-contravariance)
* [协变-逆变](https://zh.wikipedia.org/wiki/%E5%8D%8F%E5%8F%98%E4%B8%8E%E9%80%86%E5%8F%98)
* [Beautiful-concurrency/Haskell](https://www.schoolofhaskell.com/school/advanced-haskell/beautiful-concurrency)
* [virtual-inheritance-for-interface](https://stackoverflow.com/questions/4605556/when-virtual-inheritance-is-a-good-design)
* [Haskell-for-C-programmer](http://www.haskellforall.com/2012/01/haskell-for-c-programmers-for-loops.html)
* [unsigned-vs-signed-performance](https://stackoverflow.com/questions/4712315/performance-of-unsigned-vs-signed-integers)
* [VPN-report](https://vpnreport.org/)

### 2017-8-11
* [Writing Performant Haskell (1 of 6): Intro](https://jship.github.io/posts/2017-08-09-writing-performant-haskell-part-1.html)
* [Windows-devices-for-different-port](https://blogs.msdn.microsoft.com/oldnewthing/20041110-00/?p=37343)
* [Learn-GHC-core-by-example](http://alpmestan.com/posts/2013-06-27-ghc-core-by-example-episode-1.html)
* [Learn-STG-by-example](https://ghc.haskell.org/trac/ghc/wiki/Commentary/Compiler/GeneratedCode)


### 2017-8-12 - 2017-8-14
* [Intro-to-compiler](https://nicoleorchard.com/blog/compilers)
* [LaTeX-fetish](http://www.danielallington.net/2016/09/the-latex-fetish/)
* [VS-15.3-fix](https://blogs.msdn.microsoft.com/vcblog/2017/08/11/c17-features-and-stl-fixes-in-vs-2017-15-3/)
* [subtyping-vs-inheritance](https://www.zhihu.com/question/57486254/answer/153071178)
* [four-month-in-Haskell](https://lexi-lambda.github.io/blog/2016/06/12/four-months-with-haskell/)
* [MonadTransformer-free](https://ocharles.org.uk/blog/posts/2016-01-26-transformers-free-monads-mtl-laws.html)
* [parser-in-Haskell-from-scratch](https://stackoverflow.com/questions/20660782/writing-a-parser-from-scratch-in-haskell)
* [仙境中的Haskell](https://zhuanlan.zhihu.com/p/21371274)
* [形式化方法](https://mp.weixin.qq.com/s?__biz=MzI5MjEyNjI5NQ==&mid=2650112204&idx=1&sn=75ca08855d424b1344eafab2ae453762&chksm=f4070bf4c37082e24a8864d224967536dd952267cc122a201c442ec1c8a55013aaf95c7095a1&mpshare=1&scene=1&srcid=0808Q2Ix24T10nDErSMDn6vB&pass_ticket=it4i3GHXmDHfTHlVq%2Fhsp2Rm7ab0udS%2BI%2BxwzHDYEMenOMUQDam7S34PJ1Vl560%2B#rd)
* [fs-gs-register](https://stackoverflow.com/questions/10810203/what-is-the-fs-gs-register-intended-for)
* [extended-template-literal](https://gcc.gnu.org/ml/gcc-patches/2013-04/msg00998.html)
* [JIT-in-JVM](https://zhuanlan.zhihu.com/p/28476709)
* [fibonacci-problem](https://www.zhihu.com/question/63700400/answer/212458501)

### 2017-8-15 - 2017-8-21
* [gcc-template-access-checking-error](https://zhuanlan.zhihu.com/p/28480569)
* [PyPy-vs-Cpython](https://www.zhihu.com/question/19588346)
* [Leetcode-answer](https://zhuanlan.zhihu.com/p/25697275)
* [Debug-method](https://www.zhihu.com/question/61826619)
* [shared_ptr-thread-safety-issue](https://stackoverflow.com/questions/9127816/stdshared-ptr-thread-safety-explained)
* [JVM-finalizer](https://zhuanlan.zhihu.com/p/28562588)
* [内存对齐](http://blog.csdn.net/markl22222/article/details/38051483)
* [typeid-implementation](http://blog.csdn.net/markl22222/article/details/10474591)
* [V8-opcode](https://zhuanlan.zhihu.com/p/28590489)
* [Windows-name-path](https://msdn.microsoft.com/en-us/library/windows/desktop/aa365247%28v=vs.85%29.aspx?f=255&MSPPError=-2147217396)
* [golang-scheduler](https://www.zhihu.com/question/20862617)
* [reg-stack-based-vm](http://blog.csdn.net/u012481172/article/details/50904574)
* [reg-stack-based-vm-js](http://www.cnblogs.com/dracohan/p/4354254.html)
* [数据库范式](http://blog.csdn.net/famousdt/article/details/6921622)
* [const_cast-and-repeat-code](https://stackoverflow.com/questions/2673508/correct-usages-of-const-cast)
* [WSABUF-const-problem](http://www.verycomputer.com/5_82adc5abcacdd56d_1.htm)
* [return-type-polymorphism](https://softwareengineering.stackexchange.com/questions/105662/is-return-type-only-polymorphism-in-haskell-a-good-thing)
* [visual-rust-typesystem](http://jadpole.github.io/rust/type-system)
* [rust-trait-object-safety](http://huonw.github.io/blog/2015/01/object-safety/)
* [Rasberry-Pi-for-wireless-route](http://shumeipai.nxez.com/2013/09/11/raspberry-pi-configured-as-a-wireless-router.html)

### 2017-8-22
* [torsors-subtractive](https://ro-che.info/articles/2013-01-08-torsors)
* [Four-ML-and-Python-command-line-parsing](https://thebreakfastpost.com/2015/04/22/four-mls-and-a-python/)
* [torsors-made-easy](http://math.ucr.edu/home/baez/torsors.html)
* [What's-next-in-PL-design](http://graydon2.dreamwidth.org/253769.html)
* [Using C++ Resumable Functions with Libuv](https://blogs.msdn.microsoft.com/vcblog/2017/02/02/using-ibuv-with-c-resumable-functions/)
* [boost-coroutine-implementation](http://ju.outofmemory.cn/entry/57710)
* [copy-elision-and-structure-binding](https://stackoverflow.com/questions/45698326/does-copy-elision-work-with-structured-bindings)
* [string-c_str()-difference-in-03-11](https://stackoverflow.com/questions/45782237/difference-in-c-str-function-specification-between-c03-and-c11)
* [Writing a Concatenative Programming Language: Introduction](https://suhr.github.io/wcpl/intro.html)
* [Zero-GC-in-.NET](http://tooslowexception.com/zero-garbage-collector-for-net-core/)
* [Insiding-V8-js](https://blog.sessionstack.com/how-javascript-works-inside-the-v8-engine-5-tips-on-how-to-write-optimized-code-ac089e62b12e)
* [Zsh-configuration-from-ground-up](https://zanshin.net/2013/02/02/zsh-configuration-from-the-ground-up/)
* [git-https-gnutls-bug](https://stackoverflow.com/questions/13524242/error-gnutls-handshake-failed-git-repository)

### 2017-8-23
* [fix-point-and-Y](https://en.wikipedia.org/wiki/Fixed-point_combinator)
* [implement-Y-in-Haskell](https://stackoverflow.com/questions/4273413/y-combinator-in-haskell)
* [Write Haskell as fast as C: exploiting strictness, laziness and recursion](https://donsbot.wordpress.com/2008/05/06/write-haskell-as-fast-as-c-exploiting-strictness-laziness-and-recursion/)
* [Why-C-code-faster-than-asm](https://stackoverflow.com/questions/40354978/why-is-this-c-code-faster-than-my-hand-written-assembly-for-testing-the-collat)
* [Church-numeral-pred](https://www.zhihu.com/question/64274105)
* [change-name-of-dynamic-shared-lib](https://stackoverflow.com/questions/2759254/how-can-i-change-the-filename-of-a-shared-library-after-building-a-program-that)
* [Inside-a-fast-CSS-engine-quantum](https://hacks.mozilla.org/2017/08/inside-a-super-fast-css-engine-quantum-css-aka-stylo/)
* [MonadFix is Time Travel](http://elvishjerricco.github.io/2017/08/22/monadfix-is-time-travel.html)

### 2017-8-24
* [D-as-better-C](http://dlang.org/blog/2017/08/23/d-as-a-better-c/)
* [Gcc-Low-IR](https://kristerw.blogspot.com/2017/08/gcc-low-level-ir-and-basic-code.html)
* [metaclass-summary](https://www.fluentcpp.com/2017/08/04/metaclasses-cpp-summary/)
* [metaclass-strong-typing](https://www.fluentcpp.com/2017/08/08/metaclasses-ultimate-answer-strong-typing-c/)
* [Offline-only](https://chris.bolin.co/offline/)

### 2017-8-25
* [Haskell-printf](https://stackoverflow.com/questions/7828072/how-does-haskell-printf-work)
* [Quine](http://www.nyx.net/~gthompso/quine.htm)

### 2017-8-29
* [exploit-guide-corealen-team](https://www.corelan.be/index.php/2009/07/19/exploit-writing-tutorial-part-1-stack-based-overflows/)
* [improve-python-to-julia-performance](https://www.ibm.com/developerworks/community/blogs/jfp/entry/Python_Meets_Julia_Micro_Performance?lang=en)

### 2017-8-30
* [CPS](https://zhuanlan.zhihu.com/p/22721931)
* [Scala-Form](https://www.zhihu.com/question/64568400/answer/222581715)
* [Div-0-and-SEH](https://www.zhihu.com/question/58565645)
* [bad-cmov-linus](http://yarchive.net/comp/linux/cmov.html)
* [gcc-O3-slower-than-O2](https://stackoverflow.com/questions/28875325/gcc-optimization-flag-o3-makes-code-slower-then-o2)
* [lineno-remove-in-Py3.6](https://www.zhihu.com/question/64616810/answer/222686143)
* [no-IOT-in-Haskell](https://stackoverflow.com/questions/13056663/why-is-there-no-io-transformer-in-haskell)

### 2017-8-31
* [crypto-guide](https://mycrypto.guide/)
* [What's Functional Programming All About?](http://www.lihaoyi.com/post/WhatsFunctionalProgrammingAllAbout.html)
* [OOP-datatype-to-Haskell](https://stackoverflow.com/questions/45974033/restructuring-an-oop-datatype-into-haskell-types)
* [golang-asm](http://davidwong.fr/goasm/)

### 2017-9-1
* [detecting-debugger-by-int3-behavior](http://www.triplefault.io/2017/08/detecting-debuggers-by-abusing-bad.html)
* + 0xCD 0x03 not work in Windows (《软件调试》)
* [ub-cause-nevercall-run](http://hn.premii.com/#/comments/15147335)
* [redesign-python-namedtuple](https://lwn.net/Articles/731423/)
* [package-fishing-pypi](http://blog.fatezero.org/2017/06/01/package-fishing/)
* [inactive-union](https://stackoverflow.com/questions/11373203/accessing-inactive-union-member-and-undefined-behavior)
* [deque-vector-of-fixed-array](https://stackoverflow.com/questions/2297164/stl-deque-accessing-by-index-is-o1)
* [ub-no-execution](https://stackoverflow.com/questions/24186681/does-an-expression-with-undefined-behaviour-that-is-never-actually-executed-make)

### 2017-9-2
* [triple-fault](https://www.cs.cmu.edu/~410/doc/triple.html)
* [What is GDT/LDT/IDT/TSS](http://chunqili.blogspot.com/2013/06/what-is-gdtldtidttss.html)
* [CreateFile-hidden-attribute](https://stackoverflow.com/questions/13215716/ioerror-errno-13-permission-denied-when-trying-to-open-hidden-file-in-w-mod?rq=1)
* [alignas-and-new](https://stackoverflow.com/questions/15511909/does-the-alignas-specifier-work-with-new)

### 2017-9-3
* [GTK-video-in-Haskell](https://lettier.github.io/posts/2017-08-30-haskell-gtk-video-player.html)
* [.Net-Standard](https://msdn.microsoft.com/en-us/magazine/mt842506?f=255&MSPPError=-2147217396)
* [std::invoke-constexpr](https://www.zhihu.com/question/64644157)
* [Config-problem-Haskell](https://www.zhihu.com/question/58557828)
* [mtl-is-not-MonadTransform](https://blog.jle.im/entry/mtl-is-not-a-monad-transformer-library)
* [init-list](https://stackoverflow.com/questions/45939190/vector-does-not-convert-brace-encloser-list/45939475)
* [0.30000000004](http://0.30000000000000004.com/)
* [.long func_name](https://stackoverflow.com/questions/14538075/meaning-long-function-name-in-assembly-language)

### 2017-9-4
* [Intro-to-HTML-Component](http://blog.mecheye.net/2017/08/introduction-to-html-components/)
* [Binary data visualization](https://codisec.com/binary-data-visualization/)
* [The Sweetness of Cake & .NET Core](https://medium.com/@pielegacy/the-sweetness-of-cake-net-core-cb3dfaabb60f)
* [Simple-C++-Reflection-with-CMake](http://onqtam.com/programming/2017-09-02-simple-cpp-reflection-with-cmake/)
* [Value-Category-in-Cpp17](https://medium.com/@barryrevzin/value-categories-in-c-17-f56ae54bccbe)
* [Interpolated-string-ternary](https://stackoverflow.com/questions/31844058/how-to-use-the-ternary-operator-inside-an-interpolated-string)

### 2017-9-6
* [Flash-Dumping](https://blog.quarkslab.com/flash-dumping-part-i.html)
* [Cpp17-is-formally-approved](https://herbsutter.com/2017/09/06/c17-is-formally-approved/)
* [{}-to-std::nullptr_t](https://stackoverflow.com/questions/46082318/why-converted-to-stdnullptr-t-in-first-order)
* [How Python does Unicode](http://www.b-list.org/weblog/2017/sep/05/how-python-does-unicode/)

### 2017-9-7
* [new-Python-CAPI](https://haypo.github.io/new-python-c-api.html)
* [Neural Language Modeling From Scratch](http://ofir.io/Neural-Language-Modeling-From-Scratch/)
* [LLVM5.0-release-note](http://releases.llvm.org/5.0.0/docs/ReleaseNotes.html)

### 2017-9-8
* [assembly-va-pa-mmu](https://reverseengineering.stackexchange.com/questions/5911/virtual-address-translation-in-assembly-language)
* [Lisp-Machine](https://www.youtube.com/watch?v=T1QlEJ-2Gho)
* [ARMv7-finally-divison](https://community.arm.com/processors/b/blog/posts/divide-and-conquer)
* [Program-Library-HOWTO](http://tldp.org/HOWTO/Program-Library-HOWTO/index.html)
* [gcc-finstrument-functions](http://blog.csdn.net/iamljj/article/details/5886492)
* [Implementing strcmp, strlen, and strstr using SSE 4.2 instructions](https://www.strchr.com/strcmp_and_strlen_using_sse_4.2)
* [vector<bool>](https://isocpp.org/blog/2012/11/on-vectorbool)

### 2017-9-9
* [max-thread-cgroup](https://zhuanlan.zhihu.com/p/29192624)

### 2017-9-10
* [HKT-in-Rust](https://zhuanlan.zhihu.com/p/29021140)
* [Prime-sieve-in-Haskell](https://stackoverflow.com/questions/11768958/prime-sieve-in-haskell)
* [Dynamic-MST](https://zhuanlan.zhihu.com/p/28644481)
* [Build-a-PL](http://hn.premii.com/#/comments/15171238)
* [Delimited Continuations and Exception](https://gist.github.com/sebfisch/2235780)
* [Unikernel-Intro](http://blog.dongyueweb.com/unikernel:_从不入门到入门.html)
* [OOP-and-Parallel](https://www.zhihu.com/question/19728806)
* [SSO-23-cpp](https://github.com/elliotgoodrich/SSO-23/blob/master/README.md)
* [GHCI-return-Nothing-default-IO](https://stackoverflow.com/questions/45558914/why-does-return-nothing-return-nothing)
* [Js-ASI-one-line-task](https://stackoverflow.com/questions/2846283/what-are-the-rules-for-javascripts-automatic-semicolon-insertion-asi)
* [Compiler-Intro](https://zhuanlan.zhihu.com/p/29148222)
* [gets()-unsafety](https://stackoverflow.com/questions/1694036/why-is-the-gets-function-so-dangerous-that-it-should-not-be-used)
* [Mixing-x86-and-x64](http://blog.rewolf.pl/blog/?p=102)
* [Execute-x64-under-WOW64](https://int0h.wordpress.com/2009/12/24/the-power-of-wow64/)
* [lambda-capture-forwarding-and-universal-reference](https://stackoverflow.com/questions/46118564/alternative-for-stdbind-in-modern-c)
* [LTO-wrapper](https://stackoverflow.com/questions/19807107/what-is-gcc-lto-wrapper)
* [Working-with-binary-Python](http://www.devdungeon.com/content/working-binary-data-python)

### 2017-9-11
* [What's-bad-POSIX-IO](https://www.nextplatform.com/2017/09/11/whats-bad-posix-io/)
* [2-Phase-lookup-come-to-MSVC](https://blogs.msdn.microsoft.com/vcblog/2017/09/11/two-phase-name-lookup-support-comes-to-msvc/)
* [dll-共享节](http://blog.csdn.net/mydreamremindme/article/details/10311075)
* [ARM-immediate-number-encoding](https://alisdair.mcdiarmid.org/arm-immediate-value-encoding/)
* [ARM-constant-expresssion](https://www.bbsmax.com/A/LPdobBE53a/)

### 2017-9-12
* [gcc-optimization-guide](https://stackoverflow.com/questions/14492436/g-optimization-beyond-o3-ofast)
* [fast-io-in-C](http://abhisharlives.blogspot.com/2012/06/really-fast-io-methods-for-programming.html)
* [backslash-in-Cpp-include](https://stackoverflow.com/questions/5790161/is-the-backslash-acceptable-in-c-and-c-include-directives)
* [POSIX-detect](https://stackoverflow.com/questions/11350878/how-can-i-determine-if-the-operating-system-is-posix-in-c)

### 2017-9-13
* [Monoid](https://deque.blog/2017/09/13/monoids-what-they-are-why-they-are-useful-and-what-they-teach-us-about-software/)
* [march-mtune](http://sdf.org/~riley/blog/2014/10/30/march-mtune/)
* [template-template-template](https://stackoverflow.com/questions/6484484/template-template-parameters/6485439#6485439)
* [apostrophe-and-quotation](https://www.cl.cam.ac.uk/~mgk25/ucs/quotes.html)
* [python-__slots__](https://www.chrisbarra.xyz/posts/let-me-introduce-slots/)
* [ARM-conditional-codes](https://community.arm.com/processors/b/blog/posts/condition-codes-1-condition-flags-and-codes)

### 2017-9-14
* [Performance-equation](https://www.d.umn.edu/~gshute/arch/performance-equation.xhtml)

### 2017-9-15 - 2017-9-17
* [Python并行编程 中文版](http://python-parallel-programmning-cookbook.readthedocs.io/en/latest/index.html)
* [What's-new-in-Py3.7](https://docs.python.org/3.7/whatsnew/3.7.html)
* [Universal-Charset-Detection](http://www-archive.mozilla.org/projects/intl/UniversalCharsetDetection.html)
* [Python-super](https://stackoverflow.com/questions/15896265/python-super-inheritance-and-needed-arguments)
* [Python-dict-implementation](https://www.laurentluce.com/posts/python-dictionary-implementation/)

### 2017-9-18
* [memory-usage-cpp](https://stackoverflow.com/questions/669438/how-to-get-memory-usage-at-run-time-in-c)
* [libstdcxx-allocator](https://gcc.gnu.org/onlinedocs/libstdc++/manual/memory.html#std.util.memory.allocator)
* [rvalue-ref-lvalue-ref-T-overload-resolution](https://stackoverflow.com/questions/17961719/overload-resolution-between-object-rvalue-reference-const-reference)

### 2017-9-19
* [gcc-memory-usage](https://stackoverflow.com/questions/29853981/how-can-i-optimize-gcc-compilation-for-memory-usage)
* [Hindley-Milner-in-Vivint](http://goc.vivint.com/problems/hm)
* [macro-lisp/Rust](https://github.com/JunSuzukiJapan/macro-lisp)
* [CHiso-1](http://cgnail.github.io/academic/lambda-7/)
* [CHiso-Haskell](https://wiki.haskell.org/Curry-Howard-Lambek_correspondence)
* [C++-Allocator](https://zhuanlan.zhihu.com/p/29345773)
* [W3C-DRM-EFF](https://boingboing.net/2017/09/18/antifeatures-for-all.html)
* [crates-io-security](https://users.rust-lang.org/t/security-advisory-for-crates-io-2017-09-19/12960)
* [difference-between-IVT-IDT](https://stackoverflow.com/questions/11540095/what-is-the-difference-between-ivt-and-idt)
* [x86-syscall-better-than-int](https://stackoverflow.com/questions/12806584/what-is-better-int-0x80-or-syscall)
* [x86-syscall-optimization-vDSO](https://en.wikipedia.org/wiki/VDSO)
* [MOVK-example](https://stackoverflow.com/questions/27938768/moving-a-32-bit-constant-in-arm-arch64-register)
* [program-in-memory](http://duartes.org/gustavo/blog/post/anatomy-of-a-program-in-memory/)
* [__builtin_expect](https://stackoverflow.com/questions/15468042/how-far-does-gccs-builtin-expect-go)

### 2017-9-20
* [gcc-prefetch](https://gcc.gnu.org/projects/prefetch.html)
* [PEP-0393-Unicode-flexible-length](https://www.python.org/dev/peps/pep-0393/)
* [wchar_t-Unicode](https://stackoverflow.com/questions/2259544/is-wchar-t-needed-for-unicode-support)
* [syscall-made-by-malloc](https://sploitfun.wordpress.com/2015/02/11/syscalls-used-by-malloc/)
* [computers-are-fast](https://jvns.ca/blog/2014/05/12/computers-are-fast/)
* [Haswell-CPU](https://www.realworldtech.com/haswell-cpu/)
* [XZR-ignore-write](https://community.arm.com/processors/f/discussions/3185/wzr-xzr-register-s-purpose)

### 2017-9-21
* [Python-hash(1)==hash(1.0)](https://stackoverflow.com/questions/32209155/why-can-a-floating-point-dictionary-key-overwrite-an-integer-key-with-the-same-v/32211042#32211042)
* [Python-scope](http://sebastianraschka.com/Articles/2014_python_scope_and_namespaces.html#1-lg---local-and-global-scopes)
* [left-right-hand-matrix](https://ask.helplib.com/1357913)

### 2017-9-22
* [mmap() vs. reading blocks](https://stackoverflow.com/questions/45972/mmap-vs-reading-blocks)
* [Numba-GPU-Python](https://devblogs.nvidia.com/parallelforall/numba-python-cuda-acceleration/)
* [Find-missing-numbers-from-1-N](https://stackoverflow.com/questions/3492302/easy-interview-question-got-harder-given-numbers-1-100-find-the-missing-numbe)
* [register-allocation](https://www.zhihu.com/question/29355187)
* [dyncast](https://github.com/gcc-mirror/gcc/blob/master/libstdc%2B%2B-v3/libsupc%2B%2B/dyncast.cc)
* [FP-Events](https://blog.qfpl.io/posts/reflex/basics/events/)
* [FP-Behavior](https://blog.qfpl.io/posts/reflex/basics/behaviors/)
* [malloc-MT-safety-reentrant](https://stackoverflow.com/questions/855763/is-malloc-thread-safe)
* [TLB-cache-page-miss](https://stackoverflow.com/questions/37825859/cache-miss-a-tlb-miss-and-page-fault)
* [virtual-function-call-assembly](https://stackoverflow.com/questions/4464144/does-c-virtual-function-call-on-derived-object-go-through-vtable)

### 2017-9-23
* [Link-Cut-Tree](http://blog.csdn.net/Sunshine_cfbsl/article/details/52199415)
* [Bootstrapper](http://www.tldp.org/LDP/LG/issue70/ghosh.html)
* [网络流](http://sunshine-cfbsl.com/2017/02/12/%E5%85%B3%E4%BA%8E%E7%BD%91%E7%BB%9C%E6%B5%81-%EF%BC%88%E8%BD%AC%EF%BC%89/#comment-77)
* [glibc-malloc](https://sploitfun.wordpress.com/2015/02/10/understanding-glibc-malloc/)
* [va-args-overload-last](https://stackoverflow.com/questions/24876550/how-does-overload-resolution-work-with-variadic-functions)
* [PyPI-malicious-package](https://arstechnica.com/information-technology/2017/09/devs-unknowingly-use-malicious-modules-put-into-official-python-repository/)
* [Cpp-Zero-width](https://twitter.com/randal_olson/status/744169075497123840?lang=en)
* [dos2unix-to-stderr](https://stackoverflow.com/questions/24720429/why-does-dos2unix-print-to-stderr/24720454)
* [Intro-to-Webrender](https://mozillagfx.wordpress.com/2017/09/21/introduction-to-webrender-part-1-browsers-today/)

### 2017-9-24
* [clear_cache](https://stackoverflow.com/questions/35741814/how-does-builtin-clear-cache-work)
* [01背包-伪多项式](https://www.zhihu.com/question/20686504)
* [JS-Emulator](https://gist.github.com/creaktive/978540)
* [What's-new-in-Cpython-0.27](http://blog.behnel.de/posts/whats-new-in-cython-027.html)
* [2-variable-recurrence-generating-function](https://math.stackexchange.com/questions/206158/solving-recurrence-relation-in-2-variables)
* [multivariable-generating-function](http://www.kylem.net/math/recurrence.html)
* [clobber-list-inline-asm](https://stackoverflow.com/questions/15815901/explanation-for-clobber-list-in-extended-gcc-inline-assembly-executing-the-x87-f)
* [parallel-processing-with-Unix](http://www.pixelbeat.org/docs/unix-parallel-tools.html)
* [MathML-is-a-failed-standard](https://www.peterkrautzberger.org/0186/)
* [Basic-category-for-scala-I](https://blog.scalents.com/2017/09/22/basic-category-theory-for-scala-programmers-part-i/)

### 2017-9-24
* [strrchr-compile-time-BASEFILE](https://stackoverflow.com/questions/8487986/file-macro-shows-full-path)
* [Bessel-glibc](https://www.zhihu.com/question/52901649/answer/132560490)
* [Paxos-intro](https://zhuanlan.zhihu.com/p/29522440)
* [fast-output-cpp](https://stackoverflow.com/questions/1924530/mixing-cout-and-printf-for-faster-output/1926432#1926432)
* [C-externel-inline](https://www.zhihu.com/question/65633138)
* [C-Type](https://zhuanlan.zhihu.com/p/25380214)
* [Cat-Initial-Algebra](https://zhuanlan.zhihu.com/p/24161398)
* [ML-derivation-type-unification](https://zhuanlan.zhihu.com/p/28300506)
* [Algorithm-W-Step-by-Step](https://zhuanlan.zhihu.com/p/26076902)
* [C++-nested-exception-dtor](https://stackoverflow.com/questions/37227300/why-doesnt-c-use-stdnested-exception-to-allow-throwing-from-destructor)
* [Precise-GC-by-Stateful-Metaprogramming](https://medium.com/@bhuztez/precise-garbage-collection-for-c-with-stateful-metaprogramming-726c7b3972fd)
* [Garbage Collection for Python](http://arctrix.com/nas/python/gc/)
* [Emulate GLSL in C++ with stateful metaprogramming](https://medium.com/@bhuztez/emulate-glsl-in-c-with-stateful-metaprogramming-e77640d10d4d)
* [Emulate borrow checker in C++ with stateful metaprogramming](https://medium.com/@bhuztez/emulate-borrow-checker-in-c-with-stateful-metaprogramming-db4b5e94449f)
* [Notation as a Tool of Thought-Convolution](http://www.jsoftware.com/papers/tot.htm)
* [Python-closure-1](https://stackoverflow.com/questions/14413946/what-exactly-is-contained-within-a-obj-closure/14414638#14414638)
* [Python-closure-2](https://stackoverflow.com/questions/26094700/cell-contents-in-python-closure/26094746#26094746)
* [Comparison-of-NTP](https://chrony.tuxfamily.org/comparison.html)
* [Python-MRO-1](http://xymlife.com/2016/05/22/python_mro/)
* [Python-MRO-2](https://laike9m.com/blog/li-jie-python-super,70/)
* [Graphviz](https://www.worthe-it.co.za/programming/2017/09/19/quick-introduction-to-graphviz.html)

### 2017-9-25
* [Linux-C10K](https://www.urbanairship.com/blog/linux-kernel-tuning-for-c500k)
* [gcc-get-overflow](https://stackoverflow.com/questions/2340259/how-to-turn-off-gcc-compiler-optimization-to-enable-buffer-overflow)
* [Intel-i9-Review](https://www.anandtech.com/show/11839/intel-core-i9-7980xe-and-core-i9-7960x-review)
* [Hooking-LuaJIT](https://nickcano.com/hooking-luajit/)
* [Aggregation-in-Haskell](http://tech.frontrowed.com/2017/09/22/aggregations/)
* [SML-and-Ocaml](http://adam.chlipala.net/mlcomp/)
* [let-vs-let*](https://stackoverflow.com/questions/15003518/confused-by-the-difference-between-let-and-let-in-scheme)
* [Pierce-Law-call/cc](https://www.zhihu.com/question/21954238)

### 2017-9-26
* [falign-gcc](https://stackoverflow.com/questions/19470873/why-does-gcc-generate-15-20-faster-code-if-i-optimize-for-size-instead-of-speed)
* [Omit-the-frame-pointer](https://stackoverflow.com/questions/1942801/when-should-i-omit-the-frame-pointer)
* [Link-register-and-Frame-pointer](https://stackoverflow.com/questions/15752188/arm-link-register-and-frame-pointer)
* [Dijkstra-with-negative-edge](https://www.zhihu.com/question/21620069)
* [BL-in-arm-ins](https://stackoverflow.com/questions/34091898/bl-instruction-arm-how-does-it-work)
* [Abseil-cpp-google](https://opensource.googleblog.com/2017/09/introducing-abseil-new-common-libraries.html)
* [ARM-C-Calling-Convention](https://stackoverflow.com/questions/261419/arm-to-c-calling-convention-registers-to-save)
* [permutation-python](https://stackoverflow.com/questions/104420/how-to-generate-all-permutations-of-a-list-in-python)
* [You-are-not-expect-to-understand-pdp-linux](https://www.bell-labs.com/usr/dmr/www/odd.html)

### 2017-9-27
* [.NET-runtime](https://www.hanselman.com/blog/TheBookOfTheRuntimeTheInternalsOfTheNETRuntimeThatYouWontFindInTheDocumentation.aspx)
* [Rust-TiKV-why](https://pingcap.github.io/blog/2017/09/26/whyrust/)
* [Free-Monad-harmful](https://markkarpov.com/post/free-monad-considered-harmful.html)
* [TreeListRecursion](http://cslibrary.stanford.edu/109/TreeListRecursion.html)
* [STL-thread-safety](https://stackoverflow.com/questions/12931787/c11-stl-containers-and-thread-safety)

### 2017-9-28
* [Underhanded-Rust-contest](http://blog.community.rs/underhanded/2016/12/15/underhanded-rust.en-US.html)
* [Microsoft-SAL(source-code-annotation-language)](https://docs.microsoft.com/en-us/visualstudio/code-quality/understanding-sal)
* [Decision Trees Are Free Monads](http://clathomasprime.github.io/hask/freeDecision)
* [Python-get-set-attribute](https://stackoverflow.com/questions/14787334/confused-with-getattribute-and-setattribute-in-python/14787509)
* [__get__-and-__set__](https://stackoverflow.com/questions/3798835/understanding-get-and-set-and-python-descriptors/34554353)
* [Knapsack-NPC](https://www.zhihu.com/question/20686504/answer/230840120)
* [C++-POD-I](https://zhuanlan.zhihu.com/p/29734547)
* [C++-POD-II](https://zhuanlan.zhihu.com/p/29746508)
* [Wiener-RSA-attack](https://sagi.io/2016/04/crypto-classics-wieners-rsa-attack/)
* [Derbycon-2017-writeup](https://labs.nettitude.com/blog/derbycon-2017-ctf-write-up/)
* + tar with symbol link

### 2017-9-29
* [Floating-point-visually-explained](http://fabiensanglard.net/floating_point_visually_explained/)
* [Call-by](https://courses.cs.washington.edu/courses/cse341/98sp/general/parameters.html)
* [Call-by-VResult-Ref](https://stackoverflow.com/questions/32794008/call-by-reference-and-call-by-value-result)

### 2017-9-30
* [Visualize-Ruby-Heap](http://tenderlovemaking.com/2017/09/27/visualizing-your-ruby-heap.html)
* [Top-10-Py-Sept](https://medium.mybridge.co/python-top-10-articles-for-the-past-month-v-sep-2017-e42c26816ab9)
* [remove-last-\n-POSIX](https://stackoverflow.com/questions/1654021/how-can-i-delete-a-newline-if-it-is-the-last-character-in-a-file)
* [C-extern-static-global-variable](https://stackoverflow.com/questions/11055802/static-and-extern-global-variables-in-c-and-c)

### 2017-10-1
* [merge-string-literal](https://stackoverflow.com/questions/6281835/how-do-c-compilers-merge-identical-string-literals)
* [successful-git-branching](http://nvie.com/posts/a-successful-git-branching-model/)
* [Alice-in-Python-projectland](https://veekaybee.github.io/2017/09/26/python-packaging/)
* [Attacking-Bluetooth-BLE](https://www.pentestpartners.com/security-blog/screwdriving-locating-and-exploiting-smart-adult-toys/)
* [ARMv8-vs-v7](https://community.arm.com/cn/f/discussions/2471/armv7-armv8)

### 2017-10-2
* [Diminishing returns of static typing](https://blog.merovius.de/2017/09/12/diminishing-returns-of-static-typing.html)

### 2017-10-3
* [rbp-4-clang-implicit-return-from-main](https://stackoverflow.com/questions/31149806/why-is-0-moved-to-stack-when-using-return-value)
* [Build-a-CPU-with-Haskell](http://yager.io/CPU/CPU1.html)
* [Strong-weak-global-gcc](https://leondong1993.github.io/2017/04/15/strong-weak-symbol/)
* [weak-symbol-uninitialized-global-tentative-definition-Appendix-J](https://stackoverflow.com/questions/3691835/why-uninitialized-global-variable-is-weak-symbol)
* [branch-return-address](https://community.arm.com/processors/b/blog/posts/branch-and-call-sequences-explained)
* [Are-switch-jump-table-the-fastest](http://www.cipht.net/2017/10/03/are-jump-tables-always-fastest.html)
* [A-lesson-in-shortcuts](https://plus.google.com/+RobPikeTheHuman/posts/R58WgWwN9jp)

### 2017-10-4
* [Reverse-trickbot](https://qmemcpy.github.io/post/reverse-engineering-malware-trickbot-part-2-loader)
* [CppCon2017-Trip-Report](https://deque.blog/2017/10/04/my-cppcon-2017-trip-report-10-great-talks-to-watch-and-learn-from/)
* [Useful-gcc-warning-options-not-by-Wall](https://kristerw.blogspot.com/2017/09/useful-gcc-warning-options-not-enabled.html)
* [Interactive-vim](http://www.openvim.com/)
* [Determine-word-size](https://stackoverflow.com/questions/2301007/determine-word-size-of-my-processor)
* [From-design-patterns-to-Category-theory](http://blog.ploeh.dk/2017/10/04/from-design-patterns-to-category-theory/)
* [An Internship on Laziness](https://v8project.blogspot.com/2017/10/lazy-unlinking.html)

### 2017-10-5
* [why-python-not-del-large-object](http://effbot.org/pyfaq/why-doesnt-python-release-the-memory-when-i-delete-a-large-object.htm)
* [py-ctypes-tutorial](http://starship.python.net/crew/theller/ctypes/tutorial.html)


### 2017-10-6 - 2017-10-8
* [Visual-sorting](https://caspervonb.github.io/toneofsorting/)
* [Rust-container-cheat-sheet](https://www.reddit.com/r/rust/comments/74yrdp/rust_container_cheat_sheet_reposted/)
* [C++-compiler-bench-mark](https://imagine-rt.blogspot.com/2017/10/c-compiler-benchmarks-v2.html)
* [Security.txt](https://securitytxt.org/)
* [Learn-NoSQL](http://hn.premii.com/#/comments/15427932)
* [Visual-ML-dataset](https://github.com/PAIR-code/facets)
* [LivePython](https://github.com/agermanidis/livepython)
* [Runtime-bound-decidable?](https://cstheory.stackexchange.com/questions/5004/are-runtime-bounds-in-p-decidable-answer-no)

### 2017-10-9 - 2017-10-10
* [printf-long-long](https://stackoverflow.com/questions/6400180/how-to-printf-long-long)
* [CSV-injection](http://georgemauer.net/2017/10/07/csv-injection.html)
* [TrickBot-reverse-loader](http://qmemcpy.io/post/reverse-engineering-malware-trickbot-part-2-loader)
* [TrickBot-reverse-core](http://qmemcpy.io/post/reverse-engineering-malware-trickbot-part-3-core)
* [Linux-Windows-driver-difference](https://linux.cn/article-7943-1.html)
* [Hello-world-without-...](https://www.zhihu.com/question/66088898/answer/238099435)
* [Sequence-point-in-printf-%n](https://stackoverflow.com/questions/34637712/sequence-points-in-printf/34637823#34637823)
* [SIMD-via-C#](https://zhuanlan.zhihu.com/p/29842129)
* [Python-exec-2-3-change-global](https://stackoverflow.com/questions/12484706/assignment-order-matters-unexpectedly-with-exec-expr-in-globals-locals/12484830#12484830)
* [ARM-naming-AArch-Thumb](https://stackoverflow.com/questions/28669905/arm-thumb-and-thumb-2-instructions-confusion/28670713#28670713)
* [MSVC-BitScan-intrinin](https://stackoverflow.com/questions/355967/how-to-use-msvc-intrinsics-to-get-the-equivalent-of-this-gcc-code/20468180#20468180)
* [log2-bsr](https://stackoverflow.com/questions/994593/how-to-do-an-integer-log2-in-c/994709#994709)
* [Rust-to-Cpp](https://github.com/bhuztez/porus)
* [gcc-fPIC](https://stackoverflow.com/questions/5311515/gcc-fpic-option)
* [Intel-Tick-Tock](https://zh.m.wikipedia.org/zh-hans/Intel_Tick-Tock)
* [Not-join-on-thread-terminate](https://stackoverflow.com/questions/27392743/c11-what-happens-if-you-dont-call-join-for-stdthread/27392989#27392989)
* [Tensorflow-sucks](http://nicodjimenez.github.io/2017/10/08/tensorflow.html)
* [Hack-CupHead-Collision-check](https://www.youtube.com/watch?v=6B-QN8GFxrI)
* [LEARNABLE PROGRAMMING-Bret-Victor](http://worrydream.com/LearnableProgramming/)
* [Whole-web-at-max-FPS](https://hacks.mozilla.org/2017/10/the-whole-web-at-maximum-fps-how-webrender-gets-rid-of-jank/)
* [iOS-steal-password-by-asking](https://krausefx.com/blog/ios-privacy-stealpassword-easily-get-the-users-apple-id-password-just-by-asking)
* [Windows-NT-overview-no-runtime-but-cpp](https://technet.microsoft.com/library/cc767881.aspx)
* [cpp-in-jemalloc](https://lists.freebsd.org/pipermail/freebsd-current/2017-October/067109.html)
* [Macro-less-code-exec-in-MsWord](https://sensepost.com/blog/2017/macro-less-code-exec-in-msword/)
* [Implement-TCO](https://stackoverflow.com/questions/6003037/what-are-some-good-ways-of-implementing-tail-call-elimination)
* [gcc-fPIE-ASLR](https://stackoverflow.com/questions/2463150/fpie-position-independent-executable-option-gcc-ld/5030518#5030518)
* [Disable-Intel-IME](https://wiki.gentoo.org/wiki/Sakaki%27s_EFI_Install_Guide/Disabling_the_Intel_Management_Engine)
* [Playing-APK-Golf](https://fractalwrench.co.uk/posts/playing-apk-golf-how-low-can-an-android-app-go/)
* [NF-HNF-WHNF](https://stackoverflow.com/questions/6872898/haskell-what-is-weak-head-normal-form)
* [return-unique_ptr](https://stackoverflow.com/questions/4316727/returning-unique-ptr-from-functions)
* [propagate_on_xxx](https://stackoverflow.com/questions/27471053/example-usage-of-propagate-on-container-move-assignment)
* [Cpp-exception-from-SEH](https://blogs.msdn.microsoft.com/oldnewthing/20170728-00/?p=96706)
* [selenium-switch-iframe](https://stackoverflow.com/questions/37687149/how-to-switch-to-iframe-in-selenium)

### 2017-10-11
* [slow-power-glibc](http://entropymine.com/imageworsener/slowpow/)
* [DLL-best-practice](https://msdn.microsoft.com/en-us/library/windows/desktop/dn633971.aspx)
* [Killing-Module-TS](https://izzys.casa/posts/millennials-are-killing-the-modules-ts.html)
* [Little-story-about-the-yes-Linux-command](https://matthias-endler.de/2017/yes/)
* [implicit-constexpr-virtual-bug](https://stackoverflow.com/questions/46696247/implicitly-virtual-constexpr-function)
* [phantom-type-alignment-not layout-compatitible](https://stackoverflow.com/questions/46425250/does-a-phantom-type-have-the-same-alignment-as-the-original-one)

### 2017-10-12
* [Rust-1.21](https://blog.rust-lang.org/2017/10/12/Rust-1.21.html)
* [git-bomb](https://kate.io/blog/git-bomb/)
* [Kernel-ASLR-and-amd64](http://blog.netbsd.org/tnf/entry/kernel_aslr_on_amd64)
* [large-arg-to-sine](https://stackoverflow.com/questions/46711285/sine-result-depends-on-c-compiler-used)
* [atomic-with-multiple-CPU](https://software.intel.com/zh-cn/blogs/2010/01/14/cpucpu)
* [Cache-coherence](https://en.wikipedia.org/wiki/Cache_coherence)
* [Musing-on-Cython](http://notes-on-cython.readthedocs.io/en/latest/index.html)

### 2017-10-13
* [Cache-swap-alg](http://www.cnblogs.com/-OYK/archive/2012/12/05/2803317.html)
* [CFG-decidable](https://cs.stackexchange.com/questions/315/are-all-context-free-and-regular-languages-efficiently-decidable)
* [OMG-a-lisp-runs-python](http://kitchingroup.cheme.cmu.edu/blog/2016/03/30/OMG-A-Lisp-that-runs-python/)
* [Computational-Geometry-Set-Operations-on-Polytopes](https://maxow.github.io/posts/computational-geometry-set-operations-on-polytopes.html)
* [SmallerC](https://github.com/alexfru/SmallerC)
* [Shell-operator](https://unix.stackexchange.com/questions/159513/what-are-the-shells-control-and-redirection-operators)
* [Lambda-cubde](http://www.rbjones.com/rbjpub/logic/cl/tlc001.htm)

### 2017-10-14
* [Cost-of-Kotlin](http://oneeyedmen.com/cost-of-kotlin-preliminary-results-part3-invocation.html)
* [Impossible-dream-of-USB-C](https://marco.org/2017/10/14/impossible-dream-of-usb-c)
* [Xbox360-to-Win-Exec](https://github.com/rexdex/recompiler#porting-xbox360-executables-to-windows)

### 2017-10-15
* [Why-physicists-still-use-Fortran](http://moreisdifferent.com/2015/07/16/why-physicsts-still-use-fortran/)
* [What-is-Nix](https://yakking.branchable.com/posts/what-and-why-nix/)
* [From-CL-to-Julia](https://tpapp.github.io/post/common-lisp-to-julia/)
* [No-Y-in-Haskell-HM](https://stackoverflow.com/questions/4273413/y-combinator-in-haskell)
* [Why-PostgreSQL-is-better-than-MySQL](https://blog.2ndquadrant.com/postgresql-better-mysql-1/)
* [Good/Bad-Math-Lambda-Calculus](http://cgnail.github.io/academic/lambda-index/)

### 2017-10-16
* [Teach Youself Scheme in Fixnum Days](http://tiankonguse.com/manual/t-y-scheme/zh/)
* [Yet Another Scheme Tutorial](https://deathking.github.io/yast-cn)
* [Security-Public-RSS](https://www.zhihu.com/question/66470538/answer/242568128)
* [剖析Haskell应用架构/DDD](https://zhuanlan.zhihu.com/p/21898460)
* [Programming-with-Algebra](https://developer.atlassian.com/blog/2016/03/programming-with-algebra/)
* [DLL-UEFI-1](https://zhuanlan.zhihu.com/p/30000572)
* [DLL-UEFI-2](https://zhuanlan.zhihu.com/p/30106517)
* [Real-qsort-in-Haskell](http://augustss.blogspot.com/2007/08/quicksort-in-haskell-quicksort-is.html)
* + normally it's deforested tree sort
* [Haskell-mapM-mapM_](https://stackoverflow.com/questions/27609062/what-is-the-difference-between-mapm-and-mapm-in-haskell)
* [Reverse-Luac](https://zhuanlan.zhihu.com/p/30094117)
* [Rust-overflow-usize](https://zhuanlan.zhihu.com/p/30117447)
* [read()-depends-on-files](https://stackoverflow.com/questions/8975521/read-from-stdin/8975733#8975733)
* [McCarthy-91-verification-decreasing-termination](https://en.wikipedia.org/wiki/McCarthy_91_function)
* [Kan-extension](https://www.zhihu.com/question/65645659)
* [Perceptually uniform color spaces](https://programmingdesignsystems.com/color/perceptually-uniform-color-spaces/)
* [Rust-embedded](https://github.com/rust-embedded/)
* [WPA2-KRACK](https://www.zhihu.com/question/66736864)
* [Is-Haskell-right-language-teach-FP-PLT](http://profsjt.blogspot.com/2017/10/is-haskell-right-language-for-teaching.html)
* [std::string-optimization](https://shaharmike.com/cpp/std-string/)
* [std::string-concatentation-+=/append](https://stackoverflow.com/questions/18892281/most-optimized-way-of-concatenation-in-strings)

### 2017-10-17
* [SMP-NUMA](https://www.quora.com/What-is-the-difference-between-SMP-and-NUMA-architectures)
* [Falling through the KRACKs](https://blog.cryptographyengineering.com/2017/10/16/falling-through-the-kracks/)
* [Keyboard-latency](https://danluu.com/keyboard-latency/)
* [Grok-the-GIL](https://opensource.com/article/17/4/grok-gil)
* [x86-64-canonical-form-addresses](https://stackoverflow.com/questions/38977755/address-canonical-form-and-pointer-arithmetic)
* [iterative-copy-tree](https://stackoverflow.com/questions/9647559/make-a-copy-of-a-binary-tree-in-an-iterative-manner-i-e-no-recursion-is-allowe)
* [Continuation-develop](http://www.ccidnet.com/2005/0722/292705.shtml)
* [Coroutine-and-Continuation](http://simple-is-better.com/news/697)
* [Pentium-FDIV-bug](https://en.wikipedia.org/wiki/Pentium_FDIV_bug)
* [Hot-swapping-Haskell](http://simonmar.github.io/posts/2017-10-17-hotswapping-haskell.html)
* [Haskell Typeclasses vs. C++ Classes](http://www.michaelburge.us/2017/10/15/haskell-typeclasses-vs-cpp-classes.html)
* [MTBF](https://zh.wikipedia.org/wiki/%E5%B9%B3%E5%9D%87%E6%95%85%E9%9A%9C%E9%96%93%E9%9A%94)

### 2017-10-18
* [Stop-using-word2vec](http://multithreaded.stitchfix.com/blog/2017/10/18/stop-using-word2vec/)
* [TiDB-1.0](https://pingcap.github.io/blog/2017/10/17/announcement/)
* [FE=Checklist](https://github.com/thedaviddias/Front-End-Checklist)
* [KRACK-test](https://github.com/vanhoefm/krackattacks-test-ap-ft)
* [let-let*-letrec](https://www.reddit.com/r/Racket/comments/778qkf/let_let_and_letrec/)
* [browser-security-beyond-sandboxing](https://blogs.technet.microsoft.com/mmpc/2017/10/18/browser-security-beyond-sandboxing/)
* [symmetric-difference-of-recognizable-not-closed](https://cs.stackexchange.com/questions/9760/non-turing-recognizable-from-symmetric-difference?rq=1)
* + [but with finite language](https://cs.stackexchange.com/questions/44091/symmetric-difference-of-turing-recognizable-and-finite-languages)
* [practical-public-crypto](https://hackaday.com/2017/10/18/practical-public-key-cryptography/)
* [set-of-R-and-2^N](https://math.stackexchange.com/questions/553526/the-set-of-real-numbers-and-power-set-of-the-natural-numbers)
* [Gentle-introducion-to-parsec](https://www.barrucadu.co.uk/posts/etc/2013-05-27-a-gentle-introduction-to-parsec.html)
* [Python-sandbox-exploiting](https://zhuanlan.zhihu.com/p/30169159)
* [角点检测](https://www.cnblogs.com/ronny/p/4009425.html)
* [AlphaGo Zero](https://www.zhihu.com/question/66861516)
* [some-tools-of-PFE](https://blogs.msdn.microsoft.com/daviddasneves/2017/10/15/some-tools-of-a-pfe/)
* [C90-implicit-function-definition](https://stackoverflow.com/questions/46645399/why-is-c-more-restrictive-regarding-forward-declaration-of-function-prototypes)
* [Creating rows vs. columns performance](https://stackoverflow.com/questions/4988915/mysql-creating-rows-vs-columns-performance)
* [Python-basic-NN](http://iamtrask.github.io/2015/07/12/basic-python-network/)
* [Why-windows-10-sucks](http://itvision.altervista.org/why-windows-10-sucks.html)
* [bool-macro-int-typedef](https://stackoverflow.com/questions/46797609/why-do-major-compilers-use-typedef-for-stdint-h-but-use-define-for-stdbool-h)
* [p=27a^2+27a+7-RSA-is-unsafe](https://mathoverflow.net/questions/283767/conjecturally-unsafe-rsa-primes-p-27a227a7)
* [Less-copy-in-memoryview](https://eli.thegreenplace.net/2011/11/28/less-copies-in-python-with-the-buffer-protocol-and-memoryviews)

### 2017-10-19
* [Blockchain-visually](https://unwttng.com/what-is-a-blockchain)
* [x86-LFENCE-SFENCE-MFENCE](https://stackoverflow.com/questions/20316124/does-it-make-any-sense-instruction-lfence-in-processors-x86-x86-64)
* [How-x86-implement-atomic-operation](https://stackoverflow.com/questions/38447226/atomicity-on-x86)
* [Modern-JS-explained-to-dinosaurs](https://medium.com/@peterxjang/modern-javascript-explained-for-dinosaurs-f695e9747b70)
* [Why do we need atomic_shared_ptr?](https://www.justsoftwaresolutions.co.uk/threading/why-do-we-need-atomic_shared_ptr.html)
* [shared_ptr-vs-atomic_shared_ptr](https://www.justsoftwaresolutions.co.uk/threading/why-do-we-need-atomic_shared_ptr.html)
* [shared_ptr-thread-safety](https://stackoverflow.com/questions/9127816/stdshared-ptr-thread-safety-explained)
* [std::string-memory-overhead](https://stackoverflow.com/questions/5058676/stdstring-implementation-in-gcc-and-its-memory-overhead-for-short-strings)
* [PyPy, Garbage Collection, and a Deadlock](https://emptysqua.re/blog/pypy-garbage-collection-and-a-deadlock/)
* [The definitive guide on how to use static, class or abstract methods in Python](https://julien.danjou.info/blog/2013/guide-python-static-class-abstract-methods)
* [The definitive guide to Python exceptions](https://julien.danjou.info/blog/2016/python-exceptions-guide)
* [pythonthreads-and-the-global-interpreter-lock](http://jessenoller.com/blog/2009/02/01/python-threads-and-the-global-interpreter-lock)
* [using-cgroups-to-limit-IO](https://andrestc.com/post/cgroups-io/)
* [Faster, more memory efficient and more ordered dictionaries on PyPy](https://morepypy.blogspot.com/2015/01/faster-more-memory-efficient-and-more.html)
* [EternalBlue-everything](https://research.checkpoint.com/eternalblue-everything-know/)
* [Nim-GC](https://nim-lang.org/araq/destructors.html)

### 2017-10-20
* [threadpool-c++14](http://roar11.com/2016/01/a-platform-independent-thread-pool-using-c14/)
* [kernel-101](http://arjunsreedharan.org/post/82710718100/kernel-101-lets-write-a-kernel)
* [Object-Oriented-Haskell-SQL](https://programming.tobiasdammers.nl/blog/2017-10-17-object-oriented-haskell)
* [First-PS4-exploit-adieu](https://fail0verflow.com/blog/2017/ps4-namedobj-exploit/)
* [HolyJIT](https://blog.mozilla.org/javascript/2017/10/20/holyjit-a-new-hope/)
* [Simplifiy-build-c++](https://mropert.github.io/2017/10/19/simplifying_build-part1/)
* [lptable-tutorial](https://www.frozentux.net/iptables-tutorial/iptables-tutorial.html)
* [Round-robin](http://blog.csdn.net/ytdxyhz/article/details/52760960)
* [Top-20-C++-multithread-problem](http://www.acodersjourney.com/2017/08/top-20-cplusplus-multithreading-mistakes/)
* [python-logging-multithread-to-single-file](https://www.v2ex.com/t/399193#reply3)
* [Haskell-Any](https://stackoverflow.com/questions/6479444/is-there-a-type-any-in-haskell)

### 2017-10-20
* [Dismissing-Python-GC](https://engineering.instagram.com/dismissing-python-garbage-collection-at-instagram-4dca40b29172)
* [GHC-cross-platform](https://medium.com/@zw3rk/ghc-cross-compiler-binary-distributions-490bb2c0c411)
* [C#-7.2-with-VS](http://www.c-sharpcorner.com/article/c-sharp-7-2-new-features-with-visual-studio-2017/)
* [Write-a-bootloader](http://3zanders.co.uk/2017/10/13/writing-a-bootloader/)
* [Squeezing Rust into production](http://www.tzaeru.com/squeezing-rust-into-production-part-2/)
* [VIM-after-15yrs](https://statico.github.io/vim3.html)
* [Type-Inference](https://medium.com/@dhruvrajvanshi/type-inference-for-beginners-part-1-3e0a5be98a4b)
* [9-new-features-in-Java-9](https://www.pluralsight.com/blog/software-development/java-9-new-features)
* [Dafny-intro](https://zhuanlan.zhihu.com/p/30321583)
* [Pipeline-prediction](http://www.cnblogs.com/yangecnu/p/4196026.html)
* [Type-Inference-2](https://medium.com/@dhruvrajvanshi/type-inference-for-beginners-part-2-f39c33ca9513)
* [L_REC-undecidable](https://math.stackexchange.com/questions/344545/is-this-undecidable-language-recognizable)
* [pyc-files](http://www.curiousefficiency.org/posts/2011/04/benefits-and-limitations-of-pyc-only.html)

### 2017-10-22
* [scrap-all-typeclasses-into-1](http://h2.jaguarpaw.co.uk/posts/scrap-all-your-typeclasses-but-one/)
* [scrap-your-typeclass](http://www.haskellforall.com/2012/05/scrap-your-type-classes.html)
* [kernel-exploitation-deferencing-nullptr](https://0x00sec.org/t/kernel-exploitation-dereferencing-a-null-pointer/3850)
* [Rust-to-wasm](https://lord.io/blog/2017/wargo/)

### 2017-10-23
* [Java-List<>](https://stackoverflow.com/questions/6231973/difference-between-list-list-listt-liste-and-listobject)
* [game-developer-resources](https://unlikekinds.com/t/game-developer-resources)
* [spin_lock](https://www.zhihu.com/question/66889164)
* [analysis-malware-by-statistics](https://zhuanlan.zhihu.com/p/30291905)
* [.volatile.iso/ms](https://msdn.microsoft.com/en-us/library/jj204392.aspx?f=255&MSPPError=-2147217396)
* [acquire-and-release-sementics](http://preshing.com/20120913/acquire-and-release-semantics/)
* [memory_order_consume](http://preshing.com/20140709/the-purpose-of-memory_order_consume-in-cpp11/)
* [React-design](https://zhuanlan.zhihu.com/p/30277192)
* [NLP-intro](https://zhuanlan.zhihu.com/p/30354720)
* [goroutine-抢占](https://zhuanlan.zhihu.com/p/30353139)
* [Timsort-verification](http://mp.weixin.qq.com/s/wEl7CY9dvY96M-0JrgqI0g)
* [Covariance-Contravariance](https://extremegtr.github.io/2016/07/11/Covariance-And-Contravariance-In-Java/)
* [IIFE-cpp](http://articles.emptycrate.com/2014/12/16/complex_object_initialization_optimization_with_iife_in_c11.html)
* [C#-8-future](https://rubikscode.net/2017/10/23/c-8-the-shape-of-the-things-to-come/)
* [stack-protector](http://www.productive-cpp.com/hardening-cpp-programs-stack-protector/)
* [stack-smashing-protector(SSP)](http://wiki.osdev.org/Stack_Smashing_Protector)
* [Magic-about-Websocket-CSS3](https://medium.com/outsystems-engineering/making-magic-with-websockets-and-css3-ec22c1dcc8a8)
* [Why-no-VLA-in-C++0x](https://groups.google.com/forum/#!topic/comp.std.c++/K_4lgA1JYeg)
* [Why-no-VLA-in-C++](https://stackoverflow.com/questions/1887097/why-arent-variable-length-arrays-part-of-the-c-standard)
* [OCaml-let-rec](https://stackoverflow.com/questions/900585/why-are-functions-in-ocaml-f-not-recursive-by-default)
* [MSVC-d2cgsummary-compile-time](http://aras-p.info/blog/2017/10/23/Best-unknown-MSVC-flag-d2cgsummary/)
* [MSVC-hidden-flags](https://www.reddit.com/r/cpp/comments/787lmw/best_unkown_msvc_flag_d2cgsummary_compile_time/)
* [binomial-tail-recursive](https://stackoverflow.com/questions/28896626/tail-recursive-binomial-coefficient-function-in-haskell)
* [Derived-template-class](https://stackoverflow.com/questions/4643074/why-do-i-have-to-access-template-base-class-members-through-the-this-pointer)
* [Dis-interview](http://www.zenlife.tk/interview-for-distributed-storage.md)
* [Multiple-def-of-spin_lock](http://locklessinc.com/articles/locks/)
* [spin-lock-implementation](https://www.zhihu.com/question/55764216)

### 2017-10-24
* [Rust-1.21](https://www.infoq.com/news/2017/10/rust-1-21-released)
* [Cpp17-interview-with-Herb-Sutter](https://www.infoq.com/news/2017/10/cpp-17-herb-sutter-interview)
* [.NET-Core-2.0](https://weblog.west-wind.com/posts/2017/Oct/22/NET-Core-20-and-ASPNET-20-Core-are-finally-here)
* [PWN2WIn2017-shift-register-reverse-integrated-circuits](http://blog.dragonsector.pl/2017/10/pwn2win-2017-shift-register.html)
* [Counter-example-of-typeclass](http://blog.functorial.com/posts/2015-12-06-Counterexamples.html?repost)
* [Games-Look-Bad-1](https://ventspace.wordpress.com/2017/10/20/games-look-bad-part-1-hdr-and-tone-mapping/)

### 2017-10-25
* [VLA-speed](https://stackoverflow.com/questions/34847662/is-accessing-statically-or-dynamically-allocated-memory-faster)
* [Why-Python-is-slow](http://jakevdp.github.io/blog/2014/05/09/why-python-is-slow/)
* [SciPy-1.0](https://mail.python.org/pipermail/scipy-user/2017-October/037357.html)
* [Imperative-Haskell](http://vaibhavsagar.com/blog/2017/05/29/imperative-haskell/)
* [Want-speed-passing-by-value](https://web.archive.org/web/20140205194657/http://cpp-next.com/archive/2009/08/want-speed-pass-by-value/)
* [copy-elision-on-argument](https://stackoverflow.com/questions/33872026/copy-elision-for-pass-by-value-arguments)
* [copy-elision-prvalue+xvalue](https://zhuanlan.zhihu.com/p/22821671)

### 2017-10-26
* [Optimising-free-monad-using-Plate](https://qfpl.io/posts/optimising-free-with-plated/)
* [Learning-a-hierarchy](https://blog.openai.com/learning-a-hierarchy/)
* [How-to-use-Zorn's-lemma](http://www.tricki.org/article/How_to_use_Zorns_lemma)
* [recursion-tail-calls-and-trampolines](http://www.datchley.name/recursion-tail-calls-and-trampolines/)

### 2017-10-27
* [Make-2+2=5](https://codegolf.stackexchange.com/questions/28786/write-a-program-that-makes-2-2-5)

### 2017-10-28
* [Void-linux](https://www.linux.com/learn/intro-to-linux/2017/10/void-linux-salute-old-school-linux)
* [GADT](https://www.zhihu.com/question/67043774)
* [Linux-PLT-GOT](https://www.zhihu.com/question/21249496)
* [From-object-algebra-to-finally-tagless-interpreter](https://oleksandrmanzyuk.wordpress.com/2014/06/18/from-object-algebras-to-finally-tagless-interpreters-2/)
* [tagless-final-encoding-of-language](https://wickstrom.tech/programming/2017/06/05/tagless-final-encoding-of-a-test-language.html)
* [Agda-intro](http://hawnzug.me/posts/2017-03-01-translation-agda-introduction.html)
* [Max-size-of-IOS-app](https://stackoverflow.com/questions/19646205/maximum-size-for-ios-app)
* [eval-apply-circle](https://mitpress.mit.edu/sicp/full-text/sicp/book/node77.html)
* [Hack-webapp](https://zhuanlan.zhihu.com/p/30400096)
* [parametricity-intro](https://www.well-typed.com/blog/2015/05/parametricity/)
* [constexpr-captured-lambda](https://stackoverflow.com/questions/46900655/is-it-legal-to-use-a-const-value-captured-in-a-lambda-as-a-template-argument)
* [Structure-encoding-editting](https://blog.isomorf.io/an-experiment-in-structured-code-editing-68b917a9157c)
* [Enum-as-template-argument](https://stackoverflow.com/questions/46933091/is-it-allowed-to-specialize-a-template-with-enums-with-the-same-integral-value/46933478#46933478)
* [language-implementing-null](https://softwareengineering.stackexchange.com/questions/237697/if-null-is-bad-why-do-modern-languages-implement-it)
* [Monad-io-computational-order-temporal-order](https://www.reddit.com/r/haskell/comments/244gil/how_are_monads_not_about_orderingsequencing/)
* [IO-not-satify-monad-laws](https://stackoverflow.com/questions/12617664/a-simple-example-showing-that-io-doesnt-satisfy-the-monad-laws)
* [intel-lapicw-twice](https://twitter.com/johnregehr/status/923591402767900672)
* [uint_fast32_t](https://stackoverflow.com/questions/46959685/why-would-uint32-t-be-preferred-rather-than-uint-fast32-t/46960509#46960509)
* [understanding-FFT](http://jakevdp.github.io/blog/2013/08/28/understanding-the-fft/)
* [C++-compile-time](https://www.zhihu.com/question/42964826)

### 2017-10-29
* [Docker-over-fat-binary](http://www.smashcompany.com/technology/why-would-anyone-choose-docker-over-fat-binaries)
* [Gilectomy-GIL-less-python](https://lwn.net/Articles/723514/)
* [PyPy-STM-GIL-less-python](http://pypy.org/tmdonate2.html)
* [PyPy-remove-GIL](https://morepypy.blogspot.com/2017/08/lets-remove-global-interpreter-lock.html)
* [Greg's-1.5-Python-remove-GIL](https://mail.python.org/pipermail/python-dev/2001-August/017099.html)
* [PyPy-GIL](http://doc.pypy.org/en/latest/faq.html#does-pypy-have-a-gil-why)

### 2017-10-30
* [Python-hardest-problem-GIL](https://jeffknupp.com/blog/2012/03/31/pythons-hardest-problem/)
* [Python-hardest-problem-GIL-revisited](https://jeffknupp.com/blog/2013/06/30/pythons-hardest-problem-revisited/)

### 2017-10-31
* [Do-you-need-a-VPN](https://blog.mozilla.org/internetcitizen/2017/08/29/do-you-need-a-vpn/)
* [HTTP=103](https://datatracker.ietf.org/doc/draft-ietf-httpbis-early-hints/)
* [So-you-want-to-write-a-type-checker](http://languagengine.co/blog/so-you-want-to-write-a-type-checker/)
* [C++-Bestiary](http://videocortex.io/2017/Bestiary/)
* [Persistent-RBT-Haskell](https://functional.works-hub.com/blog/Persistent-Red-Black-Trees-in-Haskell?utm_source=Reddit&utm_medium=post&utm_campaign=peter&utm_content=blog)
* [Crafting-interpreter](http://www.craftinginterpreters.com/contents.html)
* [How-to-implement-dependent-type-theory](http://math.andrej.com/2012/11/08/how-to-implement-dependent-type-theory-i/)
* [dependent-type-compiler](https://cstheory.stackexchange.com/questions/18777/is-compiler-for-dependent-type-much-harder-than-an-intepreter)

### 2017-11-1
* [How-lazy-evaluation-in-Haskell](https://hackhands.com/lazy-evaluation-works-haskell/)
* [Common-misconception-of-C++-TS-Modules](https://build2.org/article/cxx-modules-misconceptions.xhtml)

### 2017-11-2
* [Minimal-guide-to-SQLite](http://tech.marksblogg.com/sqlite3-tutorial-and-guide.html)
* [Fearlesss-Concurrency-in-Rust](https://blog.rust-lang.org/2015/04/10/Fearless-Concurrency.html)
* [Have-fun-with-Mach-O](https://www.pnfsoftware.com/blog/having-fun-with-obfuscated-mach-o-files/)
* [Python-Parallelism](https://segmentfault.com/a/1190000000382873)

### 2017-11-3
* [2FA-Hash](https://techblog.bozho.net/enabling-two-factor-authentication-web-application/)
* [WPS-developing](http://bbs.wps.cn/thread-22332423-1-1.html)
* [MySQL-vs-MariaDB](https://www.percona.com/blog/2017/11/02/mysql-vs-mariadb-reality-check/)
* [Linux-container-in-500-lines](https://blog.lizzie.io/linux-containers-in-500-loc.html)
* [Reverse-guitar-hero](https://hackaday.com/2017/09/25/reverse-engineering-guitar-hero/)

### 2017-11-4
* [Cpp-Relaxed-template-argument](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2016/p0522r0.html)
* [Write-line-in-C](https://zhuanlan.zhihu.com/p/30553006)
* [Implement-coroutine-C](https://stackoverflow.com/questions/121757/how-do-you-implement-coroutines-in-c)
* [Coroutine-in-C](https://www.chiark.greenend.org.uk/~sgtatham/coroutines.html)
* [My-VM-is-lighter-than-you](https://zhuanlan.zhihu.com/p/30594040)
* [Neural Language Modeling From Scratch](http://ofir.io/Neural-Language-Modeling-From-Scratch/?a=1)
* [Why does using the same cache-line from multiple threads not cause serious slowdown?](https://stackoverflow.com/questions/46919032/why-does-using-the-same-cache-line-from-multiple-threads-not-cause-serious-slowd)
* [x86-SSE-auto-acquire-release?](https://stackoverflow.com/questions/19093137/does-x86-sse-instructions-have-an-automatic-release-acquire-order/27302931#27302931)
* [Cap'n Proto, FlatBuffers, and SBE](https://capnproto.org/news/2014-06-17-capnproto-flatbuffers-sbe.html)
* [AlphaGo-Zero](http://tim.hibal.org/blog/alpha-zero-how-and-why-it-works/)
* [Profiling-go](http://www.integralist.co.uk/posts/profiling-go/)
* [Implement-a-kv-store](https://samrat.me/posts/2017-11-04-kvstore-linear-hashing/)

### 2017-11-5
* [Python-class-def-internals](https://eli.thegreenplace.net/2012/06/15/under-the-hood-of-python-class-definitions)
* [Self-Replicating Functions](http://tylerneylon.com/a/self_repl/)
* [Penetration-test-cheat-sheet](https://techincidents.com/penetration-testing-cheat-sheet/)

### 2017-11-6
* [Python-Packaging-user-guide](https://packaging.python.org/)
* [MINIX-back-door-Intel](https://www.networkworld.com/article/3236064/servers/minix-the-most-popular-os-in-the-world-thanks-to-intel.html)
* [libreboot](https://libreboot.org/faq.html#intel)
* [GreenHoney](http://muyueh.com/greenhoney/)
* [Difference-between-stack-and-frame](https://stackoverflow.com/questions/23848391/what-is-the-difference-between-a-stack-and-a-frame)

### 2017-11-7
* [FP-Jargon](https://functional.works-hub.com/blog/Functional-Programming-Jargon)
* [Virtual-memory-tricks](http://ourmachinery.com/post/virtual-memory-tricks/)
* [Advance-ctypes](https://dbader.org/blog/python-ctypes-tutorial-part-2)
* [heap-to-stack-optimization](https://stackoverflow.com/questions/47075871/can-the-compiler-optimize-from-heap-to-stack-allocation/47076607#47076607)
* [sort-and-universe](https://cs.stackexchange.com/questions/53674/difference-between-sort-and-universe)
* [__del__-PEP484-Py](https://stackoverflow.com/questions/18971451/how-many-times-can-del-be-called-per-object-in-python)
* [Race-condition-muduo](https://zhuanlan.zhihu.com/p/30522095)
* [folly-Poly](https://github.com/facebook/folly/blob/master/folly/docs/Poly.md)
* [type-family-dependency](https://stackoverflow.com/questions/11789552/type-keyword-in-class-and-instance-declarations/11791481#11791481)
* [quick-sort-better](https://stackoverflow.com/questions/4289024/why-is-quicksort-faster-in-average-than-others/4292700#4292700)
* [自相似函数](https://www.zhihu.com/question/35867114/answer/64865516)
* [|-,|=,=>](https://www.zhihu.com/question/21191299)
* [CSV-injection](https://zhuanlan.zhihu.com/p/30804904)
* [Hash-Killer](http://vfleaking.blog.163.com/blog/static/1748076342013229102430789/)
* [specifier-not-inherit](https://stackoverflow.com/questions/47104799/does-attribute-specifier-sequence-inherit/47105294#47105294)
* [STATS-385-theory-of-ML](https://stats385.github.io/)
* [Windows-TCP-winsocks](https://web.archive.org/web/20020322041909/http://www.kuro5hin.org/story/2001/6/19/05641/7357)
* [乱序执行-内存屏障](http://blog.csdn.net/dd864140130/article/details/56494925)

### 2017-11-8 - 2017-11-9
* [i386-i686-x86_64](https://serverfault.com/questions/610308/x86-i386-i686-amd64-i5-i7-archtecture-processor-confusion)
* [F-Algebra](https://zhuanlan.zhihu.com/p/30833827)
* [Fast-typechecking-for-JS](https://blog.acolyer.org/2017/11/08/fast-and-precise-type-checking-for-javascript/)
* [MIN-MAX-operator-UNIX-C](https://retrocomputing.stackexchange.com/questions/4965/why-were-the-min-and-the-max-operators-abandoned-in-the-c-language)
* [Ten-modern-language-feature](https://medium.com/@kasperpeulen/10-features-from-various-modern-languages-that-i-would-like-to-see-in-any-programming-language-f2a4a8ee6727)
* [boost-multi_index_map](https://stackoverflow.com/questions/4206349/how-boost-multi-index-is-implemented)
* [real-time-ascii-decision-tree](https://art.pixlab.io/)
* [x86_64-JIT-python](https://csl.name/post/python-jit/)

### 2017-11-10
* [8-yrs-of-Golang](https://blog.golang.org/8years)
* [Apple-A11-core](https://www.mikeash.com/pyblog/friday-qa-2017-11-10-observing-the-a11s-heterogenous-cores.html)
* [IME-JTAG-using-USB](https://thenextweb.com/security/2017/11/09/researchers-find-almost-every-computer-intel-skylake-cpu-can-owned-via-usb/?amp=1)

### 2017-11-11
* [x86_64-TCP-bind-explain](https://pentesterslife.blog/2017/11/01/x86_64-tcp-bind-shellcode-with-basic-authentication-on-linux-systems/)
* [Create-MIDI-from-scratch-in-C++](https://www.youtube.com/watch?v=6PFf6klllAE)
* [buffer-overflow-attack](http://www.cnblogs.com/fanzhidongyzby/p/3250405.html)
* [Capsule-Network-explained](https://kndrck.co/posts/capsule_networks_explained/)
* [Albuquerque-ISO-C++-Trip-Report](https://www.reddit.com/r/cpp/comments/7ca2sh/2017_albuquerque_iso_c_committee_reddit_trip/)

### 2017-11-12
* [Linux-sandboxing-improvement-in-FF57](http://www.morbo.org/2017/11/linux-sandboxing-improvements-in.html)
* [C-locale-MPV](https://github.com/mpv-player/mpv/commit/1e70e82baa9193f6f027338b0fab0f5078971fbe)
* [HS-ABQ-Trip-report](https://herbsutter.com/2017/11/11/trip-report-fall-iso-c-standards-meeting-albuquerque/amp/)
* [Careful-with-PyPI](https://glyph.twistedmatrix.com/2017/10/careful-with-that-pypi.html)
* [PowerPC-block-diagram](https://www.powerpc-notebook.org/2017/11/powerpc-notebook-block-diagram-done/)
* 

### 2017-11-13
* [let-polymorphism](https://www.haskell.org/tutorial/pitfalls.html)
* [Unification-ML-in-JS](https://zhuanlan.zhihu.com/p/24181997)
* [Omega-in-Haskell](https://stackoverflow.com/questions/33546004/is-it-possible-to-define-omega-combinator-%CE%BBx-xx-in-modern-haskell)
* [Universal-Existential-type-in-Haskell](https://stackoverflow.com/questions/14299638/existential-vs-universally-quantified-types-in-haskell)
* [Existential-Type-in-Haskell](https://stackoverflow.com/questions/10753073/whats-the-theoretical-basis-for-existential-types/10753957#10753957)
* [Existential-type-haskell](http://iveselov.info/posts/2012-08-30-existential-types.html)

### 2017-11-14
* [FSM-Haskell](https://wickstrom.tech/finite-state-machines/2017/11/10/finite-state-machines-part-1-modeling-with-haskell.html)
* [Executable-Space-protection-and-ASLR](http://www.productive-cpp.com/hardening-cpp-programs-executable-space-protection-address-space-layout-randomization-aslr/)
* [Fearless-concurrency-in-rust](https://blog.rust-lang.org/2017/11/14/Fearless-Concurrency-In-Firefox-Quantum.html)
* [Intel Microcode Extra Undocumented Header](https://github.com/platomav/MCExtractor/wiki/Intel-Microcode-Extra-Undocumented-Header)
* [Haskell-WASM](https://dhc.dfinity.org/)

### 2017-11-15
* [Cost-of-JS](https://medium.com/dev-channel/the-cost-of-javascript-84009f51e99e)
* [Haskell-survey](http://taylor.fausak.me/2017/11/15/2017-state-of-haskell-survey-results/)
* [Optimizing-Pandas-code](https://engineering.upside.com/a-beginners-guide-to-optimizing-pandas-code-for-speed-c09ef2c6a4d6)

### 2017-11-16
* [Intro-to-Nullable-Reference-Types](https://blogs.msdn.microsoft.com/dotnet/2017/11/15/nullable-reference-types-in-csharp/)
* [Digital-Securiry-Motherboard](https://motherboard.vice.com/en_us/article/d3devm/motherboard-guide-to-not-getting-hacked-online-safety-guide)
* [Speed-up-Python-using-Rust](https://developers.redhat.com/blog/2017/11/16/speed-python-using-rust/)

### 2017-11-17
* [Improving-debugging-of-std-function](https://blogs.msdn.microsoft.com/vcblog/2017/11/16/improving-the-debugging-experience-for-stdfunction/)
* [C++-Interview](http://blog.csdn.net/shanghairuoxiao/article/details/72876248)
* [Best-result-of-ML](https://github.com//RedditSota/state-of-the-art-result-for-machine-learning-problems)
* [Graph-theorem](https://zhuanlan.zhihu.com/p/30947936)
* [smart-pointer](https://zhuanlan.zhihu.com/p/30933682)
* [Intro-to-ME](https://zhuanlan.zhihu.com/p/30971549)
* [MIT-6.824-Intro](https://www.zhihu.com/question/29597104/answer/128443409)
* [<=>-for-optional](https://medium.com/@barryrevzin/implementing-the-spaceship-operator-for-optional-4de89fc6d5ec)

### 2017-11-18
* [Fast-exact-interger-division-using-floating-point-operations](https://lemire.me/blog/2017/11/16/fast-exact-integer-divisions-using-floating-point-operations/)
* [Wrong-way-for-benchmarking-integer-comparision](https://blogs.msdn.microsoft.com/oldnewthing/20171117-00/?p=97416)

### 2017-11-19
* [内存断点/硬件断点](https://www.zhihu.com/question/52625624)
* [PE-files](http://www.4hou.com/system/7782.html)
* [Windows-VEH](http://syprog.blogspot.com/2011/10/windows-structured-and-vectored.html)

### 2017-11-20
* [Design-of-Python](https://zhuanlan.zhihu.com/p/26895103)
* [Design-of-Python-2](https://zhuanlan.zhihu.com/p/27678351)
* [Python-ASDL-load-store-del](https://bytes.com/topic/python/answers/845057-what-do-_ast-load-store-del-augload-augstore-param-mean)
* + AugLoad/AugStore are not used in current implementation
* [Debugging-multiprocess-python](http://blog.ptsang.net/debugging_python_multiprocessing)
* [TLB-context-switch](http://www.wowotech.net/process_management/context-switch-tlb.html)
* [Inductive-Coinductive-Haskell](https://stackoverflow.com/questions/39854514/are-lists-inductive-or-coinductive-in-haskell)
* [Linus-Security-are-Bugs](https://www.reddit.com/r/programming/comments/7ebpum/linus_tells_google_security_engineers_what_he/)
* [Microservice-in-golang](http://ewanvalentine.io/microservices-in-golang-part-1/)
* [Improve-math-in-glibc](https://developers.redhat.com/blog/2015/01/02/improving-math-performance-in-glibc/)
* [block-rewriting-clang](https://techtalk.intersec.com/2014/11/blocks-rewriting-with-clang/)
* [implementation-block](http://linlexus.com/implementation_of_block/)
* [Implement-closure-in-C](http://hokstad.com/how-to-implement-closures)

### 2017-11-21
* [Replacing x86 firmware with Linux and Go](https://lwn.net/SubscriberLink/738649/81007748bf15c1e5/)
* [Hask-is-even-not-a-category](https://wiki.haskell.org/Hask#Is_Hask_even_a_category.3F)
* [JIT-for-x86_64-Py](https://csl.name/post/python-compiler/)

### 2017-11-22
* [deprecated-is_literal_type](https://stackoverflow.com/questions/40351816/deprecated-stdis-literal-type-in-c17)
* [constexpr-function-parameter](https://mpark.github.io/programming/2017/05/26/constexpr-function-parameters/)
* [compile-time-string-check](http://zverovich.net/2017/11/05/compile-time-format-strings.html)
* [Building-GHC-the-Stages](https://medium.com/@zw3rk/building-ghc-the-stages-2c6cf6fc4b29)

### 2017-11-23
* [Rust-1.22](https://blog.rust-lang.org/2017/11/22/Rust-1.22.html)
* [understanding-co_await](https://lewissbaker.github.io/2017/11/17/understanding-operator-co-await)
* [using-c++-coroutine-in-boost](https://blogs.msdn.microsoft.com/vcblog/2017/05/19/using-c-coroutines-with-boost-c-libraries/)
* [coroutine-theory](https://lewissbaker.github.io/2017/09/25/coroutine-theory)
* [logical-linear-virtual-physical-address](https://www.zhihu.com/question/29918252)
* [MSVC-breakpoint](https://stackoverflow.com/questions/370195/when-and-why-will-an-os-initialise-memory-to-0xcd-0xdd-etc-on-malloc-free-new)
* [reverse-renpy](https://www.taricorp.net/2014/reverse-engineering-renpy-packages/)
* [隐写术](https://smartjinyu.com/ctf/2016/11/29/introduction_to_stereo.html)
* [Inside memory management](https://www.ibm.com/developerworks/linux/library/l-memory/)
* [理解 ReadDirectoryChangesW](http://blog.csdn.net/wzsy/article/details/6697613)

### 2017-11-24
* [Spheres-and-points](https://ipfs.io/ipfs/QmfN5DojVnEsf1Une3DFwfUiFpfWnQf31f61qgybiXVeQE/blog/spheres-and-points/)
* [glibc-memory](http://blog.csdn.net/maokelong95/article/details/52006379)
* [design-memory-pool](https://www.zhihu.com/question/25527491)
* [understanding-glibc-ptmalloc2](http://blog.csdn.net/maokelong95/article/details/51989081)
* [fprintf-%p](https://stackoverflow.com/questions/24867814/printfp-and-casting-to-void)
* [LRU-implement-on-CPU](https://stackoverflow.com/questions/23448528/how-is-an-lru-cache-implemented-in-a-cpu)
* [KASLR](https://blog.netbsd.org/tnf/entry/the_strongest_kaslr_ever)

### 2017-11-25
* [compare-POD-types](https://stackoverflow.com/questions/47437349/is-it-undefined-behavior-to-read-and-compare-padding-bytes-of-a-pod-type)
* [Python-Top-10-Nov-2017](https://medium.mybridge.co/python-top-10-articles-for-the-past-month-v-nov-2017-f46fcaa36e4b)
* [My-unusual-hobby-Coq](https://www.stephanboyer.com/post/134/my-unusual-hobby)

### 2017-11-26
* [ILP-DLP-TLP](https://software.intel.com/zh-cn/blogs/2011/12/02/400009299)
* [constexpr-in-c++11-not-TM-Complete](https://stackoverflow.com/questions/9201506/is-constexpr-based-computation-turing-complete/9528554#9528554)
* [oi-tools/tuack](https://git.thusaac.org/publish/tuack)
* [std::reduce-in-C++17](https://stackoverflow.com/questions/47144083/why-has-stdreduce-been-added-in-c17/47191827#47191827)
* [Albuquerque-C++-2017-Trip-Report](https://botondballo.wordpress.com/2017/11/20/trip-report-c-standards-meeting-in-albuquerque-november-2017/amp/)
* [boost-coroutine-2-fiber](https://stackoverflow.com/questions/44521178/what-is-the-difference-between-coroutine-coroutine2-and-fiber/44562557#44562557)
* [redis-skiplist-instead-of-rbtree](https://www.zhihu.com/question/20202931)
* [Seemingly impossible functional programs](http://math.andrej.com/2007/09/28/seemingly-impossible-functional-programs/)
* [c++-std::thread-unwound-stack-gcc-fix-in-8](https://gcc.gnu.org/bugzilla/show_bug.cgi?id=55917)
* [inline-variables](https://tech.io/playgrounds/2205/7-features-of-c17-that-will-simplify-your-code/inline-variables)
* [Verify-Haskell-Functor](https://www.zhihu.com/question/65775009)
* [Verify your Typeclass Instances in Haskell Today!](https://blog.jle.im/entry/verified-instances-in-haskell.html)
* [constexpr-compile-faster](http://aras-p.info/blog/2017/10/24/Slow-to-Compile-Table-Initializers/)
* [L123-Cache](https://zhuanlan.zhihu.com/p/31422201)

### 2017-11-27
* [Notes-on-shared_ptr/weak_ptr](https://eklitzke.org/notes-on-std-shared-ptr-and-std-weak-ptr)

### 2017-11-28
* [Personal-finance-for-engineer](https://cs007.blog/)
* [Lib-of-parallel-algorithm-NESL](https://www.cs.cmu.edu/~scandal/nesl/algorithms.html)
* [aria2-repair-chunks](https://orzfly.com/html/repair-file-chunks-with-aria2.html)
* [Windows’s Virtual Address Space: A Short MSDN Story](http://www.tenouk.com/WinVirtualAddressSpace.html)

### 2017-11-29
* [LINQ-ELI5](https://martinfowler.com/articles/collection-pipeline/)

### 2017-11-30
* [why-no-unsigned-float](https://stackoverflow.com/questions/512022/why-doesnt-c-have-unsigned-floats)
* [TSP-approximation](https://zhuanlan.zhihu.com/p/28161351)

### 2017-12-1
* [write-a-simple-linux-kernel-mode](https://blog.sourcerer.io/writing-a-simple-linux-kernel-module-d9dc3762c234)
* [functional-exceptionless-error-handling](https://blog.tartanllama.xyz/optional-expected/)

### 2017-12-2
* [python-chanllenge-solution](https://the-python-challenge-solutions.hackingnote.com)

### 2017-12-3
* [Python-3-readiness](http://py3readiness.org/)

### 2017-12-4
* [Persistent-RBT-in-Haskell](https://functional.works-hub.com/blog/Persistent-Red-Black-Trees-in-Haskell)
* [SIMD-in-Rust](https://hugotunius.se/2017/12/01/exploring-simd-in-rust.html)
* [Use-all-the-databases](https://compose.com/articles/use-all-the-databases-part-1/?cm_mmc=PSocial_Twitter-_-Analytics_Watson%20Data%20Platform-_-WW_WW-_-23218161_Tracking%20Pixel&cm_mmca1=000000XH&cm_mmca2=10000863&cm_mmca4=23218161&cm_mmca5=49375798&cm_mmca6=b56e212b-edae-4c2e-a257-5aad1c08b7d4&cvosrc=social%20network%20paid.twitter.Q42017HandlesBlog5_SD%20Behav_DesktopMobile_1x1&cvo_campaign=000000XH&cvo_pid=23218161)

### 2017-12-5
* [Dependent-type-for-F#](https://jackfoxy.github.io/DependentTypes/)
* [Tarjan-DS](https://www.zhihu.com/question/65155704)
* [HMM-CRF](https://www.zhihu.com/question/35866596)

### 2017-12-6
* [PEP-557-Data-Classes](https://www.python.org/dev/peps/pep-0557/)

### 2017-12-7
* [Attacking-IME](https://twitter.com/rootkovska/status/938458875522666497)
* [Ref-Out-C#](http://dailydotnettips.com/2017/11/17/back-to-basics-what-is-the-difference-between-ref-and-out-keyword-in-c/)
* [Visual-Studio-15.5-MSVC-code-opt](https://blogs.msdn.microsoft.com/vcblog/2017/12/03/msvc-code-optimizer-improvements-in-visual-studio-2017-versions-15-5-and-15-3/)
* [The Most Exciting Linux Kernel Stories Of 2017](https://www.phoronix.com/scan.php?page=news_item&px=Linux-Kernel-2017-Highlights)
* [tail-duplication](http://elegantc.blogspot.com/2016/05/tail-duplication-with-llvm.html)
* [assume-no-aliasing](https://stackoverflow.com/questions/7298546/gcc-c-c-assume-no-pointer-aliasing)

### 2017-12-08
* [auto-deduce-a-reference](https://blog.petrzemek.net/2017/12/08/when-auto-seemingly-deduces-a-reference-in-cpp/)
* [C++17-feature-removal-deprecation](https://blogs.msdn.microsoft.com/vcblog/2017/12/08/c17-feature-removals-and-deprecations/)
* [longest-path-in-a-tree-proof](http://sighingnow.github.io/algorithm/longestpathintree.html)

### 2017-12-09
* [mmap-DMA](http://blog.jobbole.com/91891/)
* [VFIO](https://ggaaooppeenngg.github.io/zh-CN/2017/06/05/VFIO-%E2%80%94%E2%80%94%E5%B0%86-DMA-%E6%98%A0%E5%B0%84%E6%9A%B4%E9%9C%B2%E7%BB%99%E7%94%A8%E6%88%B7%E6%80%81/)
* [levity-polymorphism](https://stackoverflow.com/questions/35318562/what-is-levity-polymorphism)
* [intrusive_ptr](https://www.zhihu.com/question/25271180)
* [MIDI](https://www.zhihu.com/question/19584704)
* [packaged_task-with-bind](https://stackoverflow.com/questions/33135304/c-create-an-stdpackaged-task-of-a-generic-stdbind/33156507#33156507)
* [difference-between-promise-packaged_task-async](http://jakascorner.com/blog/2016/03/promise-difference.html)
* [promise-packaged_task-async](https://stackoverflow.com/questions/17729924/when-to-use-promise-over-async-or-packaged-task/24164631#24164631)
* [Windows10-System-Call-Stub-Changes](https://www.malwaretech.com/2015/07/windows-10-system-call-stub-changes.html)
* [Windows-syscall](https://www.evilsocket.net/2014/02/11/on-windows-syscall-mechanism-and-syscall-numbers-extraction-methods/)
* [RankN-Types](https://ocharles.org.uk/blog/guest-posts/2014-12-18-rank-n-types.html)
* [Normal-to-Uniform-Distribution](https://www.zhihu.com/question/25111423)
* [RankN-polymorphism-and-System-F](https://stackoverflow.com/questions/12031878/what-is-the-purpose-of-rank2types/12033549#12033549)
* [Pushing the Limits of Windows](https://blogs.technet.microsoft.com/markrussinovich/2009/07/05/pushing-the-limits-of-windows-processes-and-threads/)
* [threads-has-distinct-heap?](https://stackoverflow.com/questions/1665419/do-threads-have-a-distinct-heap/1682518#1682518)
* [finally-always-execute-in-Java?](https://stackoverflow.com/questions/65035/does-finally-always-execute-in-java)
* [CrowdSourcing](https://www.zhihu.com/question/68660315/answer/267817552)
* [Happen-before-Synchronized-with](https://zhuanlan.zhihu.com/p/31386431)
* [Theorem-proof-in-Haskell](https://zhuanlan.zhihu.com/p/31567423)
* [How do type classes differ from interfaces?](http://www.parsonsmatt.org/2017/01/07/how_do_type_classes_differ_from_interfaces.html)
* [Desugar-Haskell-code](http://www.haskellforall.com/2014/10/how-to-desugar-haskell-code.html)
* [Windows-kernel-bug](https://zhuanlan.zhihu.com/p/31739344)
* [Partial-evaluation-interpreter-and-compiler](https://www.zhihu.com/question/263559593/answer/270924481)
* [Welcome to a tour of Go in Haskell](https://a-tour-of-go-in-haskell.syocy.net/en_US/index.html)
* [Data Structure for Strings](http://aandds.com/blog/algorithm-datastructure-str.html)
* [Finite Field Arithmetic](http://www.loper-os.org/?p=1913)
* [Dlang-with-C](https://dlang.org/blog/2017/12/05/interfacing-d-with-c-getting-started/)
* [Git-as-a-purely-functional-DS](https://blog.jayway.com/2013/03/03/git-is-a-purely-functional-data-structure/)
* [CSAPP-exception-OS](http://wdxtub.com/2016/04/16/thin-csapp-5/)

### 2017-12-10
* [Find-haskell-bug-by-proving](https://www.joachim-breitner.de/blog/734-Finding_bugs_in_Haskell_code_by_proving_it)
* [C99-features-C++](https://stackoverflow.com/questions/47524553/are-all-of-the-features-of-c99-also-in-c)

### 2017-12-11
* [Strictness-Analysis-Haskell](http://fixpt.de/blog/2017-12-04-strictness-analysis-part-1.html)
* [Monolithic-Micro-Hybrid-Kernel](https://www.zhihu.com/question/20314255)

### 2017-12-12
* [Intro-to-Quantum-Computing](http://davidbkemp.github.io/QuantumComputingArticle/)
* [Internet-protocol-changes](https://blog.apnic.net/2017/12/12/internet-protocols-changing/)
* [石子归并-四边形优化-GarsiaWarch](http://blog.csdn.net/qq_33132383/article/details/75125993)
* [异步同步-阻塞非阻塞](https://www.zhihu.com/question/19732473)
* [Build-secure-PHP-software-2018](https://paragonie.com/blog/2017/12/2018-guide-building-secure-php-software)

### 2017-12-13
* [Avast-retdec](https://blog.avast.com/avast-open-sources-its-machine-code-decompiler)
* [图像-波](http://www.ruanyifeng.com/blog/2017/12/image-and-wave-filters.html)
* [gcc-instruction-pattern](http://kristerw.blogspot.com/2017/12/more-about-gcc-instruction-patterns.html)
* [JPEG-DCT](http://blog.csdn.net/abcjennifer/article/details/8074492)
* [去除马赛克-GAN](https://zhuanlan.zhihu.com/p/27199954)
* [单写多读-加锁](https://www.zhihu.com/question/31325454)
* [ring-buffer-多核一致性](http://0xffffff.org/2017/02/21/40-atomic-variable-mutex-and-memory-barrier/)
* [7-example-of-cache](https://coolshell.cn/articles/10249.html)
* [false-sharing](http://0xffffff.org/2014/08/09/31-smp-false-sharing/)
* [测试时间](http://0xffffff.org/2015/12/06/37-How-to-benchmark-code-execution-times/)
* [Linux-IO](http://0xffffff.org/2017/05/01/41-linux-io/)
* [Linux-memory-manage](http://0xffffff.org/2014/10/31/32-memory-management/)
* [Linux-memory-structure](http://edsionte.com/techblog/archives/3652)
* [Linux-memory](http://edsionte.com/techblog/archives/3937)
* [Linux-Thread](http://0xffffff.org/2013/07/30/19-linux-thread-history/)

### 2017-12-14
* [lock_guard-vs-unique_lock](https://stackoverflow.com/questions/20516773/stdunique-lockstdmutex-or-stdlock-guardstdmutex)
* [Shamir's-Secret-Sharing](https://en.wikipedia.org/wiki/Shamir%27s_Secret_Sharing)

### 2017-12-15
* [MGSV-Graphics](http://www.adriancourreges.com/blog/2017/12/15/mgs-v-graphics-study/)
* [Top-10-article-ML-Dec-17](https://medium.mybridge.co/machine-learning-top-10-articles-for-the-past-month-v-dec-2017-82883b8062f5)
* [BackPropagation](http://www.cnblogs.com/charlotte77/p/5629865.html)

### 2017-12-16
* [clang-in-docker-for-c++17](https://solarianprogrammer.com/2017/12/14/clang-in-docker-container-cpp-17-development/)

### 2017-12-17
* [最大矩阵和/最大全1子矩阵](http://www.voidcn.com/article/p-waiiowua-vy.html)
* [Timeline-of-Programming-Languages](https://en.wikipedia.org/wiki/Timeline_of_programming_languages)
* [Rust-for-Rubyist](https://matthias-endler.de/2017/rust-for-rubyists/)
* [optional<bool>-specialization](https://medium.com/@barryrevzin/optional-bool-reference-or-constexpr-7cb410e8e4c4)
* [Windows启动过程](http://www.cnblogs.com/daizhj/articles/1934456.html)

### 2017-12-18
* [What-ORM-tells-me](http://woz.posthaven.com/what-orms-have-taught-me-just-learn-sql)
* [How-to-write-your-own-cpp-game-engine](http://preshing.com/20171218/how-to-write-your-own-cpp-game-engine/)
* [Py-Ruby-Profiler](https://jvns.ca/blog/2017/12/17/how-do-ruby---python-profilers-work-/)

### 2017-12-19
* [C++17-progress-in-VS15.5-VS15.6](https://blogs.msdn.microsoft.com/vcblog/2017/12/19/c17-progress-in-vs-2017-15-5-and-15-6/)

### 2017-12-20
* [violation-of-TCP](https://blog.cloudflare.com/this-is-strictly-a-violation-of-the-tcp-specification/)
* [D's-newfangled-name-mangling](https://dlang.org/blog/2017/12/20/ds-newfangled-name-mangling/)

### 2017-12-21
* [Rust-in-2017](https://blog.rust-lang.org/2017/12/21/rust-in-2017.html)

### 2017-12-22
* [ncat-cheetsheet](https://bitrot.sh/cheatsheet/19-12-2017-ncat/)

### 2017-12-23
* [reflection-in-Haskell](http://www.tweag.io/posts/2017-12-21-reflection-tutorial.html)
* [Linux-memory-lowmem-highmem](https://www.zhihu.com/question/52711172)
* [AVX-SSE-Transition-penalty](https://www.zhihu.com/question/37230675/answer/273654228)
* [Structured-binding-linkage](https://www.zhihu.com/question/263970502)
* [Program-Synthesis-Primer](http://barghouthi.github.io/articles/17/synthesis-primer)
* [Handbook-of-Philosophical-Logic](https://zhuanlan.zhihu.com/p/31965690)
* [二阶算术-big-five](https://www.zhihu.com/question/46778937)
* [std::move-object-member](http://oliora.github.io/2016/02/12/where-to-put-std-move.html)
* [__imp-and-_imp_](https://stackoverflow.com/questions/11236789/what-is-the-difference-between-imp-and-imp/11244199#11244199)
* [DLL-mmap-page-fault](https://stackoverflow.com/questions/5684365/what-causes-page-faults/5684422#5684422)
* [sqrt-inside-sqrt](https://www.zhihu.com/question/264207041/answer/278053059)
* [最小的HelloWorld-Win32](https://www.zhihu.com/question/21715980)
* [Everything-you-never-want-to-know-about-DLL](http://blog.omega-prime.co.uk/2011/07/04/everything-you-never-wanted-to-know-about-dlls/)
* [Hook-in-Linux](http://blog.csdn.net/tianxuhong/article/details/50974400)
* [构造主义-直觉主义-计算机](https://zhuanlan.zhihu.com/p/22389755)
* [memcached-lock-strategy](https://zhuanlan.zhihu.com/p/32273530)
* [Eigen-坑](https://zhuanlan.zhihu.com/p/32226967)

### 2017-12-24
* [Vue.js-vs-React](http://pixeljets.com/blog/vue-js-vs-react-what-to-expect-in-2018/)
* [Which-Python-operation-are-atomic](http://blog.qqrs.us/blog/2016/05/01/which-python-operations-are-atomic/)
* [Formal-verification-the-gap-between-perfect-code-and-reality](https://raywang.tech/2017/12/20/Formal-Verification:-The-Gap-between-Perfect-Code-and-Reality/)

### 2017-12-25
* [AI-Failures-in-2017](https://syncedreview.com/2017/12/23/2017-in-review-10-ai-failures/)
* [undefined-unsafe-in-Rust](https://manishearth.github.io/blog/2017/12/24/undefined-vs-unsafe-in-rust/)
* [Computer-latency-1977-2017](https://danluu.com/input-lag/)

### 2017-12-26
* [libc_start](https://stackoverflow.com/questions/16970281/whats-going-on-in-libc-start-main)
* + [libc_start_main](https://github.com/bminor/glibc/blob/2a69f853c03034c2e383e0f9c35b5402ce8b5473/csu/libc-start.c)
* [FreeBSD-install-modification](https://vez.mrsk.me/freebsd-defaults.txt)
* [Execution-space-protection-and-ASLR](http://www.productive-cpp.com/hardening-cpp-programs-executable-space-protection-address-space-layout-randomization-aslr/)
* [Clang-extra-4-byte-in-main](http://nikhilism.com/post/2017/why-does-stack-extra-bytes-digging-clangs-return/)
* [Moorefs-恢复](http://blog.ztrix.me/blog/2012/05/13/restore-mfs-metadata/)
* [gdb-peda-god-mode](http://blog.ztrix.me/blog/2014/05/10/asis-quals-2014-serial-number-writeup/)

### 2017-12-27
* [RELRO/CANARY/NX/PIE/ASLR/FORTIFY_SOURCE](http://blog.siphos.be/2011/07/high-level-explanation-on-some-binary-executable-security/)
* [Sysenter Based System Call Mechanism in Linux 2.6](http://articles.manugarg.com/systemcallinlinux2_6.html)
* [GAS-asm](https://stackoverflow.com/questions/41690592/what-does-gs0x10-do-in-assembler)
* [Z3-in-CTF](https://zhuanlan.zhihu.com/p/30548907)

### 2017-12-28
* [Reactive-programming-system](https://www.oreilly.com/ideas/reactive-programming-vs-reactive-systems)
* [ML-papers-2017](http://cachestocaches.com/2017/12/favorite-deep-learning-2017/)
* [RC4-password](https://groups.google.com/forum/#!msg/sci.crypt/TPS_Ix7aTJ4/oPwa0skAoxAJ)
* [Dump-PS4-kernel-in-6-days](https://fail0verflow.com/blog/2017/ps4-crashdump-dump/)
* [TLS-1.3-not-in-browsers-yet](https://blog.cloudflare.com/why-tls-1-3-isnt-in-browsers-yet/)
* [导入表-IAT表](https://richarde.me/2017/05/05/16-learn-pe-with-IAT-import-table/)
* [Linux-filesystem](http://www.tigerup.cn/linux_basic/0230filesystem.php)

### 2017-12-29
* [FS:[0]-FS:0](http://www.voidcn.com/article/p-hoknegxo-kb.html)
* [Themida-中断-重定位](https://bbs.pediy.com/thread-140298.htm)

### 2017-12-30
* [Escaping-Docker](https://www.twistlock.com/2017/12/27/escaping-docker-container-using-waitid-cve-2017-5123/)
* [高效删除文件前100字节](https://www.zhihu.com/question/264803491)
* [Best-CS-Paper-HN-2017](https://news.ycombinator.com/item?id=16035402)

### 2017-12-31
* [Difference-between-exec-versions](https://stackoverflow.com/questions/5769734/what-are-the-different-versions-of-exec-used-for-in-c-and-c)
* [GNU-yes-so-fast](https://www.reddit.com/r/unix/comments/6gxduc/how_is_gnu_yes_so_fast/)
* [Rust-yes-implementation](https://matthias-endler.de/2017/yes/)
* [future-statement](https://stackoverflow.com/questions/21125228/where-is-the-from-future-import-braces-code)
* [Polya-Burnside-计数](http://blog.csdn.net/nameofcsdn/article/details/53321264)

### 2018-1-1
* [Deriving-Bifunctor-with-Generics](http://kcsongor.github.io/generic-deriving-bifunctor/)
* [Three-yrs-on-Google-App-Engine](https://blog.stephanbehnke.com/3-years-on-google-app-engine-an-epic-review/)
* [n-ary-Functor](http://gelisam.blogspot.ca/2017/12/n-ary-functors.html)

### 2018-1-2
* [Linux-Page-Table-Isolation](http://pythonsweetness.tumblr.com/post/169166980422/the-mysterious-case-of-the-linux-page-table/amp?)
* [RowHammer攻击](https://www.inforsec.org/wp/?p=1316)
* [风水翻转攻击](http://www.freebuf.com/column/133871.html)
* [KPTI](https://en.wikipedia.org/wiki/Kernel_page-table_isolation)
* [Drammer](https://zhuanlan.zhihu.com/p/23218472)
* [Current-state-of-page-table-isolation](https://hk.saowen.com/a/cd4e7f9df473b34ba9ac533820296a4bf36c13602cdc05a23b46f9e6afefc32d)
* [GHC-implementation-of-(>>)](https://stackoverflow.com/questions/48047395/ghcs-implementation-of)
* [rdtscp](http://stackoverflow.org.cn/front/ask/view?ask_id=61657)
* [Python-gc-without-COW](https://engineering.instagram.com/copy-on-write-friendly-python-garbage-collection-ad6ed5233ddf)
* [Python-内存模型](https://github.com/BingLau7/blog/issues/18)
* [fastbin-pwn](http://0x48.pw/2017/07/25/0x35/)
* [vsyscall-vDSO](https://stackoverflow.com/questions/19938324/what-are-vdso-and-vsyscall)
* [arena-bin-chunk-fastbin](http://sqlike.com/glibc-malloc-struct/)
* [Regex-China-手机号](https://gist.github.com/septs/8cb9f6298fa59caef39229fb04c36609)

### 2018-1-3
* [AMD-Cpu-not-affected-by-PTI](https://lkml.org/lkml/2017/12/27/2)
* [Linux-Kernel-Happy-New-Year](http://lkml.iu.edu/hypermail/linux/kernel/1712.3/02898.html)
* [不强制退出Thread](http://orzz.org/why-shouldnt-i-kill-a-thread/#more-1082)
* [Reading-Kernel-Memory-from-usermode](https://cyber.wtf/2017/07/28/negative-result-reading-kernel-memory-from-user-mode/)
* [Linux-调度器-CFS](https://www.ibm.com/developerworks/cn/linux/l-cn-scheduler/index.html)
* [Linux-2.6-CFS](https://www.ibm.com/developerworks/cn/linux/l-cfs/index.html)
* [Linux-2.6](https://www.ibm.com/developerworks/cn/linux/l-cfs/index.html)
* [(k, n)-钥匙开锁问题](http://bbs.csdn.net/topics/10260097)

### 2018-1-4
* [meltdown-spectre](https://meltdownattack.com/)
* [Google-Today's-CPU-vulnerability](https://security.googleblog.com/2018/01/todays-cpu-vulnerability-what-you-need.html)
* [Linux-eBPF](http://www.brendangregg.com/ebpf.html)
* [Reading privileged memory with a side-channel](https://googleprojectzero.blogspot.com/2018/01/reading-privileged-memory-with-side.html)
* [Linus-on-Intel-CPU-problem](https://lkml.org/lkml/2018/1/3/797)
* [PCID-TLB](http://ytliu.info/blog/2016/09/16/tlbde-na-xie-shi-er/)
* [dirtyCOW-分析](http://huntcve.github.io/2016/10/24/dirtycow-analyze/)
* [dirtyCOW-分析-2](http://huntcve.github.io/2017/07/04/dirtycow/)
* [Python-3.7-ordered-dict-guaranteed](https://www.reddit.com/r/Python/comments/7kcwoi/starting_in_37_dicts_will_be_guaranteed_to_retain/)
* [More-detail-of-CPU-Speculative-Execution-issue-retpoline](https://security.googleblog.com/2018/01/more-details-about-mitigations-for-cpu_4.html)
* [retpoline](https://support.google.com/faqs/answer/7625886)


### 2018-1-5
* [how-gdb-call-function](https://jvns.ca/blog/2018/01/04/how-does-gdb-call-functions/)
* [retpoline-CN](https://zhuanlan.zhihu.com/p/32655503)
* [inndy-WEB-PoC](http://www.freebuf.com/articles/web/158885.html)
* [Windows-HEAP](http://www.freebuf.com/articles/system/156174.html)

### 2018-1-6
* [WebGL2](https://webgl2fundamentals.org/)
* [WIWIK-Bash](https://zwischenzugs.com/2018/01/06/ten-things-i-wish-id-known-about-bash/)

### 2018-1-7
* [NN-type-and-FP](http://colah.github.io/posts/2015-09-NN-Types-FP/)
* [Monads are just monoids in the category of endofunctors](https://blog.merovius.de/2018/01/08/monads-are-just-monoids.html)

### 2018-1-8
* [Python-Web-Interface-PEP-333](https://www.python.org/dev/peps/pep-0333/)
* [ASGI](http://channels.readthedocs.io/en/latest/asgi.html)
* [Sanic-problem](https://zhuanlan.zhihu.com/p/32518153)

### 2018-1-9
* [A-cpu-design-bug-for-Xbox-360](https://randomascii.wordpress.com/2018/01/07/finding-a-cpu-design-bug-in-the-xbox-360/)
* [Rebooting-Error-Handling-Rust](https://www.ocelotconsulting.com/2018/01/08/rust-error-handling.html)
* [C++-for-embedded-system](https://electronics.stackexchange.com/questions/3027/is-c-suitable-for-embedded-systems)
* [h264-x264](https://www.quora.com/In-Video-Codecs-what%E2%80%99s-the-difference-between-h264-and-x264)
* [Linux-sync](https://www.ibm.com/developerworks/cn/linux/l-linux-synchronization.html)
* [spinlock-vs-mutex](https://stackoverflow.com/questions/5869825/when-should-one-use-a-spinlock-instead-of-mutex)
* [Linux-spinlock-internal](http://www.linuxinternals.org/blog/2014/05/07/spinlock-implementation-in-linux-kernel/)
* [C++-mutex-shared_mutex](https://stackoverflow.com/questions/46452973/difference-between-stdmutex-and-stdshared-mutex)
* [futex-syscall](https://stackoverflow.com/questions/24488564/how-futex-works-in-this-case)
* [Thin-lock-vs-futex](https://bartoszmilewski.com/2008/09/01/thin-lock-vs-futex/)
* [Python-lambda-tuple-removed-in-3](https://stackoverflow.com/questions/11328312/python-lambda-does-not-accept-tuple-argument)

### 2018-1-10
* [js-信用卡](https://medium.com/@CQD/%E7%BF%BB%E8%AD%AF-%E6%88%91%E6%98%AF%E9%80%99%E6%A8%A3%E6%8B%BF%E8%B5%B0%E5%A4%A7%E5%AE%B6%E7%B6%B2%E7%AB%99%E4%B8%8A%E7%9A%84%E4%BF%A1%E7%94%A8%E5%8D%A1%E8%99%9F%E8%B7%9F%E5%AF%86%E7%A2%BC%E7%9A%84-991cb6c4631e)
* [length-extension-attack](https://zh.wikipedia.org/wiki/%E9%95%BF%E5%BA%A6%E6%89%A9%E5%B1%95%E6%94%BB%E5%87%BB)
* [HMAC](http://www.freebuf.com/articles/web/31756.html)

### 2018-1-11
* [DROWN-Bleichenbacher](https://www.zhihu.com/question/40934602)
* [read-acquire-write-release-in-mutex](https://www.zhihu.com/question/26588157)
* [K-means](http://www.cnblogs.com/jerrylead/archive/2011/04/06/2006910.html)
* [Service-Mesh-Lstio](http://baytucao.com/archives/3876)
* [PE-Reloc](https://bbs.pediy.com/thread-140722.htm)
* [计算机科学 (Haskell) 中的偏序理论](http://ice1000.org/2018/01/02/PartialOrderTranslation/)
* [ROP-入门-1](https://zhuanlan.zhihu.com/p/25816426)
* [ROP-入门-2](https://zhuanlan.zhihu.com/p/25892385)
* [Z3-CTF](https://zhuanlan.zhihu.com/p/30548907)
* [python-HTTP-bug](https://zhuanlan.zhihu.com/p/32592960)
* [-fno-builtin-ffreestanding-nostdlib-m32-c-program](https://www.zhihu.com/question/49580321/answer/287557834)
* [TLB-pCID](https://zhuanlan.zhihu.com/p/32718446)
* [New things in Haskell package QA](http://oleg.fi/gists/posts/2018-01-08-haskell-package-qa.html)
* [Verified-parsing-in-real-world](http://www.sleconf.org/2014/parsing-slides/1-slides.standalone.html#(1))
* [volatile-in-C++11](https://stackoverflow.com/questions/12878344/volatile-in-c11)
* [Spectre-Metldown-Explan](https://zhuanlan.zhihu.com/p/32784852)
* [Spectre still unfixed, unlike what Intel says](https://gist.github.com/woachk/2f86755260f2fee1baf71c90cd6533e9)
* [.eh_frame/.eh_frame_hdr](https://stackoverflow.com/questions/14091231/what-do-the-eh-frame-and-eh-frame-hdr-sections-store-exactly/14091884#14091884)
* [DCLP-in-C++](http://blog.jobbole.com/86392/)
* [Load-time-relocation](https://eli.thegreenplace.net/2011/08/25/load-time-relocation-of-shared-libraries/)
* [PIC-on-x86](https://eli.thegreenplace.net/2011/11/03/position-independent-code-pic-in-shared-libraries/)
* [PIC-on-x64](https://eli.thegreenplace.net/2011/11/11/position-independent-code-pic-in-shared-libraries-on-x64/)
* [gcc-x64-forced-PIC](https://stackoverflow.com/questions/7865059/why-does-gcc-force-pic-for-x64-shared-libs)
* [理想-Ideal-left-right](https://zh.wikipedia.org/wiki/%E7%90%86%E6%83%B3_(%E7%8E%AF%E8%AE%BA))

### 2018-1-12
* [LLVM-Translation-Validator](https://blog.regehr.org/archives/1565)
* [KotlinConf-Review-2017](https://www.vokal.io/blog/vokal-takeaways-from-kotlinconf-2017)
* [Rust2018](https://hsivonen.fi/rust2018/)
* [common-RAID](http://www.178linux.com/12946)
* [RAID-explain](https://www.zhihu.com/question/20131784)
* [RAID-explain-by-graph](http://blog.51cto.com/dingyichao/698762)
* [RAID-2-3-4-lessly-used](http://blog.open-e.com/raid-2-raid-3-raid-4-what-it-is-how-it-works-the-history-lesson/)
* [硬盘调度算法](http://blog.sina.com.cn/s/blog_53d195d3010007iz.html)
* [File-system-summary](http://blog.sciencenet.cn/blog-76290-441106.html)
* [允许交换1次的-max-subarray](http://www.aizhuanji.com/a/MVdmMrXW.html)

### 2018-1-13
* [2-3-tree-is-rbt](https://riteme.github.io/blog/2016-3-12/2-3-tree-and-red-black-tree.html#fn:b-tree-wiki)
* [双重计数](https://riteme.github.io/blog/2017-6-19/double-count.html)
* [B-tree](https://www.zhihu.com/question/19836260)
* [B-vs-B+](http://blog.csdn.net/login_sonata/article/details/75268075)
* [笛卡尔树](https://www.zybuluo.com/KirinBill/note/871204#%E6%9E%84%E9%80%A0treap)
* [c-restrict-keyword](https://stackoverflow.com/questions/41105620/is-the-c-restrict-qualifier-transitive)
* [c-restrict-keyword-2](https://stackoverflow.com/questions/10941965/c99-restrict-and-compiler-optimization)
* [异步IO](https://www.zhihu.com/question/19585576)
* [分布式应用中基于事件驱动的应用开发模型](https://www.ibm.com/developerworks/cn/linux/distributed/edpm/)
* [异步事件驱动](http://blog.csdn.net/lx_shudong/article/details/71272557)
* [2-lock-queue](https://stackoverflow.com/questions/37369031/two-lock-concurrent-queue-algorithm-issue)
* [Event-driven-high-concurrency](https://www.zhihu.com/question/64727674)
* [md5-collision](http://www.freebuf.com/articles/93780.html)

### 2018-1-14
* [maze-generation-algorithm](http://blog.csdn.net/juzihongle1/article/details/73135920)
* [STM-软件事务内存](http://sighingnow.github.io/%E5%B9%B6%E5%8F%91%E6%A8%A1%E5%9E%8B/stm.html)
* [C++-TM](http://sighingnow.github.io/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/template_turing_completeness.html)
* [Continuation-Call/cc](http://sighingnow.github.io/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/continuation_and_call_cc.html)
* [Yin-Yang-puzzle](http://sighingnow.github.io/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/the_yin_yang_pullze.html)

### 2018-1-15
* [x86-64-JIT-Compiler-2](https://solarianprogrammer.com/2018/01/12/writing-minimal-x86-64-jit-compiler-cpp-part-2/)
* [ucontext-介绍](http://blog.csdn.net/qq910894904/article/details/41911175)
* [shared_time_mutex-vs-shared_mutex](https://stackoverflow.com/questions/40207171/why-shared-timed-mutex-is-defined-in-c14-but-shared-mutex-in-c17)
* [We make a std::shared_mutex 10 times faster](https://www.codeproject.com/Articles/1183423/We-make-a-std-shared-mutex-times-faster)
* [Linux-Memory](https://www.ibm.com/developerworks/cn/linux/l-memmod/)

### 2018-1-16
* [Linux-静态动态库-RTLD_NEXT](http://kaiyuan.me/2017/05/03/function_wrapper/)
* [Spectre mitigations in MSVC](https://blogs.msdn.microsoft.com/vcblog/2018/01/15/spectre-mitigations-in-msvc/)

### 2018-1-17
* [spurious-wakeup-and-wait-morphing](http://siwind.iteye.com/blog/1469216)
* [signal-w/o-mutex](http://www.domaigne.com/blog/computing/condvars-signal-with-mutex-locked-or-not/)
* [shared_future-vs-future](http://en.cppreference.com/w/cpp/thread/shared_future)
* [what-is-provider-promise](https://stackoverflow.com/questions/11004273/what-is-stdpromise)
* [I-don't-understand-asyncio](http://lucumr.pocoo.org/2016/10/30/i-dont-understand-asyncio/)
* [golang-select-channel-goroutine](http://blog.csdn.net/nuli888/article/details/63331156)
* [Python-asyncio](https://www.jianshu.com/p/b5e347b3a17c)
* [asyncio-vs-gevent](https://www.reddit.com/r/Python/comments/7a3ikv/should_i_stick_with_asyncio_or_return_to_gevent/)
* [Python-gevent](https://softlns.github.io/2015/11/28/python-gevent/)

### 2018-1-18
* [TLS-&-TLS-Debug](http://blog.csdn.net/lixiangminghate/article/details/46770635)
* [pthread-create-procedure](http://blog.csdn.net/yetyongjin/article/details/7673837)
* [TLS-GS-clone](http://www.maxwellxxx.com/TLS)
* [RIP-related-static-variable](https://stackoverflow.com/questions/40329260/why-is-the-address-of-static-variables-relative-to-the-instruction-pointer)
* [system_clock-vs-steady_clock](https://stackoverflow.com/questions/13263277/difference-between-stdsystem-clock-and-stdsteady-clock)
* [when-to-use-atomic_compare_exchange_weak](https://stackoverflow.com/questions/25199838/understanding-stdatomiccompare-exchange-weak-in-c11)
* [atomic_compare_exchange_weak_bug](https://stackoverflow.com/questions/21879331/is-stdatomic-compare-exchange-weak-thread-unsafe-by-design)

### 2018-1-19
* [Burnside-Polya-POJ](http://www.voidcn.com/article/p-szwhrqqm-bey.html)
* [Burnside-Polya-SPOJ](http://prime21.logdown.com/posts/278690-polya-counting)
* [pthread_broadcast_wait_morphing](https://stackoverflow.com/questions/20982270/sync-is-unreliable-using-stdatomic-and-stdcondition-variable)
* [lockfree-hazard-pointer](http://blog.csdn.net/coryxie/article/details/8561435)
* [FS-GS-register](http://blog.csdn.net/coryxie/article/details/8551057)
* [lockfree-programming](http://blog.csdn.net/coryxie/article/details/8561550)
* [ABA-problem](https://www.zhihu.com/question/23281499)
* [Hazard-lockfree-stack](https://zhuanlan.zhihu.com/p/22557362)
* [lockfree-utility](https://www.zhihu.com/question/52629893)
* [Meltdown and Spectre Linux Kernel Status - Update](http://kroah.com/log/blog/2018/01/19/meltdown-status-2/)
* [Haskell-naming-run-get](https://stackoverflow.com/questions/48017808/what-is-the-meaning-for-the-convention-runsomething-in-the-haskell-community)
* [Inference-in-TypeScripts](https://medium.com/@javierwchavarri/inference-engines-5-examples-with-typescript-flow-and-reason-edef2f4cf2d3)

### 2018-1-20
* [Kinds-of-crypts](https://rakhesh.com/infrastructure/notes-on-cryptography-ciphers-rsa-dsa-aes-rc4-ecc-ecdsa-sha-and-so-on/)
* [AES-mode](https://stackoverflow.com/questions/1220751/how-to-choose-an-aes-encryption-mode-cbc-ecb-ctr-ocb-cfb)
* [open-source-processors](https://lwn.net/Articles/743602/)
* [key-IV-nonce](https://crypto.stackexchange.com/questions/3965/what-is-the-main-difference-between-a-key-an-iv-and-a-nonce)
* [stream-block-cipher](https://crypto.stackexchange.com/questions/5333/difference-between-stream-cipher-and-block-cipher)
* [Why-CreateFile-return-non-consistent](https://blogs.msdn.microsoft.com/oldnewthing/20040302-00/?p=40443)
* [Usage-of-lfence](https://www.zhihu.com/question/29465982)
* [Preshing-multithread](http://chonghw.github.io/categories/High-performance/)
* [CriticalSection-cannot-across-processes](https://blogs.msdn.microsoft.com/larryosterman/2005/08/24/why-dont-critical-sections-work-cross-process/)
* [Peterson-lock-reorder](https://bartoszmilewski.com/2008/11/05/who-ordered-memory-fences-on-an-x86/)
* [DCLP-reorder](https://www.zhihu.com/question/35268028)

### 2018-1-21
* [Professional-Haskell-topics](https://www.reddit.com/r/haskell/comments/7rwuxb/professional_haskellers_what_are_your_major_pain/)
* [Handmade-Executable-File](https://www.bigmessowires.com/2015/10/08/a-handmade-executable-file/)

### 2018-1-22
* [CPL-RPL-DPL](https://manybutfinite.com/post/cpu-rings-privilege-and-protection/)
* [CPL-RPL-DPL-2](http://www.cppblog.com/xingkongyun/articles/63495.html)
* [ARM-overview](https://zhuanlan.zhihu.com/p/21571986)

### 2018-1-23
* [Fast-B+Tree](https://github.com/begeekmyfriend/bplustree)
* [PRG-pattern](https://en.ryte.com/wiki/Post-Redirect-Get)
* [PRG-cn](http://skyf.org:81/wp/?p=825)

### 2018-1-24
* [Solve-90%-NLP-Problem](https://blog.insightdatascience.com/how-to-solve-90-of-nlp-problems-a-step-by-step-guide-fda605278e4e)
* [Difference-between-binary-Semaphore-and-mutex](https://stackoverflow.com/questions/62814/difference-between-binary-semaphore-and-mutex)

### 2018-1-25
* [gRPC-practice](https://grpc.io/2018/01/22/grpc-go-engineering-practices.html)

### 2018-1-26
* [Kotlin-and-Linear-programming](https://tomstechnicalblog.blogspot.com/2018/01/kotlinforoperationalplanningandoptimiza.html)
* [Deepcopy-in-JS](https://dassur.ma/things/deep-copy/)
* [Interactive-GPU-programming](http://dragan.rocks/articles/18/Interactive-GPU-Programming-1-Hello-CUDA)

### 2018-1-26
* [C-context](https://zhuanlan.zhihu.com/p/32431200)
* [frame-sync/state-sync](https://zhuanlan.zhihu.com/p/32843758)
* [2PC-OMid-Percolator](https://zhuanlan.zhihu.com/p/32858033)
* [Regular-Expression-Optimization](https://zhuanlan.zhihu.com/p/32896848)
* [pointer-64bit-save-space](https://www.zhihu.com/question/265348258/answer/294995655)
* [STL-weak-order](https://stackoverflow.com/questions/1293231/stl-ordering-strict-weak-ordering/16694905#16694905)
* [C++-NaN-for-map](https://stackoverflow.com/questions/8096817/is-nan-a-valid-key-value-for-associative-containers/8097097#8097097)
* [Strict-weak-order](http://www.cnblogs.com/walkerlala/p/5561339.html)
* [Apache-2.0](https://www.whitesourcesoftware.com/whitesource-blog/top-10-apache-license-questions-answered/)
* A known bug in the Visual C++ preprocessor: it does not expand macros prior to rescanning.
* [WaitOnAddress-vs-futex](https://blogs.msdn.microsoft.com/oldnewthing/20170601-00/?p=96265)
* [volatile-avoid-SL-reorder](http://blog.csdn.net/xtlisk/article/details/39098981)
* [volatile-observer-action-cannot-reorder](https://stackoverflow.com/questions/14785639/may-accesses-to-volatiles-be-reordered/14787771#14787771)
* [volatile-not-intended-behavior](https://sites.google.com/site/kjellhedstrom2/stay-away-from-volatile-in-threaded-code)
* [AES-CBC/CTR](http://www.metsky.com/archives/585.html)
* [AES-Algorithm](https://www.cnblogs.com/luop/p/4334160.html)
* [SATA-m2-PCIE-NVME](https://www.zhihu.com/question/48972075/answer/253574912)
* [BSGS-algorithm](http://www.cnblogs.com/yuiffy/p/3877381.html)
* [Unity-Foreach](https://zhuanlan.zhihu.com/p/22708768)
* [AGM-LibGC-for-Cpp](https://www.codeproject.com/Articles/7840/AGM-LibGC-a-C-garbage-collection-library)
* [AGM-Reflection](https://www.codeproject.com/Articles/12358/C-object-properties-with-no-run-time-or-memory-ove)
* [Distributed-Store-Interview](https://zhuanlan.zhihu.com/p/23284834)
* [Polya-on-异构体](https://zhuanlan.zhihu.com/p/28032458)

### 2018-1-27
* [Unary-expression-associativity](https://stackoverflow.com/questions/12961351/does-it-make-sense-for-unary-operators-to-be-associative)
* + So every multiplicative-expression is an additive-expression, but not vice-versa, and this is what makes multiplication "bind tighter" than addition.
* [Precedence-Climbing](http://www.shinexu.com/Compilation/operator-precedence-parser/)
* + Shunting Yard
* [Intel-TSX-Report](http://www.dbbook.org/tsx-evaluation/)
* [Intel-TSX-bug](https://www.zhihu.com/question/24838390/answer/32977248)
* [Intel-TSX-NI](https://stackoverflow.com/questions/42507787/is-intel-transactional-synchronization-extensions-new-instruction-tsx-ni-diff)

### 2018-1-28
* [V8-memory-quiz](http://www.mattzeunert.com/2018/01/25/v8-javascript-memory-quiz.html)
* [Python-3.7-Dataclass](https://hackernoon.com/a-brief-tour-of-python-3-7-data-classes-22ee5e046517)

### 2018-1-29
* [Haskell-XCheck](https://www.reddit.com/r/haskell/comments/7tq1hl/what_to_favour_for_property_checking_quickcheck/)
* [LAPACK-Cpp-Metaprogramming](http://wordsandbuttons.online/outperforming_lapack_with_c_metaprogramming.html)
* [LAPACK-Cpp-Metaprogramming-2](http://wordsandbuttons.online/vastly_outperforming_lapack_with_cpp_metaprogramming.html)
* [Microsoft-Disable-Intel-First-Spectre-Fix](http://www.securityweek.com/microsoft-disables-spectre-mitigations-due-instability)
* [获得Kernel32-Ntdll基地址](http://blog.csdn.net/programmingring/article/details/11357393)
* [DLL-address-to-name](https://stackoverflow.com/questions/25730526/how-to-find-out-the-function-name-from-a-call-to-the-import-address-table)
* [Dynamic-Base-ASLR](https://stackoverflow.com/questions/8554014/how-to-know-whether-a-dll-uses-aslr-or-not)
* [ASLR-between-Windows-Linux](http://www.freebuf.com/articles/system/29392.html)

### 2018-1-30
* [Haskell-Strategy-Pattern](http://storm-country.com/blog/gof-strategy)
* [Lazy-OCaml](http://www.zenlife.tk/zinc.md)
* [Matrix-Calculus-in-ML](http://parrt.cs.usfca.edu/doc/matrix-calculus/index.html)

### 2018-1-31
* [Same-Origin-Policy](http://www.ruanyifeng.com/blog/2016/04/same-origin-policy.html)
* [Old-New-Things](https://github.com/mity/mctrl/wiki/Old-New-Win32API)
* [Cv-with-Futex](https://www.remlab.net/op/futex-condvar.shtml)
* [New-Thread-Model-for-gcc-win32](http://gcc.gcc.gnu.narkive.com/Yh0NjEyy/adding-a-new-thread-model-to-gcc)

### 2018-2-1
* [Inject-learn](https://cxa.codebashing.com/courses/php)
* [Learn-Web-Security](https://www.zhihu.com/question/21606800)

### 2018-2-2
* [x86-TSO: A Programmer’s Model for x86](http://paulcavallaro.com/blog/x86-tso-a-programmers-model-for-x86-multiprocessors/)
* [Solving-Minesweeper](http://magnushoff.com/minesweeper/)

### 2018-2-3
* [iostream-lock](http://stdcxx.apache.org/doc/stdlibug/44-2.html)
* [break-on-stdout](https://stackoverflow.com/questions/23757996/gdb-how-to-break-on-something-is-written-to-cout)
* [CTF-SQL-Injection](http://www.freebuf.com/articles/web/137094.html)

### 2018-2-4
* [How-to-use-free-theorem](https://www.reddit.com/r/haskell/comments/2r0dn3/how_to_use_free_theorems/)
* [XSS-intro](https://zhuanlan.zhihu.com/p/26177815)
* [XSS-collection](http://www.91ri.org/4179.html)
* [XSS-collection-2](http://blog.csdn.net/u014345860/article/details/77352889)

### 2018-2-5
* [Delimited-Continuation-in-JS](https://blog.mattbierner.com/the-delimited-continuation-monad-in-javascript/)
* [Wizard-Monoid-Monoid-IO](http://www.haskellforall.com/2018/02/the-wizard-monoid.html)
* [Boost.Outcome-report](https://www.reddit.com/r/cpp/comments/7vdpyu/outcome_accepted_into_the_boost_c_libraries/)
* [Realtime-software-with-Micropython](https://jsolano.net/2018/01/28/real-time-software-with-micropython/)
* [Programming-Languages](http://lambda-the-ultimate.org/node/4186)

### 2018-2-6
* [What-Optimization-can-GHC-does](https://stackoverflow.com/questions/12653787/what-optimizations-can-ghc-be-expected-to-perform-reliably)
* [GHC-sum-[1..n]](https://www.zhihu.com/question/31821539)
* [CallArity-Optimizaiton](http://git.haskell.org/ghc.git/blob/HEAD:/compiler/simplCore/CallArity.hs)
* [GHC-8.2.1](https://www.zhihu.com/question/58281091)
* [GHC-Core](https://stackoverflow.com/questions/6121146/reading-ghc-core/6121495#6121495)
* [ucontext-deprecated](https://stackoverflow.com/questions/4298986/is-there-something-to-replace-the-ucontext-h-functions)
* [multiprocessing-import-error](https://bugs.python.org/issue25053)

### 2018-2-7
* [ELF-101-Symbols](http://www.intezer.com/executable-linkable-format-101-part-2-symbols/)
* [cpu_features](https://github.com/google/cpu_features)

### 2018-2-8
* [Win2k-Source](http://atdt.freeshell.org/k5/story_2004_2_15_71552_7795.html)

### 2018-2-9
* [Rust-Non-Lexical-Lifetime-NLL](https://zhuanlan.zhihu.com/p/32884290)
* [Rust-坑](https://www.zhihu.com/question/49194043)
* [remove-implicit-int](https://herbsutter.com/2015/04/16/reader-qa-why-was-implicit-int-removed/)
* [KPTI/KAISER-regression](http://www.brendangregg.com/blog/2018-02-09/kpti-kaiser-meltdown-performance.html)
* [彩虹表](https://www.zhihu.com/question/19790488)

### 2018-2-10
* [PKCS#5/#7](http://likang.me/blog/2013/06/05/python-pycrypto-aes-ecb-pkcs-5/)
* [C++-in-2018](http://meetingcpp.com/blog/items/Cpp-in-2018.html)
* [haskell-package](https://www.reddit.com/r/haskell/comments/7wdu5f/haskell_packages_you_love/)

### 2018-2-11
* [ML-Top10-Feb2018](https://medium.mybridge.co/machine-learning-top-10-articles-for-the-past-month-v-feb-2018-b7aabba5aba4)
* [Snowflake-UUID](https://www.v2ex.com/t/430285#reply18)
* [PHP-==-injection](http://skysec.top/2017/07/22/PHP%E5%87%BD%E6%95%B0%E9%BB%91%E9%AD%94%E6%B3%95%E5%B0%8F%E6%80%BB%E7%BB%93/)

### 2018-2-12
* [CORS-Redirect](https://stackoverflow.com/questions/18539403/chrome-cancels-cors-xhr-upon-http-302-redirect)
* [CORS-HTML-JS](https://stackoverflow.com/questions/11423682/cross-domain-form-posting)
* [Padding-Oracle-CBC-AES](https://www.jianshu.com/p/1851f778e579)
* [Language-checklist](http://colinm.org/language_checklist.html)

### 2018-2-13
* [LLVM-GC](https://medium.com/@MartinCracauer/llvms-garbage-collection-facilities-and-sbcl-s-generational-gc-a13eedfb1b31)
* [Linear-Type-Scala](http://sparse.tech/blog/literal-types-case-study)

### 2018-2-14
* [Python-Top10-Feb2018](https://medium.mybridge.co/python-top-10-articles-for-the-past-month-v-feb-2018-ec438bd93c49)
* [Stop-Olympic-Destroyer](https://www.endgame.com/blog/technical-blog/stopping-olympic-destroyer-new-process-injection-insights)

### 2018-2-15
* [Intro-to-Waveform](http://waveforms.surge.sh/waveforms-intro)
* [ATSP-Constant-time-Approx-Algorithm](https://www.quantamagazine.org/one-way-salesman-finds-fast-path-home-20171005/)
* [Spectre-Mitigation-in-MSVC](https://www.paulkocher.com/doc/MicrosoftCompilerSpectreMitigation.html)
* [Java-oddity](https://www.javaworld.com/article/3252845/java-language/java-language-oddities.html)
* [Age-of-Empire-2-Turing-Complete](https://ecc-comp.blogspot.ca/2018/02/age-of-empires-2-scenario-editor-is.html)
* [Promise-as-Monad](https://gist.github.com/briancavalier/3296186)
* [Why-promise-is-monad](https://stackoverflow.com/questions/45712106/why-are-promises-monads)

### 2018-2-16
* [AST=>CFG](https://www.zhihu.com/question/27730062)
* [ASIC-GPU-矿机](https://jiasuhui.com/article/11514)
* [Understanding-Awk](http://devarea.com/understanding-awk-practical-guide/#.WocCUnanGUk)
* [Code-as-Data-meaning](https://adambard.com/blog/what-is-homoiconicity/)
* [Jim-Roskind-Cpp-Ambigious-grammar](http://blog.robertelder.org/jim-roskind-grammar/)

### 2018-2-17
* [JVM-JIT](https://zhuanlan.zhihu.com/p/28476709)
* [DRAM-DDR-I](https://zhuanlan.zhihu.com/p/33444359)
* [DRAM-DDR-II](https://zhuanlan.zhihu.com/p/33479194)
* [O(1)-scheduler](https://www.zhihu.com/question/266499219)
* [Hackett](https://lexi-lambda.github.io/blog/2017/08/28/hackett-progress-report-documentation-quality-of-life-and-snake/)
* [BS-operator dot](https://stackoverflow.com/questions/42183631/inability-to-overload-dot-operator-in-c/42188046#42188046)
* [free-fmap-explanation](https://www.zhihu.com/question/54363988)
* [free-fmap-explanation-2](https://github.com/quchen/articles/issues/35)
* [all odd [] == True](https://www.zhihu.com/question/30213516/answer/47194948)
* [signal-handler-preemptible](https://stackoverflow.com/questions/6128547/is-execution-of-signal-handler-un-preemptible-in-linux)
* [XNA-efficiency](http://www.cnblogs.com/jimnox/archive/2009/06/11/xna-flowercursetest.html)
* [FP-state-machine](https://www.zhihu.com/question/36728044)
* [Formal-Verification](https://www.zhihu.com/question/38378942/answer/84744046)
* [Design-Matrix-Library-in-Cpp](https://www.zhihu.com/question/267156650/answer/319326443)
* [V8-memory-management](https://zhuanlan.zhihu.com/p/33816534)

### 2018-2-18
* [Top-10-features-in-MySQL-8.0](http://lefred.be/content/top-10-mysql-8-0-features-for-dbas-ops/)
* [VNote-Markdown](https://sspai.com/post/43277)
* [ptmalloc-explain-with-graph](http://blog.csdn.net/maokelong95/article/details/52006379)


### 2018-2-19
* [Borrow cycles in Rust: arenas v.s. drop-checking](https://exyr.org/2018/rust-arenas-vs-dropck/)
* [Monadic-shell](http://okmij.org/ftp/Computation/monadic-shell.html)
* [network-proto-layer](http://www.comptechdoc.org/independent/networking/protocol/protlayers.html)

### 2018-2-20
* [Backblaze Hard Drive Stats for 2017](https://www.backblaze.com/blog/hard-drive-stats-for-2017/)
* [XKCD-1957-2018-CVE-list](http://www.explainxkcd.com/wiki/index.php/1957)
* [iframe-防嵌套](http://blog.csdn.net/hengyunabc/article/details/44158639)

### 2018-2-21
* [IPFS](https://muratbuffalo.blogspot.com/2018/02/paper-review-ipfs-content-addressed.html)

### 2018-2-22
* [Virtual-Memory](https://www3.physnet.uni-hamburg.de/physnet/Tru64-Unix/HTML/AQTLLATE/DOCU_012.HTM)

### 2018-2-23
* [Understanding the Limitations of HTTPS](https://textslashplain.com/2018/02/14/understanding-the-limitations-of-https/)

### 2018-2-24
* [Write-a-Linked-list-in-Rust](https://www.reddit.com/r/rust/comments/7zsy72/writing_a_doubly_linked_list_in_rust_is_easy/)

### 2018-2-25
* [LevelDb-SSTable-Log-structured-storage](https://www.igvita.com/2012/02/06/sstable-and-log-structured-storage-leveldb/)

### 2018-2-26
* [Fun with self-decryption](https://x64dbg.com/blog/2018/02/25/fun-with-self-decryption.html)
* [ML-from-scratch](https://www.youtube.com/watch?v=iumlHzoVlJM&feature=youtu.be)
* [Crypto-intro](https://www.reddit.com/r/crypto/comments/806bdn/i_want_to_learn_cryptography_good_place_to_start/)

### 2018-2-27
* [grass-mud-list](https://chinadigitaltimes.net/2013/06/grass-mud-horse-list/)
* [CSS-snippets](https://atomiks.github.io/30-seconds-of-css/)
* [Intel-MPX](https://software.intel.com/zh-cn/articles/intel-memory-protection-extensions-on-windows-10-a-tutorial)

### 2018-2-28
* [MPEG-1-in-JS](http://phoboslab.org/log/2017/02/decode-it-like-its-1999)
* [Reasoning with Types in Rust](https://aaronweiss.us/posts/2018-02-26-reasoning-with-types-in-rust.html)

### 2018-3-1
* [Time to move to C11 atomics?](https://lwn.net/Articles/691128/)
* [February 28th DDoS Incident Report](https://githubengineering.com/ddos-incident-report/)

### 2018-3-2
* [memcrashed-memcached](https://blog.cloudflare.com/memcrashed-major-amplification-attacks-from-port-11211/)
* [微处理器架构](https://www.zhihu.com/question/267334796/answer/323843885)
* [NUMA-UMA-SMP](http://unicornx.github.io/2016/03/26/20160326-mem-shared-arch/)
* [NUMA-SMP-2](http://pipul.org/2015/10/linux-scheduling-domains-load-balance-algorithm/)
* [Scala-delegate](https://zhuanlan.zhihu.com/p/33932952)
* [Scala-reference](https://zhuanlan.zhihu.com/p/33884861)
* [Why-are-types-so-cool-Rust](https://blue-dinosaur.github.io/haskell/type-theory/programming/2018/02/19/result-types.html)
* [The Expressive C++17 Coding Challenge in D](https://seb.wilzba.ch/b/2018/02/the-expressive-c17-coding-challenge-in-d/)
* [PHP-md5-0e-bug](https://www.zhihu.com/question/266144672/answer/305893111)

### 2018-3-3
* [clojure-don't-lazy](https://stuartsierra.com/2015/08/25/clojure-donts-lazy-effects)
* [LFS-8.2](http://lists.linuxfromscratch.org/pipermail/lfs-support/2018-March/051866.html)
* [GHC-compact-regions](http://fuuzetsu.co.uk/blog/posts/2018-03-03-GHC-compact-regions-for-improved-latency.html)
* [Deconstructing the water effect in Super Mario Sunshine](http://blog.mecheye.net/2018/03/deconstructing-the-water-effect-in-super-mario-sunshine/)

### 2018-3-4
* [Fear and Loathing with APL](http://theburningmonk.com/2015/06/fear-and-loathing-with-apl/)
* [Linguistic-behind-re](https://dev.to/alainakafkes/exploring-the-linguistics-behind-regular-expressions-bb4)

### 2018-3-5
* [Linux-Kernel-Development](http://devarea.com/linux-kernel-development-and-writing-a-simple-kernel-module/#.Wp2df23waUk)
* [History-of-User-Agent-Mozilla](https://webaim.org/blog/user-agent-string-history/)

### 2018-3-6
* [C++: Thoughts on Dealing with Signed/Unsigned Mismatch](http://ithare.com/c-thoughts-on-dealing-with-signedunsigned-mismatch/)
* [Windows’s Virtual Address Space: A Short MSDN Story](http://www.tenouk.com/WinVirtualAddressSpace.html)

### 2018-3-7
* [Java-FX-removed-from-Java-JDK](https://www.infoworld.com/article/3261066/java/javafx-will-be-removed-from-the-java-jdk.html)
* [Encryption-101-break](https://blog.malwarebytes.com/threat-analysis/2018/03/encryption-101-how-to-break-encryption/)

### 2018-3-8
* [System.IO-in-.Net-Core-2.1](https://blogs.msdn.microsoft.com/jeremykuhne/2018/03/08/system-io-in-net-core-2-1-sneek-peek/)
* [LLVM-6](https://lists.llvm.org/pipermail/llvm-announce/2018-March/000077.html)
* [GHC-8.4.1](https://ghc.haskell.org/trac/ghc/blog/ghc-8.4.1-released)

### 2018-3-9
* [gcc-m32-i386-System-V-stack-alignment](https://stackoverflow.com/questions/40307193/responsiblity-of-stack-alignment-in-x86-assembly)
* [gcc-m32-stack-analysis](https://reverseengineering.stackexchange.com/questions/17075/stack-buffer-size-is-different-between-c-and-asm/17076#17076)


### 2018-3-10
* [VDSO-syscall](https://jin-yang.github.io/post/kernel-syscall.html)
* [非线性最小二乘法](http://blog.sciencenet.cn/blog-465130-1001688.html)
* [setuid-uid-euid](https://www.osso.nl/blog/setuid-seteuid-uid-euid/)


### 2018-3-11
* [UID-Real-Effective-Saved](https://stackoverflow.com/questions/205070/whats-the-deal-with-all-the-different-uids-a-process-can-have)
* [PyGILState_Ensure](https://vstinner.github.io/python37-gil-change.html)
* [CUDA++](https://migocpp.wordpress.com/2018/03/07/cuda/)

### 2018-3-12
* [Advent-of-D](http://jordi.inversethought.com/blog/advent-of-d/)
* [Image-alignment](http://www.learnopencv.com/image-alignment-feature-based-using-opencv-c-python/)
* [Rust-2018-roadmap](https://blog.rust-lang.org/2018/03/12/roadmap.html)

### 2018-3-13
* [Windows-NT-C2-Security](https://msdn.microsoft.com/en-us/library/cc767092.aspx)
* [SQL-NoSQL](http://blog.csdn.net/ochangwen/article/details/53423301)

### 2018-3-14
* [PROFILING: OPTIMISATION](https://engineering.riotgames.com/news/profiling-optimisation)
* [A-Z-match-lowercase-locale](https://unix.stackexchange.com/questions/227070/why-does-a-z-match-lowercase-letters-in-bash)
* [MemCache++-study](http://cppdepend.com/blog/?p=678)

### 2018-3-15
* [Simple-Optimization-of-A*-in-Unity](https://github.com/badawe/Simple-optimized-A-Pathfinder)
* [LeetCode-hard-collection](https://github.com/wisdompeak/LeetCode)
* [.NET-drop-STM](http://www.infoq.com/cn/news/2010/05/STM-Dropped)
* [Ruby-monkey-patch](https://www.jianshu.com/p/329079b5819c)
* [并发之痛 Thread，Goroutine，Actor](http://jolestar.com/parallel-programming-model-thread-goroutine-actor/)
* [Usability improvements in GCC 8](https://developers.redhat.com/blog/2018/03/15/gcc-8-usability-improvements/)

### 2018-3-16
* [What can we learn from how compilers are designed?](http://www.tedinski.com/2018/03/13/how-compilers-are-designed.html)

### 2018-3-17
* [Why inheritance never made any sense](https://www.sicpers.info/2018/03/why-inheritance-never-made-any-sense/)
* [IDEA-instructions](https://idea-instructions.com/)
* [Python 3.7’s new builtin breakpoint — a quick tour](https://medium.com/@anthonypjshaw/python-3-7s-new-builtin-breakpoint-a-quick-tour-4f1aebc444c)

### 2018-3-18
* [Building-a-fast-Electron-App-using-Rust](https://keminglabs.com/blog/building-a-fast-electron-app-with-rust/)
* [Gcc-builtin-expand](https://code.woboq.org/gcc/gcc/builtins.c.html)

### 2018-3-19
* [2-fd-in-TCP](https://stackoverflow.com/questions/36730848/why-we-have-to-get-two-file-descriptors-in-tcp-server-socket-programming)

### 2018-3-20 - 2018-3-25
* [Types, and Why You Should Care](https://www.youtube.com/watch?v=0arFPIQatCU)
* [Async/Await VI: 6 weeks of great progress](https://boats.gitlab.io/blog/post/2018-03-20-async-vi/)
* [Bash-suid](https://unix.stackexchange.com/questions/74527/setuid-bit-seems-to-have-no-effect-on-bash)
* [Canary-DEP/NX-ASLR-Break](https://security.stackexchange.com/questions/20497/stack-overflows-defeating-canaries-aslr-dep-nx)
* [Basic Data Structures and Algorithms in the Linux Kernel](http://luisbg.blogalia.com/historias/74062)
* [DoNot-Tor](https://www.whonix.org/wiki/DoNot)

### 2018-3-26 - 2018-4-1
* [Top 10 Bugs in the C++ Projects of 2017](https://medium.com/@CPP_Coder/top-10-bugs-in-the-c-projects-of-2017-d7e48a5c23b2)
* [Linux-IO-select-epoll](https://segmentfault.com/a/1190000003063859)
* [More-branch-attack](https://arstechnica.com/gadgets/2018/03/its-not-just-spectre-researchers-reveal-more-branch-prediction-attacks/)
* [Total-Meltdown-Win7](http://blog.frizk.net/2018/03/total-meltdown.html?m=1)
* [C++-2018-Jacksonville](https://botondballo.wordpress.com/2018/03/28/trip-report-c-standards-meeting-in-jacksonville-march-2018/)
* [Rust-1.25](https://blog.rust-lang.org/2018/03/29/Rust-1.25.html)

### 2018-4-2 - 2018-4-8
* [Trip report: Winter ISO C++ standards meeting (Jacksonville)](https://herbsutter.com/2018/04/02/trip-report-winter-iso-c-standards-meeting-jacksonville/)
* [Python-Numba](https://zhuanlan.zhihu.com/p/27152060)
* [C++-Low-level-IO-proposal](https://www.reddit.com/r/cpp/comments/89nn1t/proposed_standard_low_level_file_io_library_for_c/)
* [opencv-cuda-cython](https://stackoverflow.com/questions/42125084/accessing-opencv-cuda-functions-from-python-no-pycuda/42401559#42401559)
* [numpy-pybuffer](https://stackoverflow.com/questions/37988849/safer-way-to-expose-a-c-allocated-memory-buffer-using-numpy-ctypes)
* [Pool-imap-map](https://stackoverflow.com/questions/26520781/multiprocessing-pool-whats-the-difference-between-map-async-and-imap)
* [concurrent.futures-internal](http://manjusaka.itscoder.com/2017/11/28/something-about-concurrent-future/)

### 2018-4-9 - 2018-4-15
* [Modern garbage collection](https://blog.plan99.net/modern-garbage-collection-911ef4f8bd8e)
* [Python-Interpreter-Internal](https://blog.csdn.net/atfield/article/category/256448)
* [MSVC-now-report-__cplusplus-correctly](https://blogs.msdn.microsoft.com/vcblog/2018/04/09/msvc-now-correctly-reports-__cplusplus/)
* [wsgiref-comment](https://github.com/zongzhenh/_backup/tree/master/wsgiref)
* [markov-decision-process-2048](http://jdlm.info/articles/2018/03/18/markov-decision-process-2048.html)
* [约瑟夫问题-logn](http://maskray.me/blog/2013-08-27-josephus-problem-two-log-n-solutions)
* [x86_64-rax-va_args](https://stackoverflow.com/questions/6212665/why-is-eax-zeroed-before-a-call-to-printf)
* + In the x86_64 ABI, if a function has variable arguments then AL (which is part of EAX) is expected to hold the number of vector (XMM) registers used to hold arguments to that function.
* [Win64-SysV-difference](https://stackoverflow.com/questions/4429398/why-does-windows64-use-a-different-calling-convention-from-all-other-oses-on-x86)

### 2018-4-16 - 2018-4-22
* [best-python-articles](https://medium.freecodecamp.org/python-collection-of-my-favorite-articles-8469b8455939)
* [Virtual Data Optimizer](https://www.redhat.com/de/blog/look-vdo-new-linux-compression-layer)
* [POPL-SPJ-Interview](http://www.cs.cmu.edu/~popl-interviews/peytonjones.html)
* [Software-Foundation-zh-cn](https://coq-zh.github.io/SF-zh/)

### 2018-4-23 - 2018-4-29
* [Python-source-code-int](https://blog.csdn.net/zhangyifei216/article/details/50667192)
* [Windows-CreateProcess-overhead](https://stackoverflow.com/questions/47845/why-is-creating-a-new-process-more-expensive-on-windows-than-linux)
* [BBR-TCP](https://www.zhihu.com/question/53559433/answer/135919956)
* [bypass-PHP-escape](https://security.szurek.pl/exploit-bypass-php-escapeshellarg-escapeshellcmd.html)
* [HITCON-2017-Notes](https://hackmd.io/7hNNkuw2QD2pXj7UI15wJw)
* [Simplify-Building-C++](https://mropert.github.io/2018/04/27/simplifying_build-part3/)

### 2018-4-30 - 2018-5-6
* [concurrent-lock-free-queue-ringbuffer](http://moodycamel.com/blog/2014/a-fast-general-purpose-lock-free-queue-for-c++#benchmarks)
* [LMAX-Java-Disruptor](https://martinfowler.com/articles/lmax.html)
* [Java-Disruptor](https://zhuanlan.zhihu.com/p/21355046)
* [C-Compiler-SSA](https://blog.csdn.net/dongtingzhizi/article/details/8011612)
* [CFL-Reachability-Inter-procedural-analysis](https://www.zhihu.com/question/38569079)
* [4-Russian's-Method-Bit-Matrix](https://www.youtube.com/watch?v=cYJrMUvJQGc)
* [Tourist-Guide-to-LLVM-source-code](https://blog.regehr.org/archives/1453)
* [LLVM-Module](https://richardustc.github.io/2013-06-19-2013-06-19-programming-with-llvm-ir.html)
* [LLVM for Grad Students](https://www.cs.cornell.edu/~asampson/blog/llvm.html)
* [LLVM-PassManager](https://www.zhihu.com/question/45051197)
* [C-is-Not-a-Low-Level-Language](https://queue.acm.org/detail.cfm?id=3212479)
* [Programming-Language-Theory-in-Agda](https://wenkokke.github.io/sf/)
* [PCA-Introduce](https://blog.csdn.net/u010376788/article/details/46957957)


### 2018-5-7 - 2018-8-3
* [Solving the Generalized Streaming Iterator Problem without GATs [Totoroot]](https://lukaskalbertodt.github.io/2018/08/03/solving-the-generalized-streaming-iterator-problem-without-gats.html)
* [Logic programming and compiler writing](http://sovietov.com/tmp/warren1980.pdf)
* [Bootable CD retro game in a tweet](https://www.quaxio.com/bootable_cd_retro_game_tweet/)
* [laser-mop.pdf](http://laser.inf.ethz.ch/2012/slides/vanRossum/laser-mop.pdf)
* [Sparse matrix representations in scipy | Eric Heydenblog](https://heydenberk.com/blog/posts/sparse-matrix-representations-in-scipy/)
* [Barro/compiler-warnings: A list of compiler warning flags for different GCC](https://github.com/Barro/compiler-warnings)
* [[1008.1459] Actor Model of Computation: Scalable Robust Information Systems](https://arxiv.org/abs/1008.1459)
* [Darling Development Blog: Mach-O linking and loading tricks](http://blog.darlinghq.org/2018/07/mach-o-linking-and-loading-tricks.html)
* [Learning Math for Machine Learning](https://blog.ycombinator.com/learning-math-for-machine-learning/)
* [How we scaled nginx and saved the world 54 years every day](https://blog.cloudflare.com/how-we-scaled-nginx-and-saved-the-world-54-years-every-day/?ref)
* [DAX: Page cache bypass for filesystems on memory storage [LWN.net]](https://lwn.net/Articles/618064/)
* [gcc address sanitizer core dump on error - Stack Overflow](https://stackoverflow.com/questions/45280910/gcc-address-sanitizer-core-dump-on-error)
* [Use Linux madvise(MADV_DONTDUMP) to exclude ASan shadow regions from core d](https://github.com/google/sanitizers/issues/345)
* [GitHub - wudikua/ps: 自己实现的深度学习训练框架，纯java实现，没有过多的第三方依赖，可分布式训练](https://github.com/wudikua/ps)
* [Flash相关理论知识：SLC与MLC、NOR与NAND FLASH、闪存卡 - 程序园](http://www.voidcn.com/article/p-njgpxide-kp.html)
* [DLL注入浅析（下） – ETenal](https://etenal.me/archives/871)
* [DLL注入浅析（上） – ETenal](https://etenal.me/archives/844)
* [pwn学习笔记汇总（持续更新） – ETenal](https://etenal.me/archives/972)
* [关于heap overflow的一些笔记 – ETenal](https://etenal.me/archives/1121)
* [Exploits Database by Offensive Security](https://www.exploit-db.com/)
* [How To Corrupt An SQLite Database File](https://www.sqlite.org/howtocorrupt.html)
* [Integer overflow checking cost](https://danluu.com/integer-overflow/)
* [gnu make - What is the difference between the GNU Makefile variable assignm](https://stackoverflow.com/questions/448910/what-is-the-difference-between-the-gnu-makefile-variable-assignments-a)
* [Welcome to LinuxTone.Org /ebooks/](http://docs.linuxtone.org/ebooks/)
* [Memcached Server CVE-2017-9951 | Twistlock Vulnerability Report](https://www.twistlock.com/2017/07/13/cve-2017-9951-heap-overflow-memcached-server-1-4-38-twistlock-vulnerability-report/)
* [Introduction to seccomp: BPF linux syscall filter | Yet another enthusiast](https://blog.yadutaf.fr/2014/05/29/introduction-to-seccomp-bpf-linux-syscall-filter/)
* [How does JPEG actually work? – Developing for Developers](https://blogs.msdn.microsoft.com/devdev/2006/04/12/how-does-jpeg-actually-work/)
* [Kworker, what is it and why is it hogging so much CPU? - Ask Ubuntu](https://askubuntu.com/questions/33640/kworker-what-is-it-and-why-is-it-hogging-so-much-cpu)
* [When should I use GCC's -pipe option? - Stack Overflow](https://stackoverflow.com/questions/1512933/when-should-i-use-gccs-pipe-option)
* [ssl - How to create a self-signed certificate with openssl? - Stack Overflo](https://stackoverflow.com/questions/10175812/how-to-create-a-self-signed-certificate-with-openssl)
* [Regular Expression Matching: the Virtual Machine Approach](https://swtch.com/~rsc/regexp/regexp2.html)
* [System Design Interview Concepts – CAP Theorem](http://www.acodersjourney.com/2018/07/system-design-interview-cap-theorem/)
* [A Practical Introduction to Finger Trees](https://chrispenner.ca/posts/intro-to-finger-trees)
* [SQLite虚表介绍 - CSDN博客](https://blog.csdn.net/youngters/article/details/7364914)
* [Linux FAQ](https://stason.org/TULARC/os/linux-faq/index.html)
* [Understanding glibc malloc – sploitF-U-N](https://sploitfun.wordpress.com/2015/02/10/understanding-glibc-malloc/)
* [Heap Data Structures](http://core-analyzer.sourceforge.net/index_files/Page335.html)
* [0ctf2018 babyheap writeup | Sakuraのblog](http://eternalsakura13.com/2018/04/03/babyheap/)
* [[原创]ctf pwn中的unlink exploit(堆利用)-『Pwn』-看雪安全论坛](https://bbs.pediy.com/thread-224836.htm)
* [[Phrack]Advanced Doug lea's malloc exploits.pdf](https://paper.seebug.org/papers/Archive/refs/heap/[Phrack]Advanced%20Doug%20lea's%20malloc%20exploits.pdf)
* [PWN之堆内存管理](https://paper.seebug.org/255/)
* [Docker 和 Kubernetes 从听过到略懂：给程序员的旋风教程](https://1byte.io/developer-guide-to-docker-and-kubernetes/)
* [A Short Guide to Hard Problems | Quanta Magazine](https://www.quantamagazine.org/a-short-guide-to-hard-problems-20180716/)
* [Power management/Suspend and hibernate - ArchWiki](https://wiki.archlinux.org/index.php/Power_management/Suspend_and_hibernate)
* [State Of Rust](https://forge.rust-lang.org/state-of-rust.html)
* [Basics of Futexes - Eli Bendersky's website](https://eli.thegreenplace.net/2018/basics-of-futexes/)
* [terminology - What is coinduction? - Computer Science Stack Exchange](https://cs.stackexchange.com/questions/525/what-is-coinduction)
* [search - Difference Between KMP and Regex/DFA-based Searching - Stack Overf](https://stackoverflow.com/questions/31058281/difference-between-kmp-and-regex-dfa-based-searching)
* [Arthur O'Dwyer – Stuff mostly about C](https://quuxplusone.github.io/blog/)
* [Variadic CRTP: An Opt-in for Class Features, at Compile Time - Fluent C](https://www.fluentcpp.com/2018/06/22/variadic-crtp-opt-in-for-class-features-at-compile-time/)
* [How to Reduce the Code Bloat of a Variadic CRTP - Fluent C](https://www.fluentcpp.com/2018/07/03/how-to-reduce-the-code-bloat-of-a-variadic-crtp/)
* [Trip report: Summer ISO C standards meeting (Rapperswil) | Sutter’s Mill](https://herbsutter.com/2018/07/02/trip-report-summer-iso-c-standards-meeting-rapperswil/)
* [Thoughts on "sanely move-assignable" – Arthur O'Dwyer – Stuff mostly about](https://quuxplusone.github.io/blog/2018/07/06/thoughts-on-sanely-move-assignable/)
* [MSVC Preprocessor Progress towards Conformance | Visual C Team Blog](https://blogs.msdn.microsoft.com/vcblog/2018/07/06/msvc-preprocessor-progress-towards-conformance/)
* [Functions in std | Andrzej's C blog](https://akrzemi1.wordpress.com/2018/07/07/functions-in-std/)
* [The C Bestiary ?](http://videocortex.io/2017/Bestiary/#-abominable-types)
* [Abominable Function Types](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2015/p0172r0.html#2.5)
* [lattera/articles: Various articles I've written](https://github.com/lattera/articles)
* [PEP 448 -- Additional Unpacking Generalizations | Python.org](https://www.python.org/dev/peps/pep-0448/)
* [RKX1209/kernel_exploit_world: Tutorial for writing kernel exploits](https://github.com/RKX1209/kernel_exploit_world)
* [Tuisec安全热点](http://paper.tuisec.win/index.jsp)
* [Python 3.7 中的 PEP 562](http://paper.tuisec.win/detail/36f2e12c1df0a9e)
* [Shell-13-questions](http://bbs.chinaunix.net/thread-218853-1-1.html)
* 
* [Rust 2018: an early preview - announcements - Rust Internals](https://internals.rust-lang.org/t/rust-2018-an-early-preview/7776)
* [Generalized data structure synthesis | the morning paper](https://blog.acolyer.org/2018/06/21/generalized-data-structure-synthesis/)
* [(3) User-level threads....... with threads. - Paul Turner - Google - YouTub](https://www.youtube.com/watch?v=KXuZi9aeGTw)
* [Restartable sequences [LWN.net]](https://lwn.net/Articles/650333/)
* [91-互斥量的鲁棒属性 - CSDN博客](https://blog.csdn.net/q1007729991/article/details/62424302)
* [futex的robust锁实现原理 - Tsecer的日志 - 网易博客](http://tsecer.blog.163.com/blog/static/150181720111138316699/)
* [Object attribute lookup in Python | Better Programming](http://www.betterprogramming.com/object-attribute-lookup-in-python.html)
* [How does strace work? - Packagecloud Blog](https://blog.packagecloud.io/eng/2016/02/29/how-does-strace-work/)
* [How does ltrace work? - Packagecloud Blog](https://blog.packagecloud.io/eng/2016/03/14/how-does-ltrace-work/)
* [500 Lines or Less | A Python Interpreter Written in Python](http://aosabook.org/en/500L/a-python-interpreter-written-in-python.html)
* [In MySQL, never use “utf8”. Use “utf8mb4”. – Adam Hooper – Medium](https://medium.com/@adamhooper/in-mysql-never-use-utf8-use-utf8mb4-11761243e434)
* [A Quick Gettext Tutorial](http://www.labri.fr/perso/fleury/posts/programming/a-quick-gettext-tutorial.html)
* [ESSLLI94.pdf](http://www.cse.chalmers.se/~peterd/papers/ESSLLI94.pdf)
* [New NOVA Filesystem | Linux Journal](https://www.linuxjournal.com/content/new-nova-filesystem)
* [2018 Rapperswil ISO C Committee Trip Report (Contracts for C 20; Paralle](https://www.reddit.com/r/cpp/comments/8prqzm/2018_rapperswil_iso_c_committee_trip_report/)
* [JVM Internals](http://blog.jamesdbloom.com/JVMInternals.html)
* [Verification Games | Computer Science & Engineering](https://www.cs.washington.edu/verigames)
* [c - What is the meaning of "%-*.*s" in a printf format string - Stack Overf](https://stackoverflow.com/questions/23776824/what-is-the-meaning-of-s-in-a-printf-format-string)
* [repz ret - repz ret](http://repzret.org/p/repzret/)
* [Linux内核解析之标准I/O库 - 笨拙的菜鸟 - 博客园](http://www.cnblogs.com/zengyiwen/p/5755187.html)
* [PyCon2018 Review (Part 1) | 卡瓦邦噶！](https://www.kawabangga.com/posts/2912)
* [Linux中的GOT和PLT到底是个啥？](http://www.360doc.com/content/18/0122/09/7377734_724070758.shtml)
* [Announcing Rust 1.26.1 - The Rust Programming Language Blog](https://blog.rust-lang.org/2018/05/29/Rust-1.26.1.html)
* [Blog: GHC 8.4.3 released – GHC](https://ghc.haskell.org/trac/ghc/blog/ghc-8.4.3-released)
* [Is Sign Extension in C a compiler option, or compiler dependent or target](https://stackoverflow.com/questions/40396562/is-sign-extension-in-c-a-compiler-option-or-compiler-dependent-or-target-depe)
* [python-magic-methods](https://ltoddy.github.io/essay/2018/05/27/python-magic-methods.html)
* [laike9m/pdir2: Pretty dir() printing with joy](https://github.com/laike9m/pdir2)
* [Space Invaders from Scratch - Part 1 | NICK TASIOS](http://nicktasios.nl/posts/space-invaders-from-scratch-part-1.html)
* [Printing backtrace from coredump (source http://emntech.blogspot.de/2012/08](https://gist.github.com/root42/c979b037f85dc4b2be1f3735afedeb1d)
* [From-Java-to-Kotlin-back-again](https://zsmb.co/on-from-java-to-kotlin-and-back-again/)
* [Software optimization resources. C and assembly. Windows, Linux, BSD, Mac](http://agner.org/optimize/)
* [Intel平臺下linux中 ELF文件動態鏈接的加載、解析及實例分析（二）:函數解析與卸載 - 代碼家](http://www.dayexie.com/detail1762001.html)
* [functions - How is the first jmp skipped in plt entry - Reverse Engineering](https://reverseengineering.stackexchange.com/questions/14100/how-is-the-first-jmp-skipped-in-plt-entry)
* [assembly - What does @plt mean here? - Stack Overflow](https://stackoverflow.com/questions/5469274/what-does-plt-mean-here)
* [Why C Member Function Pointers Are 16 Bytes Wide - Vlad Lazarenko](http://lazarenko.me/wide-pointers/)
* [Linux x86 Program Start Up](http://dbp-consulting.com/tutorials/debugging/linuxProgramStartup.html)

### 2018-8-4
* [ShiChao's Notes](https://notes.shichao.io/)
* [C++-recommendation-books](http://blog.cheyulin.me/?p=318)
* [type-safe-printf](https://www.zhihu.com/question/288323827)

### 2018-8-5 - 2018-10-8
* [TCP-GBN-SR](https://blog.yfxie.com/comparison-of-network-gbn-sr-and-tcp/)
* [Nadav Amit - How new-lines affect Linux performance](https://nadav.amit.zone/blog/linux-inline)
* [康托尔、哥德尔、图灵——永恒的金色对角线(rev#2) – 刘未鹏 | Mind Hacks](http://mindhacks.cn/2006/10/15/cantor-godel-turing-an-eternal-golden-diagonal/)
* [Semantic Domain: Löb's theorem is (almost) the Y combinator](http://semantic-domain.blogspot.com/2016/05/lobs-theorem-is-almost-y-combinator.html)
* [explainshell.com - match command-line arguments to their help text](https://explainshell.com/)
* [Stryku.pl](http://stryku.pl/index.php)
* [谷歌针对spectre的解决方案 Retpoline:a software construct for preventing branch-targe](https://zhuanlan.zhihu.com/p/32655503)
* [给程序员解释Spectre和Meltdown漏洞](https://zhuanlan.zhihu.com/p/32784852)
* [英特尔 SGX 技术爆漏洞，对大批加密货币项目造成冲击 - 链闻 ChainNews](https://www.chainnews.com/articles/640266611708.htm)
* [TCP Idle Scan (-sI) | Nmap Network Scanning](https://nmap.org/book/idlescan.html)
* [ROC和AUC介绍以及如何计算AUC](http://alexkong.net/2013/06/introduction-to-auc-and-roc/)
* [CIS700/CSE791-DSiC-2015](http://tristartom.github.io/teaching/15s-cis700/)
* [(80 条消息)如何评价Arrakis? - 知乎](https://www.zhihu.com/question/30361813)
* [ROC curve analysis with MedCalc](https://www.medcalc.org/manual/roc-curves.php)
* [Precision, recall, sensitivity and specificity | Ubershmekel's Uberpython P](https://uberpython.wordpress.com/2012/01/01/precision-recall-sensitivity-and-specificity/)
* [javascript - Is it possible to access "internal" object properites defined](https://stackoverflow.com/questions/14369317/is-it-possible-to-access-internal-object-properites-defined-in-es5-8-6-2)
* [__proto__ VS. prototype in JavaScript - Stack Overflow](https://stackoverflow.com/questions/9959727/proto-vs-prototype-in-javascript)
* [这一次，彻底弄懂 JavaScript 执行机制 - 掘金](https://juejin.im/post/59e85eebf265da430d571f89)
* [详解JavaScript中的Event Loop（事件循环）机制](https://zhuanlan.zhihu.com/p/33058983)
* [KVM 介绍（3）：I/O 全虚拟化和准虚拟化 [KVM I/O QEMU Full-Virtualizaiton Para-virtualizati](https://www.cnblogs.com/sammyliu/p/4543657.html)
* [KVM 介绍（2）：CPU 和内存虚拟化 - SammyLiu - 博客园](http://www.cnblogs.com/sammyliu/p/4543597.html)
* [AWS just announced a move from Xen towards KVM. So what is KVM?](https://medium.com/@dbclin/aws-just-announced-a-move-from-xen-towards-kvm-so-what-is-kvm-2091f123991)
* [Xen V.S. KVM终于画上了一个完美的句号](https://zhuanlan.zhihu.com/p/33324585)
* [x86虚拟化概述 - 博客 - binsite](https://www.binss.me/blog/An-overview-of-the-virtualization-of-x86/)
* [CPU纯软件半虚拟化技术-我拿流年乱了浮生-51CTO博客](http://blog.51cto.com/tasnrh/1736761)
* [硬件篇之MMU - 半山茶馆 - CSDN博客](https://blog.csdn.net/ipmux/article/details/19167605)
* [Ballooning, rebooting, and the feature you’ve never heard of | Xen Project](https://blog.xenproject.org/2014/02/14/ballooning-rebooting-and-the-feature-youve-never-heard-of/)
* [Xen CPU 调度算法对比 - gavinwjin的专栏 - CSDN博客](https://blog.csdn.net/gavinwjin/article/details/5178745)
* [Tag: virtualization | SilentMing's Gensokyo](https://silentming.net/tags/virtualization/page/3/)
* [Lenky个人站点 » Double Fault & Triple Fault](http://www.lenky.info/archives/2012/04/1479)
* [caching - Does Linux use x86 CPU's PCID feature for TLB? If not, why? - Sta](https://stackoverflow.com/questions/20155304/does-linux-use-x86-cpus-pcid-feature-for-tlb-if-not-why/41404782#41404782)
* [(13) How We've Scaled Dropbox - YouTube](https://www.youtube.com/watch?v=PE4gwstWhmc)
* [popularity contest - “Disprove” Fermat's Last Theorem - Programming Puzzles](https://codegolf.stackexchange.com/questions/32696/disprove-fermats-last-theorem/32698#32698)
* [从拉格朗日乘子法到SVM - CSDN博客](https://blog.csdn.net/zjuPeco/article/details/77890660)
* [Loop optimization - Wikipedia](https://en.wikipedia.org/wiki/Loop_optimization)
* [Cpu0 architecture and LLVM structure — Tutorial: Creating an LLVM Backend f](https://jonathan2251.github.io/lbd/llvmstructure.html#brief-introduction)
* [c - What is the difference between -fprofile-use and -fauto-profile? - St](https://stackoverflow.com/questions/29700460/what-is-the-difference-between-fprofile-use-and-fauto-profile)
* [caching - Are cache-line-ping-pong and false sharing the same? - Stack Over](https://stackoverflow.com/questions/30684974/are-cache-line-ping-pong-and-false-sharing-the-same)
* [https://www.fsfla.org/~lxoliva/writeups/gOlogy/gOlogy.txt](https://www.fsfla.org/~lxoliva/writeups/gOlogy/gOlogy.txt)
* [You Can't Always Hash Pointers in C « null program](https://nullprogram.com/blog/2016/05/30/)
* [The Observation Deck » Falling in love with Rust](http://dtrace.org/blogs/bmc/2018/09/18/falling-in-love-with-rust/)
* [postgresql - Can I use `on delete set null` on a compound foreign key which](https://dba.stackexchange.com/questions/85919/can-i-use-on-delete-set-null-on-a-compound-foreign-key-which-contains-a-primar)
* [Computer Laboratory – Course material 2009–10: Concurrent and Distributed S](https://www.cl.cam.ac.uk/teaching/0910/ConcDistS/)
* [c - When auto is used against array, why it's converted to pointer and no](https://stackoverflow.com/questions/6443230/when-auto-is-used-against-array-why-its-converted-to-pointer-and-not-reference)
* [c - How to declare array with auto - Stack Overflow](https://stackoverflow.com/questions/16949016/how-to-declare-array-with-auto)
* [c - Dereferencing a pointer to an array? - Stack Overflow](https://stackoverflow.com/questions/16013450/dereferencing-a-pointer-to-an-array)
* [CSP课堂笔记之UNIKERNEL | 高策](http://gaocegege.com/Blog/csp/unikernel)
* [mysql - What's the difference between INNER JOIN, LEFT JOIN, RIGHT JOIN and](https://stackoverflow.com/questions/5706437/whats-the-difference-between-inner-join-left-join-right-join-and-full-join)
* [SQL INSERT performance omitting field names? - Stack Overflow](https://stackoverflow.com/questions/2510343/sql-insert-performance-omitting-field-names)
* [Deferrable SQL Constraints in Depth](https://begriffs.com/posts/2017-08-27-deferrable-sql-constraints.html#why-defer)
* [matrices - How to calculate gradient of $x^TAx$ - Mathematics Stack Exchang](https://math.stackexchange.com/questions/482742/how-to-calculate-gradient-of-xtax)
* [Computation on Arrays: Broadcasting | Python Data Science Handbook](https://jakevdp.github.io/PythonDataScienceHandbook/02.05-computation-on-arrays-broadcasting.html)
* [Reconciling High-Level Optimizations and Low-Level Code in LLVM](http://www.cs.utah.edu/~regehr/oopsla18.pdf)
* [Why Y? Deriving the Y Combinator in JavaScript](http://raganwald.com/2018/09/10/why-y.html)
* [Index of /Slides](http://bwlampson.site/Slides/)
* [对“端到端”原则的理解 - CSDN博客](https://blog.csdn.net/collier/article/details/3547200)
* [那些年我们一起清除过的浮动-层叠之美-清除浮动,清除浮动方法,闭合浮动,hasLayout,Block formatting contexts,块级格](http://www.iyunlu.com/view/css-xhtml/55.html)
* [To Kata Haskellen Evangelion](https://cosmius.bitbucket.io/tkhe/)
* [The Linux kernel user’s and administrator’s guide — The Linux Kernel docume](https://www.kernel.org/doc/html/v4.10/admin-guide/index.html)
* [python - What's ending comma in print function for? - Stack Overflow](https://stackoverflow.com/questions/18908897/whats-ending-comma-in-print-function-for)
* [ballerina-lang/compiler-architecture.md at master · ballerina-platform/ball](https://github.com/ballerina-platform/ballerina-lang/blob/master/docs/compiler/compiler-architecture.md)
* [Adding peephole optimization to GCC – Prathamesh Kulkarni – Medium](https://medium.com/@prathamesh1615/adding-peephole-optimization-to-gcc-89c329dd27b3)
* [imageworks/pystring: C functions matching the interface and behavior of p](https://github.com/imageworks/pystring)
* [Writing a Linux Debugger Part 1: Setup](https://blog.tartanllama.xyz/writing-a-linux-debugger-setup/)
* [How the Go runtime implements maps efficiently (without generics) | Dave Ch](https://dave.cheney.net/2018/05/29/how-the-go-runtime-implements-maps-efficiently-without-generics)
* [jaspervdj - Dependent Types in Haskell: Binomial Heaps 101](https://jaspervdj.be/posts/2018-09-04-binomial-heaps-101.html)
* [34C3: Hacking into a CPU’s Microcode | Hackaday](https://hackaday.com/2017/12/28/34c3-hacking-into-a-cpus-microcode/)
* [How LLVM Optimizes a Function – Embedded in Academia](https://blog.regehr.org/archives/1603)
* [Nick's Blog](http://blog.notdot.net/tag/damn-cool-algorithms)
* [Damn Cool Algorithms, Part 1: BK-Trees - Nick's Blog](http://blog.notdot.net/2007/4/Damn-Cool-Algorithms-Part-1-BK-Trees)
* [Damn Cool Algorithms: Levenshtein Automata - Nick's Blog](http://blog.notdot.net/2010/07/Damn-Cool-Algorithms-Levenshtein-Automata)
* [Speed up your Python using Rust - RHD Blog](https://developers.redhat.com/blog/2017/11/16/speed-python-using-rust/)
* [Unified Types | Scala Documentation](https://docs.scala-lang.org/tour/unified-types.html)
* [sse - What is the meaning of "non temporal" memory accesses in x86 - Stack](https://stackoverflow.com/questions/37070/what-is-the-meaning-of-non-temporal-memory-accesses-in-x86)
* [The cost of std::initializer_list | Andrzej's C blog](https://akrzemi1.wordpress.com/2016/07/07/the-cost-of-stdinitializer_list/)
* [伪共享（false sharing），并发编程无声的性能杀手 - cyfonly - 博客园](https://www.cnblogs.com/cyfonly/p/5800758.html)
* [DROPS - On the Worst-Case Complexity of TimSort](http://drops.dagstuhl.de/opus/volltexte/2018/9467/)
* [GitHub - hanickadot/compile-time-regular-expressions: A Compile time PCRE (](https://github.com/hanickadot/compile-time-regular-expressions)
* [What does the "rep stos" x86 assembly instruction sequence do? - Stack Over](https://stackoverflow.com/questions/3818856/what-does-the-rep-stos-x86-assembly-instruction-sequence-do)
* [A new kernel polling interface [LWN.net]](https://lwn.net/Articles/743714/)
* [DeprecatingObserversTR2010.pdf](https://infoscience.epfl.ch/record/148043/files/DeprecatingObserversTR2010.pdf)
* [Building a Tetris Game - Ivo's Blog!](http://www.ivaylopavlov.com/building-tetris-game/)
* [Reverse Engineering iOS Apps - iOS 11 Edition (Part 2)](https://ivrodriguez.com/reverse-engineer-ios-apps-ios-11-edition-part2/)
* [Go语言高级编程 · GitBook (Legacy)](https://legacy.gitbook.com/book/chai2010/advanced-go-programming-book/details)
* [The Future of Notebooks: Lessons from JupyterCon | Will Crichton](http://willcrichton.net/notes/lessons-from-jupytercon/)
* [cpython/re.py at 3.7 · python/cpython](https://github.com/python/cpython/blob/3.7/Lib/re.py#L268)
* [Advanced C | Virtual Copy Constructor - GeeksforGeeks](https://www.geeksforgeeks.org/advanced-c-virtual-copy-constructor/)
* [c - Extern and global same variable in same file - Stack Overflow](https://stackoverflow.com/questions/21505021/extern-and-global-same-variable-in-same-file)
* [c - Usage of extern in the same file - Stack Overflow](https://stackoverflow.com/questions/50698846/usage-of-extern-in-the-same-file)
* [【选校信息】计算机硕士（CS Master）名校项目列表（2017年10月更新）](https://www.douban.com/note/642756013/?from=tag)
* [The Rise and Rise of JSON](https://twobithistory.org/2017/09/21/the-rise-and-rise-of-json.html)
* [(53 条消息)作为一个计算机phd，在二进制程序分析领域如何入门并开展研究？ - 知乎](https://www.zhihu.com/question/52807321)
* [你们手里谁有腾讯云 1C1G 的小鸡？ free -m 显示的总内存多少？ - V2EX](https://www.v2ex.com/t/482375#reply51)
* [Intel Side Channel Vulnerability L1TF](https://www.intel.com/content/www/us/en/architecture-and-technology/l1tf.html)
* [python-复盘-从yield/send到yield from再到async/await - 简书](https://www.jianshu.com/p/df2071016343?utm_campaign=maleskine&utm_content=note&utm_medium=seo_notes&utm_source=recommendation)
* [Python PEP 492 中文翻译——协程与async/await语法 - animalize - 博客园](https://www.cnblogs.com/animalize/p/4738941.html)
* [Python 标准库之 LRU 缓存实现学习 - 简书](https://www.jianshu.com/p/f7258e266cc6)
* [VALSE 2018](http://ice.dlut.edu.cn/valse2018/programs.html)
* [System Design Interview Concepts – Database Sharding](http://www.acodersjourney.com/2018/08/database-sharding/)
* [CSP: script-src - HTTP | MDN](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy/script-src)
* [Useless CSP](https://uselesscsp.com/)
* [A Haskell Compiler (1)](http://www.scs.stanford.edu/11au-cs240h/notes/ghc-slides.html#(1))
* [A Bug in the C Standard | iboB](https://ibob.github.io/blog/2018/08/18/a-bug-in-the-cpp-standard/)
* [Were there any memory safety issues found in Rusts standard library? : rust](https://www.reddit.com/r/rust/comments/909gsd/were_there_any_memory_safety_issues_found_in/)
* [scottt/debugbreak: break into the debugger programmatically](https://github.com/scottt/debugbreak)
* [Dancing Links and Exact Cover - BIGBALLON - 博客园](https://www.cnblogs.com/BigBallon/p/6216578.html)
* [Trip Report: C Standards Meeting in Rapperswil, June 2018 | There's Waldo](https://botondballo.wordpress.com/2018/06/20/trip-report-c-standards-meeting-in-rapperswil-june-2018/)
* [New attack on WPA/WPA2 using PMKID](https://hashcat.net/forum/thread-7717.html)
* [Julia 文档 — Julia Language 0.3.0-prerelease 文档](https://julia-zh-cn.readthedocs.io/zh_CN/latest/)
* [gcc交叉编译的实现 - CSDN博客](https://blog.csdn.net/lights_joy/article/details/2065629)
* [Markov Chains explained visually](http://setosa.io/ev/markov-chains/)
* [MaiaVictor/abstract-algorithm: Optimal evaluator of λ-calculus terms.](https://github.com/maiavictor/abstract-algorithm)
* [Functions may behave as if they had negative complexity on optimal evaluato](https://medium.com/@maiavictor/some-functions-may-have-negative-complexity-im-worried-for-my-crypto-c53f6e7343d3)
* [SD-6: SG10 Feature Test Recommendations : Standard C](https://isocpp.org/std/standing-documents/sd-6-sg10-feature-test-recommendations)
* [c - How to detect availability of C 17's extended memory management algo](https://stackoverflow.com/questions/51866309/how-to-detect-availability-of-c17s-extended-memory-management-algorithms-with)
* [MacroVariant](https://gist.github.com/Rseding91/b63189f13f538e4a26ed627f48fd0a45)
* [美国EE经验 | brianwang159](https://brianwang159.wordpress.com/2018/08/15/%E7%BE%8E%E5%9B%BDee%E7%BB%8F%E9%AA%8C/)
* [LINUX is obsolete - Google Groups](https://groups.google.com/forum/m/#!topic/comp.os.minix/wlhw16QWltI)
* [Inside the die of Intel's 8087 coprocessor chip, root of modern floating po](http://www.righto.com/2018/08/inside-die-of-intels-8087-coprocessor.html)
* [lua中并不能随意yield | radiotail's blog](http://radiotail.github.io/2016/05/18/lua%E4%B8%AD%E5%B9%B6%E4%B8%8D%E8%83%BD%E9%9A%8F%E6%84%8Fyield/)
* [协程速谈](https://zhuanlan.zhihu.com/p/37269666)
* [论hook的4种境界](https://zhuanlan.zhihu.com/p/41147539)
* [co/coroutine.h at master · crazybie/co](https://github.com/crazybie/co/blob/master/coroutine.h)
* [Understanding L1 Terminal Fault aka Foreshadow: What you need to know](https://www.redhat.com/en/blog/understanding-l1-terminal-fault-aka-foreshadow-what-you-need-know)
* [Implications of the FLUSH RELOAD Side-Channel Attack](https://defuse.ca/flush-reload-side-channel.htm)
* [Deep Dive: Intel Analysis of L1 Terminal Fault](https://software.intel.com/security-software-guidance/insights/deep-dive-intel-analysis-l1-terminal-fault)
* [Security Research & Defense – Information from Microsoft about vulnerabilit](https://blogs.technet.microsoft.com/srd/)
* [Analysis and mitigation of L1 Terminal Fault (L1TF) – Security Research & D](https://blogs.technet.microsoft.com/srd/2018/08/10/analysis-and-mitigation-of-l1-terminal-fault-l1tf/)
* [Foreshadow: Breaking the Virtual Memory Abstraction with Transient Out-of-O](https://foreshadowattack.eu/)
* [Typesafe Versioned APIs](https://chrispenner.ca/posts/typesafe-api-versioning)
* [Eric Jang: Dijkstra's in Disguise](https://blog.evjang.com/2018/08/dijkstras.html)
* [SQL优化（一） Merge Join vs. Hash Join vs. Nested Loop | 技术世界 | SQL,sql,sql优化,数据](http://www.jasongj.com/2015/03/07/Join1/)
* [SNU OPEN COURSEWARE | SEOUL NATIONAL UNIVERSITY](http://ocw.snu.ac.kr/department_detail?field_c_deptidx_tid=21)
* [数据库原理总结 - CSDN博客](https://blog.csdn.net/u014511737/article/details/46862901)
* [java - Parametric polymorphism vs Ad-hoc polymorphism - Stack Overflow](https://stackoverflow.com/questions/6730126/parametric-polymorphism-vs-ad-hoc-polymorphism)
* [(1 封私信)虚函数是否是多余的？ - 知乎](https://www.zhihu.com/question/280968276/answer/421051100)
* [C 中虚函数、虚继承内存模型](https://zhuanlan.zhihu.com/p/41309205)
* [Introduction · A Julia Tutorial for Physicists](http://rogerluo.me/TutorialForPhysicists.jl/latest/#Slides-1)
* [How To Make Python Run As Fast As Julia (IT Best Kept Secret Is Optimizatio](https://www.ibm.com/developerworks/community/blogs/jfp/entry/Python_Meets_Julia_Micro_Performance?lang=en)
* [(1 封私信 / 81 条消息)SDN 是什么？ - 知乎](https://www.zhihu.com/question/20279620)
* [EBGP vs IBGP](https://zhuanlan.zhihu.com/p/31766603)
* [软件定义网络](https://zhuanlan.zhihu.com/software-defined-network)
* [BGP漫谈](https://zhuanlan.zhihu.com/p/25433049)
* [队列调度机制简介 - 目录 - 技术甜甜圈 - 华三通信](http://www.h3c.com.cn/MiniSite/Technology_Circle/Net_Reptile/The_Four/Home/Catalog/201104/713019_97665_0.htm)
* [SP,SRR, WRR,DWRR, WDRR, SDWRR调度算法的区别 - CSDN博客](https://blog.csdn.net/huaxia520sun/article/details/19822331)
* [TCP 粘包问题浅析及其解决方案 - V2EX](https://www.v2ex.com/t/478610?p=1)
* [stdout - How can I implement 'tee' programmatically in C? - Stack Overflow](https://stackoverflow.com/questions/1761950/how-can-i-implement-tee-programmatically-in-c)
* [What’s New In Python 3.7 — Python 3.7.0 documentation](https://docs.python.org/3/whatsnew/3.7.html)
* [PEP 545 -- Python Documentation Translations | Python.org](https://www.python.org/dev/peps/pep-0545/)
* [TCP新拥塞控制算法BBR的学习笔记 – 勘明培的兔子洞](https://canmipai.com/index.php/2017/07/04/tcp_cong_ctrl_bbr/)
* [TCP拥塞控制 - 维基百科，自由的百科全书](https://zh.wikipedia.org/wiki/TCP%E6%8B%A5%E5%A1%9E%E6%8E%A7%E5%88%B6)
* [共同筆記 2.0 | 宅學習](https://sls.weco.net/CollectiveNote20)
* [What are some good resources for learning about distributed computing? Why?](https://www.quora.com/What-are-some-good-resources-for-learning-about-distributed-computing-Why#)
* [从事分布式系统、计算、hadoop 等方面工作需要哪些基础？ - 知乎](https://www.zhihu.com/question/19868791)
* [关于“腾讯云用户数据丢失故障”最新公告的一些细节的疑问 - V2EX](https://www.v2ex.com/t/477885#reply88)
* [Dora: Implementing a JIT-compiler with Rust](https://dinfuehr.github.io/blog/dora-implementing-a-jit-compiler-with-rust/)
* [Commentary – GHC](https://ghc.haskell.org/trac/ghc/wiki/Commentary)
* [Shichao's Notes](https://notes.shichao.io/)


### 2018-10-9 - 2018-12-17
* [c - g : std::function initialized with closure type always uses heap all](https://stackoverflow.com/questions/12452022/g-stdfunction-initialized-with-closure-type-always-uses-heap-allocation)
* [ambry LinkedIn 对象存储 论文翻译 | 邹扒皮实验室](https://zou.cool/2018/12/13/ambry/)
* [(80 条消息)cname记录是什么？他存在的意义是什么？ - 知乎](https://www.zhihu.com/question/22916306)
* [Why does Heroku warn against "naked" domain names? - Server Fault](https://serverfault.com/questions/408017/why-does-heroku-warn-against-naked-domain-names)
* [Why use www? - www. is not deprecated](https://www.yes-www.org/why-use-www/)
* [Best Practices for Speeding Up Your Web Site - Yahoo Developer Network](https://developer.yahoo.com/performance/rules.html?guccounter=1#cookie_free)
* [When should one use a 'www' subdomain? - Stack Overflow](https://stackoverflow.com/questions/486621/when-should-one-use-a-www-subdomain)
* [html - DNS prefetching of subdomains - Stack Overflow](https://stackoverflow.com/questions/36920527/dns-prefetching-of-subdomains)
* [An Illustrated Guide to the Kaminsky DNS Vulnerability](http://unixwiz.net/techtips/iguide-kaminsky-dns-vuln.html)
* [DNS 原理入门 - 阮一峰的网络日志](http://www.ruanyifeng.com/blog/2016/06/dns.html)
* [What Is A PTR Record? Do I Need To Create One? - Intermedia Knowledge Base](https://kb.intermedia.net/Article/1317)
* [写给前端工程师的DNS基础知识 | Da'sBlog](http://www.sunhao.win/articles/netwrok-dns.html)
* [Conal Elliott » Can functional programming be liberated from the von Neuman](http://conal.net/blog/posts/can-functional-programming-be-liberated-from-the-von-neumann-paradigm)
* [Circuit complexity - Wikipedia](https://en.wikipedia.org/wiki/Circuit_complexity)
* [Deducing your intentions | Andrzej's C blog](https://akrzemi1.wordpress.com/2018/12/09/deducing-your-intentions/)
* [Stop with the CTAD FUD!](https://vector-of-bool.github.io/2018/12/11/enough-ctad-fud.html)
* [thesis.pdf](http://www.cs.cmu.edu/~ygu1/thesis.pdf)
* [Darwinian data structure selection | the morning paper](https://blog.acolyer.org/2018/12/14/darwinian-data-structure-selection/)
* [linux-block - Linux 4.x block layer tree(s)](http://git.kernel.dk/cgit/linux-block/commit/?h=aio-poll&id=5aeaa1ad235c708e31ad930d1ff6ba6fd39bee91)
* [UTF-8 为什么要这么设计 - V2EX](https://www.v2ex.com/t/517938#reply11)
* [Storing unboxed trait objects in Rust](https://guiand.xyz/blog-posts/unboxed-trait-objects.html)
* [Rust Internals](https://internals.rust-lang.org/)
* [Rust and WebAssembly in 2019](http://fitzgeraldnick.com/2018/12/14/rust-and-webassembly-in-2019.html)
* [In Praise of APL](http://www.jsoftware.com/papers/perlis77.htm)
* [何登成的技术博客 » C/C Volatile关键词深度剖析](http://hedengcheng.com/?p=725)
* [Can a bool read/write operation be not atomic on x86? - Stack Overflow](https://stackoverflow.com/questions/14624776/can-a-bool-read-write-operation-be-not-atomic-on-x86)
* [kernel-tutorial/write_kernel_patch.txt at master · gregkh/kernel-tutorial](https://github.com/gregkh/kernel-tutorial/blob/master/lxf_article/write_kernel_patch.txt)
* [5款最佳Linux桌面环境的优缺点比较 - 51CTO.COM](http://os.51cto.com/art/201507/484482.htm)
* [(80 条消息)openSUSE 的人气为何远不如 Ubuntu 和 Fedora ？ - 知乎](https://www.zhihu.com/question/19690549)
* [Using asynchronous for loops in Python](https://quentin.pradet.me/blog/using-asynchronous-for-loops-in-python.html)
* [How the heck does async/await work in Python 3.5?](https://snarky.ca/how-the-heck-does-async-await-work-in-python-3-5/)
* [Bootstrapping Rust — 2018 — Blog — GuixSD](https://www.gnu.org/software/guix/blog/2018/bootstrapping-rust/)
* [Glibc Heap Exploitation Basics : ptmalloc2 internals (Part 2) - Fast Bins a](https://blog.k3170makan.com/2018/12/glibc-heap-exploitation-basics.html)
* [Gradual Typing: A New Perspective](https://www.irif.fr/~gc/papers/popl19.pdf)
* [Fast goto definition with low memory footprint · Metals](https://scalameta.org/metals/blog/2018/12/12/fast-goto-definition.html)
* [Adventures in JIT compilation: Part 1 - an interpreter - Eli Bendersky's we](https://eli.thegreenplace.net/2017/adventures-in-jit-compilation-part-1-an-interpreter/)
* [Speeding up an Interpreter | Veit's Blog](https://blog.veitheller.de/Speeding_up_an_Interpreter.html)
* [coq - Inductive types carrying proofs - Stack Overflow](https://stackoverflow.com/questions/53787019/inductive-types-carrying-proofs)
* [Exploiting LaTeX with CVE-2018-17407 |](http://nickroessler.com/latex-cve-2018-17407/)
* [ISAM and VSAM - 乐在其中/Leo在其中 - ITeye博客](https://leowzy.iteye.com/blog/1261419)
* [Exploring the .NET Core Runtime (in which I set myself a challenge) · Perfo](http://mattwarren.org/2018/12/13/Exploring-the-.NET-Core-Runtime/)
* [Async in Rust, circa 2018 | Rust Network Services Working Group](https://rust-lang-nursery.github.io/wg-net/2018/12/13/async-update.html)
* [my_bsd_sucks_less_than_yours-AsiaBSDCon2017-paper.pdf](https://www.bsdfrog.org/pub/events/my_bsd_sucks_less_than_yours-AsiaBSDCon2017-paper.pdf)
* [Why use F#? | F# for fun and profit](https://fsharpforfunandprofit.com/why-use-fsharp/)
* [链接分析算法之：HITS算法 - guisu，程序人生。 逆水行舟，不进则退。 - CSDN博客](https://blog.csdn.net/hguisu/article/details/8013489)
* [Tor: Onion Service Protocol](https://www.torproject.org/docs/onion-services)
* [Ben's Blog - Storing C Objects in Distributed Memory](https://people.eecs.berkeley.edu/~brock/blog/storing_cpp_objects.php)
* [Why should I have written ZeroMQ in C, not C (part I) - 250bpm](http://250bpm.com/blog:4)
* [Synchronous vs asynchronous computation in Tensorflow - Stack Overflow](https://stackoverflow.com/questions/34349316/synchronous-vs-asynchronous-computation-in-tensorflow)
* [How does asynchronous training work in distributed Tensorflow? - Stack Over](https://stackoverflow.com/questions/43147435/how-does-asynchronous-training-work-in-distributed-tensorflow)
* [(77 条消息)代码查重是基于什么样的算法，准确度高吗? - 知乎](https://www.zhihu.com/question/27085271)
* [Argument-dependent lookup - cppreference.com](https://en.cppreference.com/w/cpp/language/adl)
* [Reddit - cpp - Unified function call syntax: a case for 'x.f()' finding 'f(](https://www.reddit.com/r/cpp/comments/46s6g0/unified_function_call_syntax_a_case_for_xf/)
* [Win10 18298 的一项史诗级进步 - V2EX](https://www.v2ex.com/t/516456#reply43)
* [An Illustrated Guide to the Kaminsky DNS Vulnerability](http://unixwiz.net/techtips/iguide-kaminsky-dns-vuln.html#shenanigansv1)
* [Understanding Kaminsky's DNS Bug | Linux Journal](https://www.linuxjournal.com/content/understanding-kaminskys-dns-bug)
* [GFW技术评论: 深入理解GFW：DNS污染](http://gfwrev.blogspot.com/2009/11/gfwdns.html)
* [【DNS安全】Kaminsky攻击 - Capricorn.python - 博客园](https://www.cnblogs.com/yd1227/archive/2011/01/26/1945377.html)
* [DNS安全（一）DNS缓存投毒与防护-张舵主-51CTO博客](http://blog.51cto.com/zdzhu/1575498)
* [域名服务器缓存污染 - 维基百科，自由的百科全书](https://zh.wikipedia.org/wiki/%E5%9F%9F%E5%90%8D%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%BC%93%E5%AD%98%E6%B1%A1%E6%9F%93)
* [乔恩·波斯特尔 - 维基百科，自由的百科全书](https://zh.wikipedia.org/wiki/%E5%96%AC%E6%81%A9%C2%B7%E6%B3%A2%E6%96%AF%E7%89%B9%E7%88%BE)
* [c - Difference between boost::unique_lock and boost::upgrade_lock? - Stac](https://stackoverflow.com/questions/9247085/difference-between-boostunique-lock-and-boostupgrade-lock)
* [folly/SharedMutex.h at master · facebook/folly](https://github.com/facebook/folly/blob/master/folly/SharedMutex.h)
* [sql server - How do UPDATE locks prevent a common form of deadlock? - Stack](https://stackoverflow.com/questions/22353327/how-do-update-locks-prevent-a-common-form-of-deadlock)
* [c - Upgrading read lock to write lock without releasing the first in C 1](https://stackoverflow.com/questions/34993983/upgrading-read-lock-to-write-lock-without-releasing-the-first-in-c11)
* [(75 条消息)能通过一张照片(2D)得到3D的模型吗？ - 知乎](https://www.zhihu.com/question/52934069)
* [虚拟化技术概述 - DockOne.io](http://dockone.io/article/1562)
* [(8) Scale By The Bay 2018: Bryan Cantrill, Rust and Other Interesting Thing](https://www.youtube.com/watch?v=2wZ1pCpJUIM)
* [What are the core values of the language(s) you're developing? : Programmin](https://www.reddit.com/r/ProgrammingLanguages/comments/a4vuo3/what_are_the_core_values_of_the_languages_youre/)
* [Comparing Kotlin performance with Graal and C2 - JVM Advent 2018](https://www.javaadvent.com/2018/12/comparing-kotlin-performance-with-graal-and-c2.html)
* [Advent of Kotlin, week 3: SortedList – Kt. Academy](https://blog.kotlin-academy.com/advent-of-kotlin-week-3-sortedlist-2ff49c250aad)
* [lgpage/nbtutor: Visualize Python code execution (line-by-line) in Jupyter N](https://github.com/lgpage/nbtutor)
* [LLVM Weekly - #258, December 10th 2018](http://llvmweekly.org/issue/258)
* [The Front End - Intel's Sandy Bridge Architecture Exposed](https://www.anandtech.com/show/3922/intels-sandy-bridge-architecture-exposed/2)
* [The InterPlanetary File System (IPFS) | Simply Explained & Illustrated](https://achainofblocks.com/2018/10/05/ipfs-interplanetary-file-system-simply-explained/)
* [Fuzz中的javascript大小写特性 | 离别歌](https://www.leavesongs.com/HTML/javascript-up-low-ercase-tip.html)
* [Code-Breaking Puzzles做题记录 – Blog of f1sh](http://f1sh.site/2018/11/25/code-breaking-puzzles%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/)
* [Code Breaking 挑战赛 Writeup](https://paper.seebug.org/755/)
* [CALLBACKS IN C USING TEMPLATE FUNCTORS](http://www.tutok.sk/fastgl/callback.html)
* [sql server - Index Seek vs Index Scan - Database Administrators Stack Excha](https://dba.stackexchange.com/questions/42553/index-seek-vs-index-scan)
* [Introduction to A*](https://www.redblobgames.com/pathfinding/a-star/introduction.html)
* [JIRA is an antipattern | TechCrunch](https://techcrunch.com/2018/12/09/jira-is-an-antipattern/)
* [Plugin API feature requests · Issue #5409 · python/mypy](https://github.com/python/mypy/issues/5409#issuecomment-443549754)
* [Writing a GDB Frame Filter – Bekket McClane – Medium](https://medium.com/@mshockwave/writing-a-gdb-frame-filter-43bef88c9a53)
* [How Does setState Know What to Do? - Overreacted](https://overreacted.io/how-does-setstate-know-what-to-do/)
* [sql server - What are the differences between a clustered and a non-cluster](https://stackoverflow.com/questions/91688/what-are-the-differences-between-a-clustered-and-a-non-clustered-index)
* [Rust 2018 - The Edition Guide](https://rust-lang-nursery.github.io/edition-guide/rust-2018/index.html)
* [flame_chart.cpuprofile - moar profile viewer](https://moar-things.github.io/moar-profile-viewer/)
* [javascript - Detect backspace and del on "input" event? - Stack Overflow](https://stackoverflow.com/questions/9906885/detect-backspace-and-del-on-input-event)
* [StateOfTheArt.ai](https://www.stateoftheart.ai/)
* [sed高级用法：模式空间(pattern space)和保持空间(hold space) - ITsenlin的专栏 - CSDN博客](https://blog.csdn.net/ITsenlin/article/details/21129405)
* [gcc C/C assume no pointer aliasing - Stack Overflow](https://stackoverflow.com/questions/7298546/gcc-c-c-assume-no-pointer-aliasing)
* [c - How to use AVX/SIMD with nested loops and = format? - Stack Overflow](https://stackoverflow.com/questions/37524711/how-to-use-avx-simd-with-nested-loops-and-format)
* [optimization - Can I control register allocation in g ? - Stack Overflow](https://stackoverflow.com/questions/535039/can-i-control-register-allocation-in-g)
* [Higher-kinded generics in Java - Stack Overflow](https://stackoverflow.com/questions/876948/higher-kinded-generics-in-java)
* [What are the deficiencies of the Java/C# type system? - Stack Overflow](https://stackoverflow.com/questions/884391/what-are-the-deficiencies-of-the-java-c-type-system)
* [The Java type system is broken | Hacker News](https://news.ycombinator.com/item?id=17565652)
* [oop - What is the difference between an interface and abstract class? - Sta](https://stackoverflow.com/questions/1913098/what-is-the-difference-between-an-interface-and-abstract-class)
* [Wouter Coekaerts » The Java type system is broken](http://wouter.coekaerts.be/2018/java-type-system-broken)
* [Java generics - why is "extends T" allowed but not "implements T"? - Stack](https://stackoverflow.com/questions/976441/java-generics-why-is-extends-t-allowed-but-not-implements-t)
* [Advanced Traits - The Rust Programming Language](https://doc.rust-lang.org/book/second-edition/ch19-03-advanced-traits.html)
* [Associated Types - The Rust Programming Language](https://doc.rust-lang.org/book/first-edition/associated-types.html)
* [java - How should I have explained the difference between an Interface and](https://stackoverflow.com/questions/18777989/how-should-i-have-explained-the-difference-between-an-interface-and-an-abstract)
* [高性能计算中并行的概念理解 | 英特尔® 软件](https://software.intel.com/zh-cn/blogs/2011/12/02/400009299)
* [TCP/IP协议详解卷一 · 看云](https://www.kancloud.cn/lifei6671/tcp-ip)
* [scala - What are the relationships between Any, AnyVal, AnyRef, Object and](https://stackoverflow.com/questions/2335319/what-are-the-relationships-between-any-anyval-anyref-object-and-how-do-they-m)
* [xkcd: Refresh Types](https://xkcd.com/1854/)
* [python - What is the use case for `pip install -e` - Stack Overflow](https://stackoverflow.com/questions/42609943/what-is-the-use-case-for-pip-install-e)
* [The silent CVE in the heart of Kubernetes apiserver](https://gravitational.com/blog/kubernetes-websocket-upgrade-security-vulnerability/)
* [解读NoSQL技术代表之作Dynamo](https://www.infoq.cn/article/nosql-dynamo)
* [Amazon Dynamo架构分析(一) - 程序园](http://www.voidcn.com/article/p-nkdeelln-yx.html)
* [分布式哈希表DHT和一致性哈希 - jazywoo_在路上 - CSDN博客](https://blog.csdn.net/jazywoo123/article/details/50344119)
* [面向信仰编程](https://draveness.me/)
* [浅谈数据库并发控制 - 锁和 MVCC](https://draveness.me/database-concurrency-control)
* [浅析数据库并发控制机制 | CatKang的博客](http://catkang.github.io/2018/09/19/concurrency-control.html)
* [Dynamo 以及一致性哈希简介 - 小程序 大思想 - CSDN博客](https://blog.csdn.net/21aspnet/article/details/5774228)
* [分布式键值存储 Dynamo 的实现原理](https://draveness.me/dynamo)
* [论文笔记：[SOSP 2007] Dynamo: Amazon's Highly Available Key-value Store - 知乎](https://zhuanlan.zhihu.com/p/34478988)
* [Amazon Dynamo论文阅读笔记 | 桃子的博客志](http://taozj.net/201612/read-note-of-amazon-dynamo.html)
* [分布式系统论文笔记目录 - 知乎](https://zhuanlan.zhihu.com/p/34427903)
* [Debugging a Non Reproducible Crash](https://blog.bam.tech/developper-news/debugging-a-non-reproducible-crash)
* [分布式系统理论基础 - 时间、时钟和事件顺序 - bangerlee - 博客园](http://www.cnblogs.com/bangerlee/p/5448766.html)
* [Zero Day Initiative — Blog](https://www.zerodayinitiative.com/blog)
* [A Late Kernel Bug: Type Confusion in NECP](https://paper.seebug.org/752/)
* [Introduction to Kotlin coroutines](https://www.slideshare.net/elizarov/introduction-to-kotlin-coroutines)
* [fmq-refactoring-c-to-rust.pdf](https://people.gnome.org/~federico/blog/docs/fmq-refactoring-c-to-rust.pdf)
* [Type erasure and reification - Eli Bendersky's website](https://eli.thegreenplace.net/2018/type-erasure-and-reification/)
* [span: the best span](https://brevzin.github.io/c++/2018/12/03/span-best-span/)
* [c - How does =delete on destructor prevents allocation? - Stack Overflow](https://stackoverflow.com/questions/18847739/how-does-delete-on-destructor-prevents-allocation)
* [State of MicroPython universe (was: of micropython-lib?) - MicroPython Foru](https://forum.micropython.org/viewtopic.php?f=2&t=4358)
* [i18next/react-i18next: Internationalization for react done right. Using the](https://github.com/i18next/react-i18next)
* [隐马尔可夫(HMM)、前/后向算法、Viterbi算法 再次总结 - Airship的个人页面 - 开源中国](https://my.oschina.net/airship/blog/1519740)
* [A Prime Opportunity for Ranges | Christopher Di Bella](https://www.cjdb.com.au/a-prime-opportunity-for-ranges)
* [Winnowing算法 - xywlzd的专栏 - CSDN博客](https://blog.csdn.net/xywlzd/article/details/7994924)
* [Winnowing:一种文档指纹的通用算法 - 木精灵的技术博客 - CSDN博客](https://blog.csdn.net/shlazww/article/details/8698558)
* [sigmod.dvi](http://theory.stanford.edu/~aiken/publications/papers/sigmod03.pdf)
* [show_notes - Rust](https://newrustacean.com/show_notes/index.html)
* [Announcing PhysX SDK 4.0, an Open-Source Physics Engine - NVIDIA Developer](https://news.developer.nvidia.com/announcing-physx-sdk-4-0-an-open-source-physics-engine/)
* [The Problem with Threads (2006) [pdf] | Hacker News](https://news.ycombinator.com/item?id=16996668)
* [Thread safe Observer design pattern in Java | TechYourChance](https://www.techyourchance.com/thread-safe-observer-design-pattern-in-java/)
* [glibc 更新导致的段错误排查 - 知乎](https://zhuanlan.zhihu.com/p/51482330)
* [深入浅出 Rust Future - Part 1 - V2EX](https://www.v2ex.com/t/513780#reply0)
* [The errors of TeX](http://texdoc.net/texmf-dist/doc/generic/knuth/errata/errorlog.pdf)
* [How I Wrote a Modern C Library in Rust](https://hsivonen.fi/modern-cpp-in-rust/)
* [syntax across languages (One Big Page)](http://rigaux.org/language-study/syntax-across-languages.html)
* [Is using flexible array members in C bad practice? - Stack Overflow](https://stackoverflow.com/questions/246977/is-using-flexible-array-members-in-c-bad-practice)
* [nginxconfig.io](https://nginxconfig.io/)
* [C Standards Support in GCC - GNU Project - Free Software Foundation (FSF)](https://gcc.gnu.org/projects/cxx-status.html#cxx2a)
* [Programming Language Foundations in Agda](https://plfa.github.io/)
* [python - What do ellipsis [...] mean in a list? - Stack Overflow](https://stackoverflow.com/questions/17160162/what-do-ellipsis-mean-in-a-list)
* [scripting - How to determine if a bash variable is empty? - Server Fault](https://serverfault.com/questions/7503/how-to-determine-if-a-bash-variable-is-empty)
* [if statement - Is double square brackets [[ ]] preferable over single squar](https://stackoverflow.com/questions/669452/is-double-square-brackets-preferable-over-single-square-brackets-in-ba)
* [bash - Scope of Local Variables in Shell Functions - Unix & Linux Stack Exc](https://unix.stackexchange.com/questions/282557/scope-of-local-variables-in-shell-functions)
* [c - Operator Precedence vs Order of Evaluation - Stack Overflow](https://stackoverflow.com/questions/5473107/operator-precedence-vs-order-of-evaluation)
* [What does the Python Ellipsis object do? - Stack Overflow](https://stackoverflow.com/questions/772124/what-does-the-python-ellipsis-object-do)
* [Edwin Brady - Idris 2: Type-driven development of Idris | Code Mesh LDN 18](https://www.youtube.com/watch?v=mOtKD7ml0NU)
* [看来还是有公司喜欢把重要数据用 Base64 “加密”啊... - V2EX](https://www.v2ex.com/t/513457#reply83)
* [Regular Expression Matching with a Trigram Index](https://swtch.com/~rsc/regexp/regexp4.html)
* [reddit: the front page of the internet](https://www.reddit.com/r/Windows10/comments/a27m9c/windows_summarized_shortcut_list_highlighted_ones/)
* [TypeScript in 5 minutes · TypeScript](https://www.typescriptlang.org/docs/handbook/typescript-in-5-minutes.html)
* [隐马尔可夫(HMM)、前/后向算法、Viterbi算法 再次总结 - xueyingxue001的专栏 - CSDN博客](https://blog.csdn.net/xueyingxue001/article/details/52396494)
* [BSD For Linux Users :: Intro](http://www.over-yonder.net/~fullermd/rants/bsd4linux/01)
* [crawshaw - 2018-10-31](https://crawshaw.io/blog/utf7)
* [c - What's the benefit of std::back_inserter over std::inserter? - Stack](https://stackoverflow.com/questions/26307577/whats-the-benefit-of-stdback-inserter-over-stdinserter)
* [Javen Chen's blog - 隐马尔科夫模型（HMM）及其Python实现](https://applenob.github.io/hmm.html)
* [Geometric Tools](https://www.geometrictools.com/)
* [matrixcookbook.pdf](https://www.math.uwaterloo.ca/~hwolkowi/matrixcookbook.pdf)
* [How to design co-programs | Patterns in Functional Programming](https://patternsinfp.wordpress.com/2018/11/21/how-to-design-co-programs/)
* [Go 2, here we come! - The Go Blog](https://blog.golang.org/go2-here-we-come)
* [Welcome to The Linux Kernel’s documentation — The Linux Kernel documentatio](https://www.kernel.org/doc/html/v4.10/index.html)
* [(83 条消息)如何看待 Google 的新操作系统 Fuchsia？ - 知乎](https://www.zhihu.com/question/49535135)
* [Advent of Code 2018](https://adventofcode.com/2018)
* [Markov Random Fields vs Hidden Markov Model - Cross Validated](https://stats.stackexchange.com/questions/246315/markov-random-fields-vs-hidden-markov-model)
* [Simple, Fast, Easy Parallelism in Shell Pipelines](http://catern.com/posts/pipes.html)
* [Where to put the turbofish](https://matematikaadit.github.io/posts/rust-turbofish.html)
* [std::string::String - Rust](https://doc.rust-lang.org/std/string/struct.String.html#method.parse)
* [Namespaced enums are weird in regard to generic paramters · Issue #22486 ·](https://github.com/rust-lang/rust/issues/22486)
* [Grammar](https://doc.rust-lang.org/grammar.html)
* [Rust Quiz #24](https://dtolnay.github.io/rust-quiz/24)
* [lec14.pdf](https://people.engr.ncsu.edu/efg/506/s01/lectures/notes/lec14.pdf)
* [零宽空格 - 维基百科，自由的百科全书](https://zh.wikipedia.org/wiki/%E9%9B%B6%E5%AE%BD%E7%A9%BA%E6%A0%BC)
* [不换行空格 - 维基百科，自由的百科全书](https://zh.wikipedia.org/wiki/%E4%B8%8D%E6%8D%A2%E8%A1%8C%E7%A9%BA%E6%A0%BC)
* [LearnDB :: LearnDB](https://learndb.net/)
* [How we spent two weeks hunting an NFS bug in the Linux kernel | GitLab](https://about.gitlab.com/2018/11/14/how-we-spent-two-weeks-hunting-an-nfs-bug/)
* [leisurelicht/wtfpython-cn: wtfpython的中文翻译/施工结束/ 能力有限，欢迎帮我改进翻译](https://github.com/leisurelicht/wtfpython-cn)
* [Lamport's Logical Clocks](https://mwhittaker.github.io/blog/lamports_logical_clocks/)
* [How can an FPGA outperform a CPU? - Electrical Engineering Stack Exchange](https://electronics.stackexchange.com/questions/101472/how-can-an-fpga-outperform-a-cpu)
* [CatapultTopPicks.pdf](https://people.ece.uw.edu/hauck/publications/CatapultTopPicks.pdf)
* [JTAG - 维基百科，自由的百科全书](https://zh.wikipedia.org/wiki/JTAG)
* [docs/the-book at master · fuchsia-mirror/docs](https://github.com/fuchsia-mirror/docs/tree/master/the-book)
* [Cameron Lonsdale - Automating security and making it more accessible](https://cameronlonsdale.com/2018/11/26/whats-in-a-docker-image/)
* [1000.pdf](https://eprint.iacr.org/2015/1000.pdf)
* [RAM、ROM、SRAM、DRAM、SSRAM、SDRAM、FLASH、EEPROM的区别 - 打个飞机去美国的博客 - CSDN博客](https://blog.csdn.net/dagefeijiqumeiguo/article/details/46314017)
* [(82 条消息)RAM RRAM DRAM三者有什么区别？ - 知乎](https://www.zhihu.com/question/30492703)
* [常见存储器概念辨析：RAM,SRAM,SSRAM、DRAM,SDRAM,DDR SDRAM、ROM,PROM,EPROM,EEPROM,FLASH -](https://blog.csdn.net/acs713/article/details/8139404)
* [常见存储器概念辨析：RAM,SRAM,SSRAM、DRAM,SDRAM,DDR SDRAM、ROM,PROM,EPROM,EEPROM,FLASH -](https://blog.csdn.net/acs713/article/details/8139404)
* [常见存储器概念辨析：RAM,SRAM,SSRAM、DRAM,SDRAM,DDR SDRAM、ROM,PROM,EPROM,EEPROM,FLASH -](https://blog.csdn.net/acs713/article/details/8139404)
* [常见存储器概念辨析：RAM,SRAM,SSRAM、DRAM,SDRAM,DDR SDRAM、ROM,PROM,EPROM,EEPROM,FLASH -](https://blog.csdn.net/acs713/article/details/8139404)
* [Microsoft Word - QDRSARM_RLDRAM article-Ch.doc](http://www.cypress.com/file/101001/download)
* [A Survey of Dynamically Reconfigurable FPGA Devices - ppt download](https://slideplayer.com/slide/3601950/)
* [New – Amazon DynamoDB Transactions | AWS News Blog](https://aws.amazon.com/cn/blogs/aws/new-amazon-dynamodb-transactions/)
* [Basic Graphics Processing Unit (GPU) design concepts](https://iq.opengenus.org/basic-graphics-processing-unit-gpu-design-concepts/)
* [关于 Unikernel，你注意到或没注意到的一些东西 - 简书](https://www.jianshu.com/p/3bb443a6c4f1)
* [Unikernel: 从不入门到入门 - 知乎](https://zhuanlan.zhihu.com/p/29053035)
* [CS 736 Reviews - Spring 2017](http://pages.cs.wisc.edu/~swift/classes/cs736-sp17/blog/)
* [CS 736 - Advanced Operating Systems - Spring 2017 | Main / Lectures](http://pages.cs.wisc.edu/~swift/classes/cs736-sp17/wiki/pmwiki.php/Main/Lectures)
* [Writing to cloud storage as a side effect in cloud dataflow - Stack Overflo](https://stackoverflow.com/questions/30698364/writing-to-cloud-storage-as-a-side-effect-in-cloud-dataflow)
* [c - Implicit type conversion with template - Stack Overflow](https://stackoverflow.com/questions/9787593/implicit-type-conversion-with-template)
* [放在 template class 里面的 friend binary-operator 和 放在外面的相同实现的 operator 在传参数上有什么](https://www.v2ex.com/t/511698#reply6)
* [(1) I don't know what to say. · Issue #116 · dominictarr/event-stream](https://github.com/dominictarr/event-stream/issues/116)
* [Implementing a fast multi-threaded counter.](http://pminkov.github.io/blog/implementing-a-fast-multi-threaded-counter.html)
* [Are sloppy counters used in the production-level distributed systems enviro](https://www.quora.com/Are-sloppy-counters-used-in-the-production-level-distributed-systems-environments)
* [What do you legally “own” with Bitcoin? A short introduction to krypto-prop](https://prestonbyrne.com/2018/11/23/krypto_property/)
* [(1) Matt Godbolt (2018-06-27) - Memory and Caches - YouTube](https://www.youtube.com/watch?v=vDns3Um39l0&feature=youtu.be)
* [Every 7.8μs your computer’s memory has a hiccup](https://blog.cloudflare.com/every-7-8us-your-computers-memory-has-a-hiccup/)
* [assembly - Why does gcc push %rbx at the beginning of main? - Stack Overflo](https://stackoverflow.com/questions/12736437/why-does-gcc-push-rbx-at-the-beginning-of-main)
* [glibc/sysdeps/x86_64/multiarch at master · lattera/glibc · GitHub](https://github.com/lattera/glibc/tree/master/sysdeps/x86_64/multiarch)
* [The C Annotations](http://www.icce.rug.nl/documents/cplusplus/)
* [rationals.dvi](https://www.cs.ox.ac.uk/jeremy.gibbons/publications/rationals.pdf)
* [Errata Security: Some notes about HTTP/3](https://blog.erratasec.com/2018/11/some-notes-about-http3.html#.W_ictLFKiUk)
* [variant and optional should propagate copy/move triviality](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/p0602r4.html)
* [Valueless Variants Considered Harmful](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2016/p0308r0.html)
* [harmful.pptx](https://www.cis.upenn.edu/~bcpierce/papers/harmful-mfps.pdf)
* [How I format my C papers – Michael Park](https://mpark.github.io/programming/2018/11/16/how-i-format-my-cpp-papers/)
* [进程隐藏与进程保护（SSDT Hook 实现）（一） - 小宝马的爸爸 - 博客园](https://www.cnblogs.com/BoyXiao/archive/2011/09/03/2164574.html)
* [win 64 SSDT HOOK - freesec - 博客园](https://www.cnblogs.com/freesec/p/7617752.html)
* [KernelMode Rootkits: Part 1, SSDT hooks - Adlice Software](https://www.adlice.com/kernelmode-rootkits-part-1-ssdt-hooks/)
* [常用的外部排序方法 - wl044090432的博客 - CSDN博客](https://blog.csdn.net/wl044090432/article/details/54693322)
* [Container Linux on the Desktop - Google Slides](https://docs.google.com/presentation/d/17Hml1iFqdXElxOcrh9caQSC5px5mDgaS015Vhaz42ZY/preview?slide=id.g22bc0b7901_0_555)
* [c - Why do some people use swap for move assignments? - Stack Overflow](https://stackoverflow.com/questions/6687388/why-do-some-people-use-swap-for-move-assignments)
* [c - Swapping with rvalues - Stack Overflow](https://stackoverflow.com/questions/18942438/swapping-with-rvalues)
* [c - Nice way to append a vector to itself - Stack Overflow](https://stackoverflow.com/questions/17636690/nice-way-to-append-a-vector-to-itself)
* [c - What is the advantage of using universal references in range-based fo](https://stackoverflow.com/questions/13130708/what-is-the-advantage-of-using-universal-references-in-range-based-for-loops/13130795#13130795)
* [Concurrency Glossary](https://slikts.github.io/concurrency-glossary/)
* [斯坦福 CS228 概率图模型中文讲义 四、贝叶斯网络 - 人工智能 - 掘金](https://juejin.im/entry/5a9a5ccaf265da238b7d7680)
* [概率图模型之贝叶斯网络 - 知乎](https://zhuanlan.zhihu.com/p/30139208)
* [Rust 语言中文网络内容建设 - V2EX](https://www.v2ex.com/t/509424#reply4)
* [What is your least favorite thing about Haskell in 2018?](https://medium.com/@snoyjerk/least-favorite-thing-about-haskal-ef8f80f30733)
* [neural networks - What is a Dynamic Computational Graph? - Artificial Intel](https://ai.stackexchange.com/questions/3801/what-is-a-dynamic-computational-graph)
* [ROP小结](https://paper.seebug.org/444/)
* [noexcept(auto)? : cpp](https://www.reddit.com/r/cpp/comments/9ygb73/noexceptauto/)
* [GPU编程--CPU和GPU的设计区别 - 作业部落 Cmd Markdown 编辑阅读器](https://www.zybuluo.com/w1992wishes/note/1129621)
* [Extending optionals in Swift — Swift by Sundell](https://www.swiftbysundell.com/posts/extending-optionals-in-swift)
* [AMD Discloses Initial Zen 2 Details – WikiChip Fuse](https://fuse.wikichip.org/news/1815/amd-discloses-initial-zen-2-details/)
* [(71 条消息)关于CPU流水线 多发射 超标量 CPU微码 之间 的关系和原理? - 知乎](https://www.zhihu.com/question/66374524)
* [What is the difference between the superscalar and super pipelined approach](https://www.quora.com/What-is-the-difference-between-the-superscalar-and-super-pipelined-approaches)
* [x86 - what are the reasons for virtualising these instructions? - Stack Ove](https://stackoverflow.com/questions/47644648/what-are-the-reasons-for-virtualising-these-instructions)
* [Bringing Virtualization to the x86 Architecture with the Original VMware Wo](http://www.cs.columbia.edu/~cdall/candidacy/pdf/Bugnion2012.pdf)
* ["Meltdown"是什么？ - 知乎](https://zhuanlan.zhihu.com/p/33621030)
* [GObject对象系统](https://www.ibm.com/developerworks/cn/linux/l-gobject/index.html)
* [UKL: A Unikernel Based on Linux – now Next](https://next.redhat.com/2018/11/14/ukl-a-unikernel-based-on-linux/)
* [(4) The era of intermediate languages | LinkedIn](https://www.linkedin.com/pulse/era-intermediate-languages-vincent-hindriksen/)
* [Reimplementing llvm-gcc as a gcc plugin](https://llvm.org/devmtg/2009-10/Sands_LLVMGCCPlugin.pdf)
* [Time-Travel Debugging in PANDA | Tack, Hunt, Pool](https://raywang.tech/2018/11/14/Time-Travel-Debugging-in-PANDA/)
* [The Power of Web Components - Mozilla Hacks - the Web developer blog](https://hacks.mozilla.org/2018/11/the-power-of-web-components/)
* [SOLVING THE METACLASS CONFLICT « Python recipes « ActiveState Code](http://code.activestate.com/recipes/204197/)
* [Troy Hunt: Beyond Passwords: 2FA, U2F and Google Advanced Protection](https://www.troyhunt.com/beyond-passwords-2fa-u2f-and-google-advanced-protection/)
* [learning - Are these SQL concepts for beginners, intermediate, or advanced](https://softwareengineering.stackexchange.com/questions/181651/are-these-sql-concepts-for-beginners-intermediate-or-advanced-developers)
* [c - Why use select() instead of sleep()? - Stack Overflow](https://stackoverflow.com/questions/3125645/why-use-select-instead-of-sleep)
* [PageRank算法 - guisu，程序人生。 逆水行舟，不进则退。 - CSDN博客](https://blog.csdn.net/hguisu/article/details/7996185)
* [c - How large should my recv buffer be when calling recv in the socket libr](https://stackoverflow.com/questions/2862071/how-large-should-my-recv-buffer-be-when-calling-recv-in-the-socket-library)
* [mongodb - How does Mongo's eventual consistency work with a large number of](https://stackoverflow.com/questions/33589380/how-does-mongos-eventual-consistency-work-with-a-large-number-of-data-writes)
* [replication - How to achieve strong consistency in MongoDB Replica Sets? -](https://stackoverflow.com/questions/38026553/how-to-achieve-strong-consistency-in-mongodb-replica-sets)
* [FAQ | MongoDB](https://www.mongodb.com/faq#consistency)
* [Chris's Wiki :: blog/unix/RawTtyInputThenAndNow](https://utcc.utoronto.ca/~cks/space/blog/unix/RawTtyInputThenAndNow)
* [The Consistency of Arithmetic](http://timothychow.net/consistent.pdf)
* [Rendered Insecure: GPU Side Channel Attacks are Practical](http://www.cs.ucr.edu/~zhiyunq/pub/ccs18_gpu_side_channel.pdf)
* [SecDev18.pdf](http://web.mit.edu/ha22286/www/papers/SecDev18.pdf)
* [Hadoop学习资源集合-博客-云栖社区-阿里云](https://yq.aliyun.com/articles/47860?utm_campaign=wenzhang&utm_medium=article&utm_source=QQ-qun&utm_content=m_10342)
* [DBMS Musings: Distributed consistency at scale: Spanner vs. Calvin](http://dbmsmusings.blogspot.com/2017/04/distributed-consistency-at-scale.html)
* [Babel · The compiler for next generation JavaScript](https://babeljs.io/)
* [C2x – Jens Gustedt's Blog](https://gustedt.wordpress.com/2018/11/12/c2x/)
* [Receiver operating characteristic - Wikipedia](https://en.wikipedia.org/wiki/Receiver_operating_characteristic)
* [How to process textual data using TF-IDF in Python – freeCodeCamp.org](https://medium.freecodecamp.org/how-to-process-textual-data-using-tf-idf-in-python-cd2bbc0a94a3)
* [Loopholes that are forbidden by default - Programming Puzzles & Code Golf M](https://codegolf.meta.stackexchange.com/questions/1061/loopholes-that-are-forbidden-by-default)
* [hadoop - Difference between Pig and Hive? Why have both? - Stack Overflow](https://stackoverflow.com/questions/3356259/difference-between-pig-and-hive-why-have-both?rq=1)
* [hadoop - Apache Tez architecture Explanation - Stack Overflow](https://stackoverflow.com/questions/25521363/apache-tez-architecture-explanation)
* [List of important publications in computer science - Wikipedia](https://en.wikipedia.org/wiki/List_of_important_publications_in_computer_science)
* [About Pool Sizing · brettwooldridge/HikariCP Wiki](https://github.com/brettwooldridge/HikariCP/wiki/About-Pool-Sizing)
* [Bartek's coding blog: The Amazing Performance of C 17 Parallel Algorithms,](https://www.bfilipek.com/2018/11/parallel-alg-perf.html)
* [Systems Conferences by Deadline - computer systems, operating systems, comp](http://www.cs.technion.ac.il/~dan/index_sysvenues_deadline.html)
* [XSStrike](https://somdev.me/XSStrike/)
* [vmware/cascade: A Just-In-Time Compiler for Verilog](https://github.com/vmware/cascade)
* [Uniform Function Call Syntax - Wikipedia](https://en.wikipedia.org/wiki/Uniform_Function_Call_Syntax)
* [算法：关于生成抽样随机数的这些算法 - 大鱼 - CSDN博客](https://blog.csdn.net/lemon_tree12138/article/details/50378102)
* [TL;DR for #CppSan - HackMD](https://hackmd.io/s/H19sHNB67)
* [Linkers and Loaders](https://www.iecc.com/linker/)
* [After NLL: Moving from borrowed data and the sentinel pattern](http://smallcultfollowing.com/babysteps/blog/2018/11/10/after-nll-moving-from-borrowed-data-and-the-sentinel-pattern/)
* [2018 San Diego ISO C Committee Trip Report (Ranges v1 TS for C 20; conse](https://www.reddit.com/r/cpp/comments/9vwvbz/2018_san_diego_iso_c_committee_trip_report_ranges/)
* [Luxburg07_tutorial_4488[0].pdf](http://www.kyb.mpg.de/fileadmin/user_upload/files/publications/attachments/Luxburg07_tutorial_4488%5b0%5d.pdf)
* [/Users/vitaly/Documents/papers/symbex/selective/ASPLOS_2011/Data/Graphs/Con](https://cseweb.ucsd.edu/~dstefan/cse291-fall16/papers/s2e-annotated.pdf)
* [mayhem-oakland-12.pdf](https://users.ece.cmu.edu/~aavgerin/papers/mayhem-oakland-12.pdf)
* [Cheat sheet for Intel Processor Trace with Linux perf and gdb at Andi Kleen](http://halobates.de/blog/p/410)
* [Making floating point math highly efficient for AI hardware - Facebook Code](https://code.fb.com/ai-research/floating-point-math/)
* [Surprisingly Turing-Complete - Gwern.net](https://www.gwern.net/Turing-complete#how-many-computers-are-in-your-computer)
* [Using a Keras Long Short-Term Memory (LSTM) Model to Predict Stock Prices](https://heartbeat.fritz.ai/using-a-keras-long-shortterm-memory-lstm-model-to-predict-stock-prices-a08c9f69aa74)
* [How do I write a null (no-op) contextmanager in Python? - Stack Overflow](https://stackoverflow.com/questions/45187286/how-do-i-write-a-null-no-op-contextmanager-in-python)
* [Nmap Cheat Sheet](https://highon.coffee/blog/nmap-cheat-sheet/)
* [redo, buildroot, and serializing parallel logs - apenwarr](https://apenwarr.ca/log/20181106)
* [How We Built a Cost-Based SQL Optimizer | Cockroach Labs](https://www.cockroachlabs.com/blog/building-cost-based-sql-optimizer/)
* [elttam - Ruby 2.x Universal RCE Deserialization Gadget Chain](https://www.elttam.com.au/blog/ruby-deserialization/)
* [Design Review: Key-Value Storage](https://mozilla.github.io/firefox-browser-architecture/text/0015-rkv.html)
* [Nmap Cheat Sheet and Pro Tips | HackerTarget.com](https://hackertarget.com/nmap-cheatsheet-a-quick-reference-guide/)
* [Issue 17404: ValueError: can't have unbuffered text I/O for io.open(1, 'wt'](https://bugs.python.org/issue17404)
* [Common Misconceptions of C – Hacker Noon](https://hackernoon.com/common-misconceptions-of-c-4f49f36b92a)
* [Sort Benchmark Home Page](http://sortbenchmark.org/)
* [称硬币问题、小白鼠找毒药问题与编码理论 - 朝花夕拾](https://neozhaoliang.github.io/post/coin-and-coding-theory/)
* [SMT Solving on an iPhone — James Bornholt](https://homes.cs.washington.edu/~bornholt/post/z3-iphone.html)
* [谱聚类（spectral clustering）原理总结 - 刘建平Pinard - 博客园](https://www.cnblogs.com/pinard/p/6221564.html)
* [聚类Agglomerative Clustering 及其三种方法Single-linkage、Complete-linkage，Group aver](https://blog.csdn.net/M1M1M16/article/details/79415871)
* [Martin Nyx Brain 的 Twitter: “In alphabetical order from SMT-COMP 18, let's](https://twitter.com/ciphernyx/status/1059489269050470400)
* [javascript - What is the difference between asm.js and WebAssembly? - Stack](https://stackoverflow.com/questions/31502563/what-is-the-difference-between-asm-js-and-webassembly)
* [c - Why can pointer chasing in double-linked list avoid cache thrashing (se](https://stackoverflow.com/questions/28556289/why-can-pointer-chasing-in-double-linked-list-avoid-cache-thrashing-self-evicti)
* [Of Algebirds, Monoids, Monads, and other Bestiary for Large-Scale Data Anal](http://www.michael-noll.com/blog/2013/12/02/twitter-algebird-monoid-monad-for-large-scala-data-analytics/)
* [What’s Hiding in Your PDF? | Inside PSPDFKit](https://pspdfkit.com/blog/2018/whats-hiding-in-your-pdf/)
* [stacksort](http://gkoberger.github.io/stacksort/)
* [mapreduce - Reduce is called several times with the same key in mongodb map](https://stackoverflow.com/questions/19252830/reduce-is-called-several-times-with-the-same-key-in-mongodb-map-reduce)
* [Thread by @Foone: "It is 2018 and this error message is a mistake from 1974](https://threadreaderapp.com/thread/1058676834940776450.html)
* [New Hardware for Massive Neural Networks](https://papers.nips.cc/paper/22-new-hardware-for-massive-neural-networks.pdf)
* [Intel CPUs fall to new hyperthreading exploit that pilfers crypto keys | Ar](https://arstechnica.com/information-technology/2018/11/intel-cpus-fall-to-new-hyperthreading-exploit-that-pilfers-crypto-keys/)
* [Python - how can I dynamically remove a method from a class -- i.e. opposit](https://stackoverflow.com/questions/16700958/python-how-can-i-dynamically-remove-a-method-from-a-class-i-e-opposite-of)
* [(81 条消息)序列预测问题，CNN、RNN各有什么优势？ - 知乎](https://www.zhihu.com/question/265948599)
* [GitHub Incident Analysis Shows How to Improve Service Reliability](https://www.infoq.com/news/2018/11/github-incident-analysis)
* [Fabric学习笔记-PBFT算法 - 知乎](https://zhuanlan.zhihu.com/p/34346665)
* [(81 条消息)请教技术大牛，pbft是不是区块链目前最优的共识机制？ - 知乎](https://www.zhihu.com/question/55794026)
* [共识算法系列之一：raft和pbft算法 - 知乎](https://zhuanlan.zhihu.com/p/35847127)
* [(81 条消息)你有哪些deep learning（rnn、cnn）调参的经验？ - 知乎](https://www.zhihu.com/question/41631631)
* [CMU CS 课程介绍【一亩三分地论坛院系介绍版】 -](https://www.1point3acres.com/bbs/thread-210509-1-1.html)
* [数据库学习笔记：索引，B tree，动态hash表 - 简书](https://www.jianshu.com/p/dd509bd1e10c)
* [线性哈希-line hash - jackydai987的专栏 - CSDN博客](https://blog.csdn.net/jackydai987/article/details/6673063)
* [聊一聊深度学习的activation function - 知乎](https://zhuanlan.zhihu.com/p/25110450)
* [【机器学习算法系列之三】简述多种降维算法 | 听见下雨的声音](https://chenrudan.github.io/blog/2016/04/01/dimensionalityreduction.html#3.7)
* [lvm raid1 还是 btrfs raid1 - V2EX](https://www.v2ex.com/t/503132#reply15)
* [Kernel RCE caused by buffer overflow in Apple's ICMP packet-handling code (](https://lgtm.com/blog/apple_xnu_icmp_error_CVE-2018-4407)
* [聊一聊深度学习的weight initialization - 知乎](https://zhuanlan.zhihu.com/p/25110150)
* [Recursivity: The Strangest Book on the Theory of Computation](http://recursed.blogspot.com/2009/07/strangest-book-on-theory-of-computation.html)
* [HTTP/2 Server Push 详解（下） | AlloyTeam](http://www.alloyteam.com/2017/04/guide-http2-server-push-part2/)
* [HTTP/2 Server Push 详解（上） | AlloyTeam](http://www.alloyteam.com/2017/04/guide-http2-server-push-part1/)
* [A Comprehensive Guide To HTTP/2 Server Push — Smashing Magazine](https://www.smashingmagazine.com/2017/04/guide-http2-server-push/)
* [python - Print in terminal with colors? - Stack Overflow](https://stackoverflow.com/questions/287871/print-in-terminal-with-colors)
* [EECS 582: Advanced Operating Systems (F’16) | Mosharaf Chowdhury](https://www.mosharaf.com/eecs582-f16/)
* [EECS 582: Advanced Operating Systems (W’16) | Mosharaf Chowdhury](https://www.mosharaf.com/eecs582-w16/)
* [Cache coherence - Wikipedia](https://en.wikipedia.org/wiki/Cache_coherence)
* [What's the difference between the message passing and shared memory concurr](https://stackoverflow.com/questions/1853284/whats-the-difference-between-the-message-passing-and-shared-memory-concurrency)
* [Arun Kishan: Inside Windows 7 - Farewell to the Windows Kernel Dispatcher L](https://channel9.msdn.com/Shows/Going+Deep/Arun-Kishan-Farewell-to-the-Windows-Kernel-Dispatcher-Lock)
* [Python, counter atomic increment - Stack Overflow](https://stackoverflow.com/questions/23547604/python-counter-atomic-increment)
* [Thread Synchronization Mechanisms in Python](http://effbot.org/zone/thread-synchronization.htm)
* [A thread safe implementation of singleton pattern in Python. Based on torna](https://gist.github.com/werediver/4396488)
* [(80 条消息)怎样理解阻塞非阻塞与同步异步的区别？ - 知乎](https://www.zhihu.com/question/19732473)
* [asynchronous vs non-blocking - Stack Overflow](https://stackoverflow.com/questions/2625493/asynchronous-vs-non-blocking)
* [Incomplete List of Mistakes in the Design of CSS [CSS Working Group Wiki]](https://wiki.csswg.org/ideas/mistakes)
* [What's your top 5 favorite talks from CppCon 2018? : cpp](https://www.reddit.com/r/cpp/comments/9qyumu/whats_your_top_5_favorite_talks_from_cppcon_2018/)
* [A new Thread with C 20: std::jthread - ModernesCpp.com](http://www.modernescpp.com/index.php/a-new-thread-with-c-20-std-jthread)
* [YouTube](https://www.youtube.com/watch?v=iwJpxWHuZQY&feature=youtu.be&a)
* [John Regehr 的 Twitter: “SSI by @cscottnet is one of my favorite compiler Ph](https://twitter.com/johnregehr/status/1054922202972282882)
* [虚继承 - 维基百科，自由的百科全书](https://zh.wikipedia.org/wiki/%E8%99%9A%E7%BB%A7%E6%89%BF)
* [c - Why is Default constructor called in virtual inheritance? - Stack Ove](https://stackoverflow.com/questions/9907722/why-is-default-constructor-called-in-virtual-inheritance)
* [英特尔 SGX 基础介绍 - 常见问题| 阿里云](https://www.alibabacloud.com/help/zh/faq-detail/89859.htm)
* [firmware-anatomy/sgx.md at master · hardenedlinux/firmware-anatomy](https://github.com/hardenedlinux/firmware-anatomy/blob/master/notes/sgx.md)
* [state_harmful/state_harmful.md at master · rootkovska/state_harmful](https://github.com/rootkovska/state_harmful/blob/master/state_harmful.md)
* [State considered harmful](https://blog.invisiblethings.org/papers/2015/state_harmful.pdf)
* [/sci/ - Math & Science Wiki | FANDOM powered by Wikia](http://mathsci.wikia.com/wiki//sci/_-_Science_%26_Math_Resources)
* [Introduction to the ELF Format (Part VI) : More Relocation tricks - r_adden](https://blog.k3170makan.com/2018/10/introduction-to-elf-format-part-vi-more.html)
* [How do I copy a file in Python? - Stack Overflow](https://stackoverflow.com/questions/123198/how-do-i-copy-a-file-in-python)
* [multithreading - thread safe python dictionaries? - Stack Overflow](https://stackoverflow.com/questions/17866250/thread-safe-python-dictionaries)
* [8\. Compound statements — Python 3.7.1 documentation](https://docs.python.org/3/reference/compound_stmts.html#the-try-statement)
* [A Beginner's Guide To Understanding Convolutional Neural Networks – Adit De](https://adeshpande3.github.io/A-Beginner%27s-Guide-To-Understanding-Convolutional-Neural-Networks/)
* [What is the best layer in CNN from which we can extract features glober and](https://www.quora.com/What-is-the-best-layer-in-CNN-from-which-we-can-extract-features-glober-and-loacl)
* [卷积神经网络新手指南之二 | 雷锋网](https://www.leiphone.com/news/201608/GBJqHBnfDhq22qpD.html)
* [CNN中卷积层的计算细节 - 知乎](https://zhuanlan.zhihu.com/p/29119239)
* [(80 条消息)关于外部排序的疑惑？ - 知乎](https://www.zhihu.com/question/53872224)
* [mapreduce - When do reduce tasks start in Hadoop? - Stack Overflow](https://stackoverflow.com/questions/11672676/when-do-reduce-tasks-start-in-hadoop)
* [Microsoft PowerPoint - algorithms.ppt](https://courses.cs.washington.edu/courses/cse490h/08au/lectures/algorithms.pdf)
* [(80 条消息)操作系统课讲64位系统而不是32位，哪些概念会完全不同？哪些不会有什么变化？ - 知乎](https://www.zhihu.com/question/38558918)
* [srop_sp14.pdf](https://www.cs.vu.nl/~herbertb/papers/srop_sp14.pdf)
* [rop/jop攻击与防御最新研究进展 | Index of Computer System and Security](https://www.csyssec.org/20170504/ropjop-research/)
* [ROP Chain. How to Defend from ROP Attacks (Basic Example)](https://www.apriorit.com/dev-blog/434-rop-exploit-protection)
* [Bartek's coding blog: Five Awesome C Papers for San Diego](https://www.bfilipek.com/2018/10/papers-sandiego.html)
* [Writing an OS in Rust](https://os.phil-opp.com/)
* [[论文笔记]Tensorflow White Paper | 萧爽楼](https://blog.ddlee.cn/posts/75be00ae/)
* [De Bruijn sequence - Wikipedia](https://en.wikipedia.org/wiki/De_Bruijn_sequence)
* [Find first set - Wikipedia](https://en.wikipedia.org/wiki/Find_first_set#FFS)
* [nt.number theory - Using the de Bruijn sequence to find the $lceillog_2 v r](https://cstheory.stackexchange.com/questions/19524/using-the-de-bruijn-sequence-to-find-the-lceil-log-2-v-rceil-of-an-integer)
* [debruijn.pdf](http://supertech.csail.mit.edu/papers/debruijn.pdf)
* [Bit Twiddling Hacks](http://graphics.stanford.edu/~seander/bithacks.html)
* [cpp-taskflow/cpp-taskflow: Fast C Parallel Programming with Task Dependen](https://github.com/cpp-taskflow/cpp-taskflow)
* [Hindley-Milner with top-level existentials : Inside 245-5D](http://blog.ezyang.com/2016/04/hindley-milner-with-top-level-existentials/)
* [language agnostic - What is an existential type? - Stack Overflow](https://stackoverflow.com/questions/292274/what-is-an-existential-type)
* [黑客如何攻破一个网站？图文讲解全流程 - IT程序猿](https://www.itcodemonkey.com/article/2699.html)
* [Non-blocking algorithm - Wikipedia](https://en.wikipedia.org/wiki/Non-blocking_algorithm)
* [DistributedSystem/ds.md at master · JerryYangSH/DistributedSystem](https://github.com/JerryYangSH/DistributedSystem/blob/master/ds.md)
* [(80 条消息)wait-free是指什么？ - 知乎](https://www.zhihu.com/question/295904223)
* [(80 条消息)求推荐Lock-Free 算法相关论文？ - 知乎](https://www.zhihu.com/question/23705245)
* [透过 Linux 内核看无锁编程](https://www.ibm.com/developerworks/cn/linux/l-cn-lockfree/index.html)
* [(80 条消息)同态加密的实现原理是什么？在实际中有何应用？ - 知乎](https://www.zhihu.com/question/27645858)
* [Alchemy: A Language and Compiler forHomomorphic Encryption Made easY](http://web.eecs.umich.edu/~cpeikert/pubs/alchemy.pdf)
* [Efficient AVL Tree in C# - Bitlush](https://bitlush.com/blog/efficient-avl-tree-in-c-sharp)
* [(80 条消息)代码使用std::thread，使用-static -lpthread静态编译后，运行段错误的问题？ - 知乎](https://www.zhihu.com/question/263630790/answer/271262912)
* [java - Interview question - Search in sorted array X for index i such that](https://stackoverflow.com/questions/4172580/interview-question-search-in-sorted-array-x-for-index-i-such-that-xi-i)
* [Cancelling Nested Kotlin Coroutines With CoroutineScope](https://codinginfinite.com/android-kotlin-coroutinescope-example/)
* [Wiki - PortingCToRust](https://wiki.alopex.li/PortingCToRust)
* [c - Is errno thread-safe? - Stack Overflow](https://stackoverflow.com/questions/1694164/is-errno-thread-safe)
* [(80 条消息)分布式数据库中为什么要使用 Vector Clock？ - 知乎](https://www.zhihu.com/question/19994133)
* [分布式系统中的时间、时钟和事件顺序 - 黑客画家的个人空间 - 开源中国](https://my.oschina.net/fileoptions/blog/1821958)
* [Google NewSQL之Spanner - 简书](https://www.jianshu.com/p/cbdf895f9019)
* [麦子迈 | 数据库死锁处理](http://www.wzxue.com/%E6%95%B0%E6%8D%AE%E5%BA%93%E6%AD%BB%E9%94%81%E5%A4%84%E7%90%86/)
* [c - Why is Google's TrueTime API hard to duplicate? - Stack Overflow](https://stackoverflow.com/questions/18384883/why-is-googles-truetime-api-hard-to-duplicate)
* [Challenges With Google's Cloud Spanner - DZone Database](https://dzone.com/articles/challenges-with-googles-cloud-spanner)
* [深入理解乐观锁与悲观锁-HollisChuang's Blog](http://www.hollischuang.com/archives/934)
* [Log-structured merge-tree - Wikipedia](https://en.wikipedia.org/wiki/Log-structured_merge-tree)
* [Blog - Levy's Ink](https://levy.at/blog)
* [Google File System及其继任者Colossus @ Blog - Levy's Ink](https://levy.at/blog/22)
* [c - What does it mean when one says something is SFINAE-friendly? - Stack](https://stackoverflow.com/questions/35033306/what-does-it-mean-when-one-says-something-is-sfinae-friendly)
* [分布式系统领域经典论文翻译集 – duanple](http://duanple.com/?p=170)
* [duanple – 银河里的星星](http://duanple.com/)
* [分布式系统领域经典论文翻译集 - tianlongtc的博客 - CSDN博客](https://blog.csdn.net/tianlongtc/article/details/81166702)
* [Spanner 论文笔记 | Life is magic. Coding is art.](http://int64.me/2017/Spanner%20%E8%AE%BA%E6%96%87%E7%AC%94%E8%AE%B0.html)
* [布隆过滤器(Bloom Filter)的原理和实现 - cpselvis - 博客园](https://www.cnblogs.com/cpselvis/p/6265825.html)
* [Google 黑板报: 数学之美系列二十一 － 布隆过滤器（Bloom Filter）](https://china.googleblog.com/2007/07/bloom-filter_7469.html)
* [GFS - The Google File System - fxjwind - 博客园](https://www.cnblogs.com/fxjwind/archive/2012/07/17/2595494.html)
* [How does Google File System's concurrent append exactly work? - Quora](https://www.quora.com/How-does-Google-File-Systems-concurrent-append-exactly-work)
* [Update on Structured Concurrency - 250bpm](http://250bpm.com/blog:137)
* [P1039R0: I got you, FAM: Flexible Array Members for C](https://htmlpreview.github.io/?https://github.com/ThePhD/future_cxx/blob/master/papers/d1039.html)
* [Towards fearless SIMD | Raph Levien’s blog](https://raphlinus.github.io/rust/simd/2018/10/19/fearless-simd.html)
* [summary](http://yphsummary.blogspot.com/)
* [papers-notebook/README.md at master · gaocegege/papers-notebook](https://github.com/gaocegege/papers-notebook/blob/master/README.md)
* [The story of ispc: origins (part 1)](https://pharr.org/matt/blog/2018/04/18/ispc-origins.html)
* [The Intel 9th Gen Review: Core i9-9900K, Core i7-9700K and Core i5-9600K Te](https://www.anandtech.com/print/13400/intel-9th-gen-core-i9-9900k-i7-9700k-i5-9600k-review)
* [c - When is static cast safe when you are using multiple inheritance? - S](https://stackoverflow.com/questions/7789326/when-is-static-cast-safe-when-you-are-using-multiple-inheritance)
* [c - Multiple inheritance casting from base class to different derived cla](https://stackoverflow.com/questions/7426422/multiple-inheritance-casting-from-base-class-to-different-derived-class)
* [An opinionated guide to Haskell in 2018](https://lexi-lambda.github.io/blog/2018/02/10/an-opinionated-guide-to-haskell-in-2018/)
* [A Guide to GHC's Extensions - Jannis' Word Discounter](https://limperg.de/ghc-extensions/)
* [Hacker News](http://hn.premii.com/#/comments/18253994)
* [Systems, not Programs](https://shalabh.com/programmable-systems/systems-not-programs.html)
* [Welcome_to_DNS-final.pdf](https://indico.dns-oarc.net/event/29/contributions/658/attachments/641/1039/Welcome_to_DNS-final.pdf)
* [MaiaVictor/Free-Haskell-Books: A curated collection of free eBooks about Ha](https://github.com/MaiaVictor/Free-Haskell-Books)
* [MaiaVictor/Formality: An efficient programming language and proof assistant](https://github.com/MaiaVictor/Formality)
* [域前置 - 维基百科，自由的百科全书](https://zh.wikipedia.org/wiki/%E5%9F%9F%E5%89%8D%E7%BD%AE)
* [隐匿的攻击之-Domain Fronting-博客-云栖社区-阿里云](https://yq.aliyun.com/articles/220464)
* [Simplifying Domain Fronting – Tim MalcomVetter – Medium](https://medium.com/@malcomvetter/simplifying-domain-fronting-8d23dcb694a0)
* [Google kills off domain fronting – and so secure comms just got tougher • T](https://www.theregister.co.uk/2018/04/19/google_domain_fronting/)
* [awesomeport/google-cloud-tech.md at master · memect/awesomeport](https://github.com/memect/awesomeport/blob/master/awesome/google-cloud-tech.md)
* [GIFEE/GIFEE: Google's Infrastructure for Everyone Else](https://github.com/GIFEE/GIFEE)
* [Big Data and Google's Three Papers I - GFS and MapReduce | Bowen's blog](https://bowenli86.github.io/2016/10/23/distributed%20system/data/Big-Data-and-Google-s-Three-Papers-I-GFS-and-MapReduce/)
* [Windows Kernel Internals - Microsoft Tech Community](https://techcommunity.microsoft.com/t5/Windows-Kernel-Internals/bg-p/WindowsKernelInternals)
* [One Windows Kernel - Microsoft Tech Community - 267142](https://techcommunity.microsoft.com/t5/Windows-Kernel-Internals/One-Windows-Kernel/ba-p/267142)
* [Introducing the Windows Internals Series: One Windows Kernel - Windows Insi](https://insider.windows.com/en-us/articles/introducing-the-windows-internals-series-one-windows-kernel/)
* [The 13 application areas where OpenCL and CUDA can be used - StreamHPC](https://streamhpc.com/blog/2013-06-03/the-application-areas-opencl-and-cuda-can-be-used/)
* [An Introduction to GPU Programming in Julia - Nextjournal](https://nextjournal.com/sdanisch/julia-gpu-programming)
* [Is Rust functional?](https://www.fpcomplete.com/blog/2018/10/is-rust-functional)
* [DLLs in Visual C](https://msdn.microsoft.com/en-us/library/1ez7dh12.aspx?f=255&MSPPError=-2147217396)
* [Google File System - 知乎](https://zhuanlan.zhihu.com/p/28155582)
* [Akra–Bazzi method - Wikipedia](https://en.wikipedia.org/wiki/Akra%E2%80%93Bazzi_method)
* [Generator for integer partitions « Python recipes « ActiveState Code](http://code.activestate.com/recipes/218332-generator-for-integer-partitions/)
* [c - C 11 auto: what if it gets a constant reference? - Stack Overflow](https://stackoverflow.com/questions/7138588/c11-auto-what-if-it-gets-a-constant-reference)
* [ustclug/hackergame2018-writeups: Write-ups for hackergame 2018](https://github.com/ustclug/hackergame2018-writeups)
* [tao-of-rust 0.1.0 - Docs.rs](https://docs.rs/crate/tao-of-rust/0.1.0/source/)
* [c - assigning true/false to std::string: what's going on? - Stack Overflo](https://stackoverflow.com/questions/9670854/assigning-true-false-to-stdstring-whats-going-on)
* [图着色算法详解 - chenglinhust的专栏 - CSDN博客](https://blog.csdn.net/chdhust/article/details/9138333#t6)
* [wait3(), wait4() -- wait for process to terminate or stop](https://www.mkssoftware.com/docs/man3/wait3.3.asp)
* [C exception handling internals | An infinite monkey - Nicolas Brailovsky'](https://monoinfinito.wordpress.com/series/exception-handling-in-c/)
* [Cheat-Sheets — Malware Archaeology](https://www.malwarearchaeology.com/cheat-sheets/)
* [Semiconductor Engineering .:. RISC-V: More Than a Core](https://semiengineering.com/risc-v-more-than-a-core/)
* [Multithreading Architecture | Synthesis Lectures on Computer Architecture](https://www.morganclaypool.com/doi/abs/10.2200/S00458ED1V01Y201212CAC021)
* [Testing Memory Allocators: ptmalloc2 vs tcmalloc vs hoard vs jemalloc While](http://ithare.com/testing-memory-allocators-ptmalloc2-tcmalloc-hoard-jemalloc-while-trying-to-simulate-real-world-loads/)
* [c - how to move all pairs from one std::map to another - Stack Overflow](https://stackoverflow.com/questions/9585083/how-to-move-all-pairs-from-one-stdmap-to-another)
* [c - std::move(key) while iterating over unordered_map? - Stack Overflow](https://stackoverflow.com/questions/52069004/stdmovekey-while-iterating-over-unordered-mapstring-string)
* [c - What is the fastest way to change a key of an element inside std::map](https://stackoverflow.com/questions/5743545/what-is-the-fastest-way-to-change-a-key-of-an-element-inside-stdmap)
* [YSLib/NPL.txt at master · FrankHB/YSLib](https://github.com/FrankHB/YSLib/blob/master/doc/NPL.txt)
* [Shell operators (control operators and redirection operators) · altescape/d](https://github.com/altescape/dotfiles/wiki/Shell-operators-(control-operators-and-redirection-operators))
* [Notes on Type Layouts and ABIs in Rust](https://gankro.github.io/blah/rust-layouts-and-abis/)
* [Rust has a static garbage collector](https://words.steveklabnik.com/borrow-checking-escape-analysis-and-the-generational-hypothesis)
* [What are variable annotations in Python 3.6? - Stack Overflow](https://stackoverflow.com/questions/39971929/what-are-variable-annotations-in-python-3-6)
* [用Control.Dsl代替Monad](https://zhuanlan.zhihu.com/p/46014989)
* [Rust语言中文社区-首页](https://rust.cc/)
* [More C Idioms/Nifty Counter - Wikibooks, open books for an open world](https://en.wikibooks.org/wiki/More_C%2B%2B_Idioms/Nifty_Counter)
* [Generics in C#, Java, and C](https://www.artima.com/intv/generics.html)
* [UnKnoWnCheaTs - Multiplayer Game Hacks and Cheats](https://www.unknowncheats.me/forum/index.php)
* [c - std::initializer_list not able to be deduced from - Stack Overflow](https://stackoverflow.com/questions/35230920/stdinitializer-list-not-able-to-be-deduced-from-brace-enclosed-initializer-li)
* [c - Emplacement of a vector with initializer list - Stack Overflow](https://stackoverflow.com/questions/24550924/emplacement-of-a-vector-with-initializer-list)
* [x86 平台 Paging Mode | Zay's Blog](http://zay.pub/2017/09/12/x86%20%E5%B9%B3%E5%8F%B0%20Paging%20Mode/)
* [4FordJohnson.pdf](http://www.mat.unb.br/~ayala/4FordJohnson.pdf)
* [Sorting network - Wikipedia](https://en.wikipedia.org/wiki/Sorting_network)
* [用 template 產生 Bose-Nelson Sorting Network @ novus log :: 痞客邦 ::](http://novus.pixnet.net/blog/post/34042185-%E7%94%A8-template-%E7%94%A2%E7%94%9F-bose-nelson-sorting-network)
* [c - Very fast sorting of fixed length arrays using comparator networks -](https://stackoverflow.com/questions/19790522/very-fast-sorting-of-fixed-length-arrays-using-comparator-networks)
* [Sorting Networks | Dr Dobb's](http://www.drdobbs.com/sorting-networks/184402663?pgno=2)
* [Network Sort](https://gertjans.home.xs4all.nl/usenet/microsoft.public.sqlserver.programming/Network%20Sort.htm)
* [Optimizing a Sort Function](https://gist.github.com/amonakov/1de8c395f544e4d65ade63e0b9f50395)
* [Linux Hardware Reviews, Open-Source Benchmarks & Linux Performance - Phoron](https://www.phoronix.com/scan.php?page=home)
* [主页 - Mohanson](http://accu.cc/)
* [The Illustrated TLS Connection: Every Byte Explained](https://tls.ulfheim.net/)
* [Asterisks in Python: what they are and how to use them - Trey Hunner](http://treyhunner.com/2018/10/asterisks-in-python-what-they-are-and-how-to-use-them/)
* [Polly - Polyhedral optimizations for LLVM](https://polly.llvm.org/)
* [Copying Objects in JavaScript ― Scotch](https://scotch.io/bar-talk/copying-objects-in-javascript#toc-the-naive-way-of-copying-objects)
* [React Lifecycle Methods- how and when to use them – Code == Life](https://engineering.musefind.com/react-lifecycle-methods-how-and-when-to-use-them-2111a1b692b1)
* [非动态，也非静态，Ruby3 Typing 的第三条路 - 文斯雜談凸^-^凸](http://kamiiyu.github.io/blog/2016/11/30/ruby3-typing/)
* [渐进类型是什么？ - Ditro](http://deathking.github.io/2015/04/10/what-is-gradual-typing/)
* [Visitor Pattern](https://zhuanlan.zhihu.com/p/35987864)
* [tagless final style](https://zhuanlan.zhihu.com/p/20834962)
* [From Object Algebras to Finally Tagless Interpreters | Oleksandr Manzyuk's](https://oleksandrmanzyuk.wordpress.com/2014/06/18/from-object-algebras-to-finally-tagless-interpreters-2/)
* [lecture.pdf](http://okmij.org/ftp/tagless-final/course/lecture.pdf)
* [Typed tagless-final interpretations: Lecture notes](http://okmij.org/ftp/tagless-final/course/#lecture)
* [数位DP小结 « Mio's Blog](http://k-on.logdown.com/posts/2015/04/16/260681)
* [Found in translation: FloydHub](https://blog.floydhub.com/language-translator/)
* [A Rust FFI adventure in unsafety | Travis Finkenauer](https://travisf.net/capstone-rs-unsafety-adventure)
* [c - How to remove constness of const_iterator? - Stack Overflow](https://stackoverflow.com/questions/765148/how-to-remove-constness-of-const-iterator)
* [Protobuffers Are Wrong :: Reasonably Polymorphic](http://reasonablypolymorphic.com/blog/protos-are-wrong/)
* [Awesome Search](https://awesomelists.top/)
* [Awesome Search](https://awesomelists.top/#/repos/qazbnm456/awesome-cve-poc)
* [qazbnm456/awesome-cve-poc: ✍️ A curated list of CVE PoCs.](https://github.com/qazbnm456/awesome-cve-poc)
* [What's a CPU to do when it has nothing to do? [LWN.net]](https://lwn.net/SubscriberLink/767630/594421f913c3d00a/)
* [c - Are free operator->* overloads evil? - Stack Overflow](https://stackoverflow.com/questions/2696864/are-free-operator-overloads-evil)
* [A Case Study in Heaptrack - speice.io](https://speice.io/2018/10/case-study-optimization.html)
* [Hunting for Bugs in Rust](https://blog.troutwine.us/2018/10/08/hunting-for-bugs-in-rust/)
* [ResourceT: A necessary evil](https://www.fpcomplete.com/blog/2018/10/resourcet-necessary-evil)
* [Bracket pattern - HaskellWiki](https://wiki.haskell.org/Bracket_pattern)
* [RAII is better than the bracket pattern](https://www.snoyman.com/blog/2018/10/raii-better-than-bracket-pattern)
* [Programming as interaction: A new perspective for programming language rese](http://tomasp.net/blog/2018/programming-interaction/)
* [Realmode Assembly - Writing bootable stuff - Part 1 - Programming - 0x00sec](https://0x00sec.org/t/realmode-assembly-writing-bootable-stuff-part-1/2901)
* [Why Optional References Didn’t Make It In C 17 : cpp](https://www.reddit.com/r/cpp/comments/9mdd6q/why_optional_references_didnt_make_it_in_c17/)
* [Why Optional References Didn't Make It In C 17 - Fluent C](https://www.fluentcpp.com/2018/10/05/pros-cons-optional-references/)
* [Inline Functions In C](http://www.greenend.org.uk/rjk/tech/inline.html)
* [c - extern inline - Stack Overflow](https://stackoverflow.com/questions/216510/extern-inline)
* [C 之那些年踩过的坑（二） | Alinshans's world](http://www.alinshans.com/2017/05/23/p1705231/)
* [c - static variables in an inlined function - Stack Overflow](https://stackoverflow.com/questions/185624/static-variables-in-an-inlined-function)
* [Promise 对象 - ECMAScript 6入门](http://es6.ruanyifeng.com/#docs/promise)
* [第 7 章: Hindley-Milner 类型签名 · JS 函数式编程指南](https://llh911001.gitbooks.io/mostly-adequate-guide-chinese/content/ch7.html#%E8%87%AA%E7%94%B1%E5%AE%9A%E7%90%86)
* [Announcing "trivially relocatable" : cpp](https://www.reddit.com/r/cpp/comments/906gzo/announcing_trivially_relocatable/)
* [D1144R0: Object relocation in terms of move plus destroy](https://quuxplusone.github.io/blog/code/object-relocation-in-terms-of-move-plus-destroy-draft-7.html)
* [Trivially Relocatable FAQ – Arthur O'Dwyer – Stuff mostly about C](https://quuxplusone.github.io/blog/2018/10/04/trivially-relocatable-faq/)
* [Current State of the Lifetime Checker : cpp](https://www.reddit.com/r/cpp/comments/8zle4k/current_state_of_the_lifetime_checker/)
* [A prototype implementation of 'auto' NSDMI's for exploration purposes (clan](https://groups.google.com/a/isocpp.org/forum/#!msg/std-proposals/MDyiiVR8J-s/w_hzTl056FcJ)
* [The case for Auto Non-Static Data Member Initializers | cor3ntin](https://cor3ntin.github.io/posts/auto_nsdmi/)


### 2018-12-18 - 2018-12-22
* [Raw String Literals Removed From Java 12 as Feature Set Frozen](https://www.infoq.com/news/2018/12/jdk-12-new-features)
* [How to Version Control Jupyter Notebooks - Nextjournal](https://nextjournal.com/schmudde/how-to-version-control-jupyter)
* [Hacker News](http://hn.premii.com/#/comments/18740939)
* [operator delete, operator delete[] - cppreference.com](https://en.cppreference.com/w/cpp/memory/new/operator_delete)
* [GHC.Prim](http://hackage.haskell.org/package/ghc-prim-0.5.3/docs/GHC-Prim.html)
* [ReadingList – GHC](https://ghc.haskell.org/trac/ghc/wiki/ReadingList)
* [A Haskell Implementation Reading List](http://www.stephendiehl.com/posts/essential_compilers.html)
* [Towards a theory of software development expertise | the morning paper](https://blog.acolyer.org/2018/12/21/towards-a-theory-of-software-development-expertise/)
* [mahmoud/awesome-python-applications: ? Free software that works great, whic](https://github.com/mahmoud/awesome-python-applications)
* [(10) Vitaly Bragilevsky - Type Theory Behind Glasgow Haskell Compiler Inter](https://www.youtube.com/watch?list=PLvPsfYrGz3wspkm6LVEjndvQqK6SkcXaT&v=2bPRvmoIGi0)
* [For 2019, which conferences are you planning to attend, or would like to at](https://www.reddit.com/r/linuxadmin/comments/a8e1wt/for_2019_which_conferences_are_you_planning_to/)
* [Procedural Macros in Rust 2018 | Rust Blog](https://blog.rust-lang.org/2018/12/21/Procedural-Macros-in-Rust-2018.html)
* [Emplacement and perfect forwarding : rust](https://www.reddit.com/r/rust/comments/2wstbh/emplacement_and_perfect_forwarding/)
* [std::make_shared, std::make_shared_default_init - cppreference.com](https://en.cppreference.com/w/cpp/memory/shared_ptr/make_shared#Notes)
* [c - Differences between std::make_unique and std::unique_ptr with new - S](https://stackoverflow.com/questions/22571202/differences-between-stdmake-unique-and-stdunique-ptr-with-new)
* [p0145r3.pdf](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2016/p0145r3.pdf)
* [c - Why use std::make_unique in c 17? - Stack Overflow](https://stackoverflow.com/questions/53870522/why-use-stdmake-unique-in-c17)
* [Mathias Hasselmann ??? 的 Twitter: “… ”](https://twitter.com/taschenorakel/status/1076268644726947841)
* [The Linux Documentation Project: Guides](https://www.tldp.org/guides.html)
* [The Linux Documentation Project: document listing](https://www.tldp.org/HOWTO/pdf/)
* [Stub files — Mypy 0.660 dev.bb0017db6a90de0997f566e504ffe719b695a95c.dirty](https://mypy.readthedocs.io/en/latest/stubs.html)
* [atiyah20thcentury.pdf](http://www.math.tamu.edu/~rojas/atiyah20thcentury.pdf)
* [Chakra 引擎中 JIT 编译优化过程中的数组类型混淆漏洞分析](https://paper.seebug.org/768/)
* [PEP 8 -- Style Guide for Python Code | Python.org](https://www.python.org/dev/peps/pep-0008/#code-lay-out)
* [Template Haskell tutorial](https://markkarpov.com/tutorial/th.html)
* [Template Haskell Is Not Scary](https://www.parsonsmatt.org/2015/11/15/template_haskell.html)
* [Announcing Rust 1.31.1 | Rust Blog](https://blog.rust-lang.org/2018/12/20/Rust-1.31.1.html)
* [TNbook.dvi](http://pi.math.cornell.edu/~hatcher/TN/TNbook.pdf)
* [Prior 、Posterior 和 Likelihood 的理解与几种表达方式 - kww_kww - CSDN博客](https://blog.csdn.net/kww_kww/article/details/52527888)
* [Freestanding and hosted implementations - cppreference.com](https://en.cppreference.com/w/cpp/freestanding)
* [ferrucc.io | Everything I've learned in 10 years of Blogging](https://ferrucc.io/posts/starting-a-blog/)
* [haskell - ConstraintKinds explained on a super simple example - Stack Overf](https://stackoverflow.com/questions/31317159/constraintkinds-explained-on-a-super-simple-example)
* [Kwang's Haskell Blog - Constraint Kinds](https://kseo.github.io/posts/2017-01-13-constraint-kinds.html)
* [7.11. The Constraint kind](https://downloads.haskell.org/~ghc/7.6.2/docs/html/users_guide/constraint-kind.html)
* [duoergun0729/1book: 《Web安全之机器学习入门》](https://github.com/duoergun0729/1book)
* [Out-of-Process Debugger for C in Visual Studio 2019 | Visual C Team Blo](https://blogs.msdn.microsoft.com/vcblog/2018/12/18/out-of-process-debugger-for-c-in-visual-studio-2019/)
* [硕士毕业不能做DS？CMU MS data scientist找工经验【一亩三分地论坛数据科学版】 - 手机版](https://www.1point3acres.com/bbs/forum.php?mod=viewthread&tid=466418&fromguid=hot&extra=&mobile=2)
* [go-internals-cn/go-internals: Chinese Translation of https://github.com/teh](https://github.com/go-internals-cn/go-internals)
* [go-internals - Go Internals](https://cmc.gitbook.io/go-internals/)
* [teh-cmc/go-internals: A book about the internals of the Go programming lang](https://github.com/teh-cmc/go-internals)
* [gnzlbg/static_vector: A dynamically-resizable vector with fixed capacity an](https://github.com/gnzlbg/static_vector)
* [Go Modules in 2019 - The Go Blog](https://blog.golang.org/modules2019)
* [The Little Printf](https://ferd.ca/the-little-printf.html)
* [c - Using the make command without makefiles? - Stack Overflow](https://stackoverflow.com/questions/15745241/using-the-make-command-without-makefiles)
* [GNU make](https://www.gnu.org/software/make/manual/make.html#Catalogue-of-Rules)
* [c - Why does makefile automatically generate object file(*.o) without any s](https://stackoverflow.com/questions/34859338/why-does-makefile-automatically-generate-object-file-o-without-any-specific-r)
* [Python gets a new governance model [LWN.net]](https://lwn.net/SubscriberLink/775105/5db16cfe82e78dc3/)
* [c - std::thread cause deadlock in DLLMain - Stack Overflow](https://stackoverflow.com/questions/32252143/stdthread-cause-deadlock-in-dllmain)
* [Loader Lock引起的一个Bug - 太阳落雨 - CSDN博客](https://blog.csdn.net/CJF_iceKing/article/details/40043569)
* [[ub] launder and aliasing](http://www.open-std.org/pipermail/ub/2016-February/000565.html)
* [reinterpret_cast conversion - cppreference.com](https://en.cppreference.com/w/cpp/language/reinterpret_cast)
* [static_cast conversion - cppreference.com](https://en.cppreference.com/w/cpp/language/static_cast#pointer-interconvertible)
* [Type - cppreference.com](https://en.cppreference.com/w/c/language/type)
* [c - What is the strict aliasing rule? - Stack Overflow](https://stackoverflow.com/questions/98650/what-is-the-strict-aliasing-rule)
* [c - Does reinterpret_casting std::aligned_storage* to T* without std::lau](https://stackoverflow.com/questions/47735657/does-reinterpret-casting-stdaligned-storage-to-t-without-stdlaunder-violat)
* [c - Does this really break strict-aliasing rules? - Stack Overflow](https://stackoverflow.com/questions/27003727/does-this-really-break-strict-aliasing-rules)
* [Type-punning and strict-aliasing - Qt Blog](http://blog.qt.io/blog/2011/06/10/type-punning-and-strict-aliasing/)
* [Core Issue 1776: Replacement of class objects containing reference members](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2015/p0137r0.html)
* [c - When convert a void pointer to a specific type pointer, which casting](https://stackoverflow.com/questions/5013596/when-convert-a-void-pointer-to-a-specific-type-pointer-which-casting-symbol-is)
* [c - Aliasing T* with char* is allowed. Is it also allowed the other way a](https://stackoverflow.com/questions/12612488/aliasing-t-with-char-is-allowed-is-it-also-allowed-the-other-way-around)
* [c - What is the rationale for limitations on pointer arithmetic or compar](https://stackoverflow.com/questions/47616508/what-is-the-rationale-for-limitations-on-pointer-arithmetic-or-comparison)
* [Small Object Optimization for Polymorphic Types](http://stlab.cc/tips/small-object-optimizations.html)
* [c - How does std::launder affect containers? - Stack Overflow](https://stackoverflow.com/questions/40165022/how-does-stdlaunder-affect-containers)
* [Jakub Jelinek - [C PATCH] __builtin_launder](https://gcc.gnu.org/ml/libstdc++/2016-10/msg00194.html)
* [std::launder: the most obscure new feature of C 17 · miyuki's blog](https://miyuki.github.io/2016/10/21/std-launder.html)
* [c - What is the purpose of std::launder? - Stack Overflow](https://stackoverflow.com/questions/39382501/what-is-the-purpose-of-stdlaunder)
* [std::launder - cppreference.com](https://en.cppreference.com/w/cpp/utility/launder)
* [c - Casting a char array to an object pointer - is this UB? - Stack Overf](https://stackoverflow.com/questions/51231757/casting-a-char-array-to-an-object-pointer-is-this-ub)
* [请问大佬们下面这样的代码是 UB 么？ - V2EX](https://www.v2ex.com/t/518707#reply1)
* [MangaEditor - 一个漫画编辑器 - 知乎](https://zhuanlan.zhihu.com/p/27563287)
* [kspp.pdf](https://outflux.net/slides/2018/lca/kspp.pdf)
* [a13xp0p0v/linux-kernel-defence-map: Linux Kernel Defence Map](https://github.com/a13xp0p0v/linux-kernel-defence-map)
* [SAT/SMT by example](https://yurichev.com/writings/SAT_SMT_by_example.pdf)
* [Making ReactOS Great Again*, Part 1 - KernelMode.info](http://www.kernelmode.info/forum/viewtopic.php?f=11&t=5302)
* [Intel VISA: Through the Rabbit Hole - Black Hat Asia 2019 | Briefings Sched](https://www.blackhat.com/asia-19/briefings/schedule/index.html#intel-visa-through-the-rabbit-hole-13513)
* [doc/MetricsTimeline – Tor Bug Tracker & Wiki](https://trac.torproject.org/projects/tor/wiki/doc/MetricsTimeline)
* [Ugliest…repository…conversion…ever | Armed and Dangerous](http://esr.ibiblio.org/?p=5634)
* [Easy-To-Read Summary of Important AI Research Papers of 2018](https://www.topbots.com/most-important-ai-research-papers-2018/)
* [⚙ D44824 [Spectre] Introduce a new pass to do speculative load hardening to](https://reviews.llvm.org/D44824)
* [Speculative Load Hardening - Google Docs](https://docs.google.com/document/d/1wwcfv3UV9ZnZVcGiGuoITT_61e_Ko3TmoCS3uXLcJR0/edit#heading=h.phdehs44eom6)
* [[llvm-dev] RFC: Speculative Load Hardening (a Spectre variant #1 mitigation](https://lists.llvm.org/pipermail/llvm-dev/2018-March/122085.html)
* [Richard Biener - Spectre V1 diagnostic / mitigation](https://gcc.gnu.org/ml/gcc/2018-12/msg00113.html)
* [Meaning of # in haskell? : haskellquestions](https://www.reddit.com/r/haskellquestions/comments/a7f21h/meaning_of_in_haskell/)
* [Did anybody consider adding a language pragma to C ? : cpp](https://www.reddit.com/r/cpp/comments/a7bx7n/did_anybody_consider_adding_a_language_pragma_to_c/)
* [Load balancer and session management - Stack Overflow](https://stackoverflow.com/questions/27332312/load-balancer-and-session-management)
* [[python-committers] Python governance vote (December 2018): Results](https://mail.python.org/pipermail/python-committers/2018-December/006479.html)
* [PEP 8016 -- The Steering Council Model | Python.org](https://www.python.org/dev/peps/pep-8016/)
* [Mozilla exec says Google slowed YouTube down on non-Chrome browsers - CNET](https://www.cnet.com/news/mozilla-exec-says-google-slowed-youtube-down-on-non-chrome-browsers/)
* ["For example, they may start integrating technologies for which they have e](https://news.ycombinator.com/item?id=18697824)
* [virtualization - What's the differences between Xen, QEMU and KVM? - Stack](https://stackoverflow.com/questions/10307323/whats-the-differences-between-xen-qemu-and-kvm/35803798#35803798)
* [compiler construction - How is match implemented in a language like Rust? -](https://stackoverflow.com/questions/36920427/how-is-match-implemented-in-a-language-like-rust)
* [[Stabilization] Pin APIs · Issue #55766 · rust-lang/rust](https://github.com/rust-lang/rust/issues/55766#issuecomment-439055811)
* [consensus](https://www2.cs.duke.edu/courses/fall07/cps212/consensus.pdf)
* [多线程可以同时使用 CPU 的多个核心？ - V2EX](https://www.v2ex.com/t/285551)
* [python - Nested arguments not compiling - Stack Overflow](https://stackoverflow.com/questions/10607293/nested-arguments-not-compiling)
* [Interactive Beginner's Guide to ROP -- Vetle's HackShack](https://bordplate.no/blog/en/post/interactive-rop-tutorial/index.html)
* [Arrow syntax](https://www.haskell.org/arrows/syntax.html)
* [Equal (=) Vs left arrow (](https://stackoverflow.com/questions/28624408/equal-vs-left-arrow-symbols-in-haskell)
* [syntax across languages per language](http://rigaux.org/language-study/syntax-across-languages-per-language/)
* [Capitalization Rules](http://wiki.c2.com/?CapitalizationRules)
* [UACME/README.md at master · zodiacon/UACME](https://github.com/zodiacon/UACME/blob/master/README.md)
* [After NLL: Interprocedural conflicts](http://smallcultfollowing.com/babysteps/blog/2018/11/01/after-nll-interprocedural-conflicts/)
* [After NLL: Moving from borrowed data and the sentinel pattern](http://smallcultfollowing.com/babysteps/blog/2018/11/10/after-nll-moving-from-borrowed-data-and-the-sentinel-pattern/)
* [有熟悉 TCP4 次挥手的么？请教一个昨天遇到的问题 - V2EX](https://www.v2ex.com/t/518496#reply18)
* [Neural networks as Ordinary Differential Equations](https://rkevingibson.github.io/blog/neural-networks-as-ordinary-differential-equations/)
* [Rust Analyzer in 2018 and 2019](https://ferrous-systems.com/blog/rust-analyzer-2019/)
* [orzz.org() » C 的杂七杂八：宏（Macro）的各种玩法](http://orzz.org/cxx-macro-play/#comment-236)
* [为防采集，如何将 URL 中的自增数字 id 换成无规律字符串？ - V2EX](https://www.v2ex.com/t/518127#reply80)
* [Hashids - generate short unique ids from integers](https://hashids.org/)
* [A Gentle Introduction to Erasure Codes](https://www.akalin.com/intro-erasure-codes)
* [Linux 系统运行命令报错，貌似磁盘坏了，这种情况还有救嘛 - V2EX](https://www.v2ex.com/t/518397#reply11)
* [https://stackoverflow.com/questions/4023320/how-to-implement-memmove-in-standard-c-without-an-intermediate-copy/4023563#4023563](https://stackoverflow.com/questions/4023320/how-to-implement-memmove-in-standard-c-without-an-intermediate-copy/4023563#4023563)
* [Git quick statistics :chart_with_upwards_trend: | Lukáš Mešťan](https://lukasmestan.com/git-quick-stats/)
* [The LLVM Foundation](http://llvm.org/foundation/relicensing/)

### 2018-12-23 - 2019-01-13

* [Hindsight on Advent of Code 2018 – phaazon.net](https://phaazon.net/blog/aoc-18-hindsight)
* [Learning Rust With Entirely Too Many Linked Lists](http://cglab.ca/~abeinges/blah/too-many-lists/book/)
* [CDSChecker: Checking Concurrent Data Structures Written with C/C Atomics](http://demsky.eecs.uci.edu/publications/c11modelcheck.pdf)
* [cncppcon2018-cppmodules/About-Cpp-Modules.md at master · mutouyun/cncppcon2](https://github.com/mutouyun/cncppcon2018-cppmodules/blob/master/About-Cpp-Modules.md)
* [C 异常安全的思考 - IceCrystals - 博客园](https://www.cnblogs.com/zgfLawliet/p/3417308.html)
* [Abstraction without overhead: traits in Rust | Rust Blog](https://blog.rust-lang.org/2015/05/11/traits.html)
* [(9 条消息)怎么理解kmp算法中的next数组? - 知乎](https://www.zhihu.com/question/21474082)
* [Send and Sync -](https://doc.rust-lang.org/beta/nomicon/send-and-sync.html)
* [Does unsafe Rust have strict aliasing rules? : rust](https://www.reddit.com/r/rust/comments/73x370/does_unsafe_rust_have_strict_aliasing_rules/)
* [Coercions -](https://doc.rust-lang.org/nomicon/coercions.html)
* [Variance in Rust – kennytm – Medium](https://medium.com/@kennytm/variance-in-rust-964134dd5b3e)
* [b树和b 树的区别 - login_sonata的博客 - CSDN博客](https://blog.csdn.net/login_sonata/article/details/75268075)
* [Why are recursive struct types illegal in Rust? - Stack Overflow](https://stackoverflow.com/questions/25296195/why-are-recursive-struct-types-illegal-in-rust)
* [~ is being removed from Rust : programming](https://www.reddit.com/r/programming/comments/24kcl4/is_being_removed_from_rust/)
* [‘~’ is being removed from Rust | Hacker News](https://news.ycombinator.com/item?id=7687351)
* [haskell - Polymorphic recursion - syntax and uses? - Stack Overflow](https://stackoverflow.com/questions/40247339/polymorphic-recursion-syntax-and-uses)
* [Error: parameter `T` is never used [E0392], but I use it - The Rust Program](https://users.rust-lang.org/t/error-parameter-t-is-never-used-e0392-but-i-use-it/5673)
* [Rust complains about unused type parameter which is only used to parameteri](https://github.com/rust-lang/rust/issues/23246)
* [Define an alias type/trait within a Struct - help - The Rust Programming La](https://users.rust-lang.org/t/define-an-alias-type-trait-within-a-struct/5796)
* [DC3算法理解记录_success_新浪博客](http://blog.sina.com.cn/s/blog_79dfe12701017566.html)
* [The DC3 Algorithm Made Simple | Spencer Carroll](http://spencer-carroll.com/the-dc3-algorithm-made-simple/)
* [1610.08305.pdf](https://arxiv.org/pdf/1610.08305.pdf)
* [后缀数组学习笔记 | Menci's Blog](https://oi.men.ci/suffix-array-notes/)
* [知乎问答：编程语言的类型系统为何如此重要？](https://www.zhihu.com/question/23434097/answer/43057230?utm_source=com.ideashower.readitlater.pro&utm_medium=social&utm_oi=831107418380447744)
* [Understanding Rust Lifetimes – NEAR Protocol – Medium](https://medium.com/nearprotocol/understanding-rust-lifetimes-e813bcd405fa)
* [lhmouse/MCF: Meta-purpose C Foundation](https://github.com/lhmouse/MCF)
* [FrankHB/YSLib: The YSLib Project (main hg-git mirror) (NOTE: The README doc](https://github.com/FrankHB/YSLib)
* [lhmouse/asteria: The Asteria Programming Language](https://github.com/lhmouse/asteria)
* [Add stubs for cython to typeshed · Issue #1826 · cython/cython](https://github.com/cython/cython/issues/1826)
* [python - Type annotations for *args and **kwargs - Stack Overflow](https://stackoverflow.com/questions/37031928/type-annotations-for-args-and-kwargs)
* [python - Create .pyi files automatically? - Stack Overflow](https://stackoverflow.com/questions/35602541/create-pyi-files-automatically)
* [python - mypy spurious error: "module" has no attribute "XPath" with etree](https://stackoverflow.com/questions/39382937/mypy-spurious-error-module-has-no-attribute-xpath-with-etree#39382937)
* [python/typeshed: Collection of library stubs for Python, with static types](https://github.com/python/typeshed)
* [FAQ · cython/cython Wiki](https://github.com/cython/cython/wiki/FAQ#what-is-the-difference-between-a-pxd-and-pxi-file-when-should-either-be-used)
* [www.open-std.org/jtc1/sc22/wg21/docs/papers/2016/p0024r2.html](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2016/p0024r2.html)
* [Chapter 1. Status](https://gcc.gnu.org/onlinedocs/libstdc++/manual/status.html#status.iso.2017)
* [c - Are C 17 Parallel Algorithms implemented already? - Stack Overflow](https://stackoverflow.com/questions/51031060/are-c17-parallel-algorithms-implemented-already)
* [std::hardware_destructive_interference_size, std::hardware_constructive_int](https://en.cppreference.com/w/cpp/thread/hardware_destructive_interference_size)
* [intel/parallelstl](https://github.com/intel/parallelstl)
* [ionescu007/hdk: (unofficial) Hyper-V® Development Kit](https://github.com/ionescu007/hdk)
* [SIGGRAPH2007_AlphaTestedMagnification.pdf](https://steamcdn-a.akamaihd.net/apps/valve/2007/SIGGRAPH2007_AlphaTestedMagnification.pdf)
* [如何在LaTeX数学模式中更好地使用粗体？ - 知乎](https://www.zhihu.com/question/25290041/answer/30422583)
* [Visual Studio 2017 Throughput Improvements and Advice | Visual C Team Blo](https://blogs.msdn.microsoft.com/vcblog/2018/01/04/visual-studio-2017-throughput-improvements-and-advice/)
* [⚙ D47196 [Time-report ](2): Recursive timers in Clang](https://reviews.llvm.org/D47196)
* [demangle d2cgsummary output - Developer Community](https://developercommunity.visualstudio.com/content/problem/181010/demangle-d2cgsummary-output.html)
* [The Unlambda Programming Language](http://www.madore.org/~david/programs/unlambda/#howto_bool%E3%80%82)
* [Investigating compile times, and Clang -ftime-report · Aras' website](http://aras-p.info/blog/2019/01/12/Investigating-compile-times-and-Clang-ftime-report/)
* [Say NO to Venn Diagrams When Explaining JOINs – Java, SQL and jOOQ.](https://blog.jooq.org/2016/07/05/say-no-to-venn-diagrams-when-explaining-joins/)
* [函数式语言的编译优化 - 知乎](https://zhuanlan.zhihu.com/p/19994962)
* [怎样理解 Continuation-passing style? - 知乎](https://www.zhihu.com/question/20259086)
* [Yes, single assignment is functional programming.[1] But without all the co](https://news.ycombinator.com/item?id=18799434)
* [paper.dvi](https://www.cs.princeton.edu/~appel/papers/ssafun.pdf)
* [WoW64 internals - mindless-area](https://wbenny.github.io/2018/11/04/wow64-internals.html)
* [Verilog reg, Verilog wire, SystemVerilog logic. What's the difference? - Ve](https://www.verilogpro.com/verilog-reg-verilog-wire-systemverilog-logic/)
* [入门解读：小白也能看懂的容器和虚拟机介绍](https://www.infoq.cn/article/UHoje8h4FOMfOMsoO_V7)
* [yuxuanchiadm/lamcalcj](https://github.com/yuxuanchiadm/lamcalcj)
* [benjamin.pizza - The Fourth Type of Variance](https://www.benjamin.pizza/posts/2019-01-11-the-fourth-type-of-variance.html)
* [const types, traits and implementations in Rust | varkor’s blog](https://varkor.github.io/blog/2019/01/11/const-types-traits-and-implementations-in-Rust.html)
* [Rust 2019: Solid Foundations for Unsafe Code](https://www.ralfj.de/blog/2019/01/12/rust-2019.html)
* [assembly - What is the purpose of red zone? - Software Engineering Stack Ex](https://softwareengineering.stackexchange.com/questions/230089/what-is-the-purpose-of-red-zone)
* [Why do we even need to define a red zone? Can’t I just use my stack for any](https://blogs.msdn.microsoft.com/oldnewthing/20190111-00/?p=100685)
* [GCC 9 Compiler Tuning Benchmarks At Various Optimization Levels, Vectorize](https://www.phoronix.com/scan.php?page=article&item=gcc9-core9-tuning&num=1)
* [The State Of C 20 Features In GCC's libstdc - Phoronix](https://www.phoronix.com/scan.php?page=news_item&px=Cpp20-libstdc-GCC9)
* [知乎问答：怎样理解阻塞非阻塞与同步异步的区别？](https://www.zhihu.com/question/19732473/answer/88599695?utm_source=com.ideashower.readitlater.pro&utm_medium=social&utm_oi=831107418380447744)
* [知乎问答：怎样理解阻塞非阻塞与同步异步的区别？](https://www.zhihu.com/question/19732473/answer/26101328?utm_source=com.ideashower.readitlater.pro&utm_medium=social&utm_oi=831107418380447744)
* [X86 psABI · hjl-tools/x86-psABI Wiki](https://github.com/hjl-tools/x86-psABI/wiki/X86-psABI)
* [assembly - Is a sign or zero extension required when adding a 32bit offset](https://stackoverflow.com/questions/36706721/is-a-sign-or-zero-extension-required-when-adding-a-32bit-offset-to-a-pointer-for/36760539#36760539)
* [c - Can an uninitialized bool crash a program? - Stack Overflow](https://stackoverflow.com/questions/54120862/can-an-uninitialized-bool-crash-a-program)
* [Strong Random Password Generator](https://passwordsgenerator.net/)
* [Why is Gbt3fC79ZmMEFUFJ a weak password? - Information Security Stack Excha](https://security.stackexchange.com/questions/201210/why-is-gbt3fc79zmmefufj-a-weak-password)
* [wise_enum/README.md at master · quicknir/wise_enum](https://github.com/quicknir/wise_enum/blob/master/README.md)
* [【最终版回报社会贴】new grads湾区DA/DS找工作超细致回顾 面经 资料总结!!!【一亩三分地论坛数据科学版】 -](https://www.1point3acres.com/bbs/forum.php?mod=viewthread&tid=469408)
* [编译原理之LL(1) 、LR(0)、SLR、LR(1)、LALR文法的对比 - zuzhiang的博客 - CSDN博客](https://blog.csdn.net/zuzhiang/article/details/79047743)
* [GLR Parsers (Bison 3.2.2)](https://www.gnu.org/software/bison/manual/html_node/GLR-Parsers.html)
* [Bag of Tricks for Convolutional Neural Networks - 知乎](https://zhuanlan.zhihu.com/p/51870052)
* [c - What is the need of template lambda introduced in C 20 when C 14 al](https://stackoverflow.com/questions/54126204/what-is-the-need-of-template-lambda-introduced-in-c20-when-c14-already-has-g)
* [php - What does \x80-\xFF refer to? - Stack Overflow](https://stackoverflow.com/questions/25986857/what-does-x80-xff-refer-to)
* [avian2/unidecode: ASCII transliterations of Unicode text - GitHub mirror](https://github.com/avian2/unidecode)
* [Projecting Unicode to ASCII](https://www.johndcook.com/blog/2019/01/09/projecting-unicode-to-ascii/)
* [架构师之路](https://mp.weixin.qq.com/s?__biz=MjM5ODYxMDA5OQ==&mid=2651959606&idx=1&sn=f9561231dd33bcd0550b8d0d59d6b876&chksm=bd2d04ea8a5a8dfce90c870279a7f74b7aedd802c2d699dd919d7e40ebe30699381517c2d54b&scene=21&client=tim&ADUIN=1123280257&ADSESSION=1547063658&ADTAG=CLIENT.QQ.5597_.0&ADPUBNO=26881#%23)
* [对《Python 是我用过最糟糕的语言之一》的回答 - 知乎](https://zhuanlan.zhihu.com/p/54552178)
* [(13 条消息)Comonad有什么实际用途？ - 知乎](https://www.zhihu.com/question/55316968/answer/569687265)
* [Verilog Coding Standard](http://fpgacpu.ca/fpga/verilog.html)
* [Fast(er)(est) Table Inserts in LuaJIT – Cryptobells](https://www.cryptobells.com/fasterest-table-inserts-in-luajit/)
* [lua - Does using "array style" tables give faster read access than using "m](https://stackoverflow.com/questions/34941416/does-using-array-style-tables-give-faster-read-access-than-using-map-style-t)
* [lua-users wiki: Table Preallocation](http://lua-users.org/wiki/TablePreallocation)
* [https://stackoverflow.com/a/27434198/8563711](https://stackoverflow.com/a/27434198/8563711)
* [https://stackoverflow.com/a/15706820/8563711](https://stackoverflow.com/a/15706820/8563711)
* [https://stackoverflow.com/a/31113618/8563711](https://stackoverflow.com/a/31113618/8563711)
* [What is pseudopolynomial time? How does it differ from polynomial time?](https://stackoverflow.com/q/19647658/8563711)
* [什么是伪多项式时间算法？ - 知乎](https://www.zhihu.com/question/20013122)
* [离散对数为什么是难题？ - 知乎](https://www.zhihu.com/question/26030513)
* [成员函数指针与高性能的C 委托 - Jans - 博客园](http://www.cnblogs.com/jans2002/archive/2006/10/13/528160.html)
* [Localizing Code With std::variant - invoke::thought()](https://cdacamar.github.io/organization/localizing-code-with-variant/)
* [c - Purpose of boost::checked_delete - Stack Overflow](https://stackoverflow.com/questions/2852952/purpose-of-boostchecked-delete)
* [bit manipulation - How to flip a specific bit in a byte in C? - Stack Overf](https://stackoverflow.com/questions/19617248/how-to-flip-a-specific-bit-in-a-byte-in-c)
* [Find if there is a rectangle in binary matrix with corners as 1 - GeeksforG](https://www.geeksforgeeks.org/find-rectangle-binary-matrix-corners-1/)
* [Fun with compute shaders and fluid dynamics @ /home/adrian](https://blog.kummerlaender.eu/article/fun_with_compute_shaders_and_fluid_dynamics/#fnref3)
* [【VC 技术杂谈008】使用zlib解压zip压缩文件 - 依旧淡然 - 博客园](https://www.cnblogs.com/menlsh/p/4480577.html)
* [zlib库中包含MiniUnzip、MiniZip等，分别是什么东西？ - 知乎](https://www.zhihu.com/question/33251218)
* [grpc / The state of gRPC in the browser](https://grpc.io/blog/state-of-grpc-web)
* [Thoughts on Rust, a few thousand lines in](https://rcoh.me/posts/thoughts-on-rust-a-few-thousand-lines-in/)
* [From Object Algebras to Finally Tagless Interpreters | Oleksandr Manzyuk's](https://oleksandrmanzyuk.wordpress.com/2014/06/18/from-object-algebras-to-finally-tagless-interpreters-2/)
* [使用 Object Algebra 改善解释器代码设计](https://zju-lambda.tech/introduction-to-object-algebra/)
* [Visitor Pattern - 知乎](https://zhuanlan.zhihu.com/p/35987864)
* [Fundamental types - cppreference.com](https://en.cppreference.com/w/cpp/language/types)
* [What's the difference between a character, a code point, a glyph and a grap](https://stackoverflow.com/q/27331819/8563711)
* [使用minizip解壓縮多個文件（基於zlib） - 神馬文庫](https://www.smwenku.com/a/5b7ee33a2b717767c6ac6ca5)
* [VC 解压有密码的.zip文件 - 记事本 - CSDN博客](https://blog.csdn.net/educast/article/details/38728399)
* [Encoding error in Python with Chinese characters - Stack Overflow](https://stackoverflow.com/questions/3883573/encoding-error-in-python-with-chinese-characters/3888653#3888653)
* [c - lua C api : class accessors - Stack Overflow](https://stackoverflow.com/questions/37681827/lua-c-api-class-accessors)
* [《Rust编程之道》读者答疑精选：函数项类型和函数指针类型 - 知乎](https://zhuanlan.zhihu.com/p/54485063)
* [The State Of Software Security In 2019](https://noncombatant.org/2019/01/06/state-of-security-2019/)
* [C 11中的alignas能否完全代替#pragma pack？ - 知乎](https://www.zhihu.com/question/307847194/answer/565472919)
* [Timeline of programming languages - Wikipedia](https://en.wikipedia.org/wiki/Timeline_of_programming_languages)
* [Understanding JIT compiler (just-in-time compiler)](https://aboullaite.me/understanding-jit-compiler-just-in-time-compiler/)
* [Over 500 Top PDFs posted to Hacker News in 2018 | POLAR - Easily manage you](https://getpolarized.io/2019/01/08/top-pdfs-of-2018-hackernews.html)
* [What is the difference between data center and cloud? - Quora](https://www.quora.com/What-is-the-difference-between-data-center-and-cloud)
* [The LaTeX fetish (Or: Don’t write in LaTeX! It’s just for typesetting) – Da](http://www.danielallington.net/2016/09/the-latex-fetish/)
* [QCon上海2018 PPT合集](https://ppt.geekbang.org/list/qconsh2018)
* [A step-by-step guide to building a simple chess AI – freeCodeCamp.org](https://medium.freecodecamp.org/simple-chess-ai-step-by-step-1d55a9266977)
* [网易云音乐的版权、海外播放限制及破解 – おお！ハピネス](https://fireattack.wordpress.com/2016/03/27/netease-music/)
* [decades have passed, standard C has no agreed and standard error handling](https://www.reddit.com/r/cpp/comments/ae60nb/decades_have_passed_standard_c_has_no_agreed_and/)
* [p0709r2.pdf](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/p0709r2.pdf)
* [[请教]现在同等价位的 CPU，对多开虚拟机的支持比较好 - V2EX](https://www.v2ex.com/t/525119#reply28)
* [alash3al/sqler: write APIs using direct SQL queries with no hassle, let's r](https://github.com/alash3al/sqler)
* [mlreview/machine-learning-surveys: A curated list of Machine Learning Surve](https://github.com/mlreview/machine-learning-surveys#ensemble-learning)
* [data structures - Count numbers less than $K$ in array - Computer Science S](https://cs.stackexchange.com/questions/85839/count-numbers-less-than-k-in-array)
* [CS 641 Lecture](https://www.cs.uaf.edu/2011/spring/cs641/lecture/02_08_simd.html)
* [Cython 基本用法 - 知乎](https://zhuanlan.zhihu.com/p/24311879)
* [对于 Python 的科学计算有哪些提高运算速度的技巧？ - 知乎](https://www.zhihu.com/question/67310504)
* [python的numpy向量化语句为什么会比for快？ - 知乎](https://www.zhihu.com/question/67652386)
* [Overload sets as function parameters](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/p1170r0.html)
* [Template:cpp/ranges/niebloid - cppreference.com](https://en.cppreference.com/w/Template:cpp/ranges/niebloid)
* [Linux基础 — Linux Tools Quick Tutorial](https://linuxtools-rst.readthedocs.io/zh_CN/latest/base/index.html)
* [云风的 BLOG: 一种 16 倍抗锯齿字体渲染的方法](https://blog.codingnow.com/2019/01/font_16aa.html)
* [Home – the Common Lisp Cookbook](https://lispcookbook.github.io/cl-cookbook/)
* [Copy and Swap, 20 years later · Mathieu Ropert](https://mropert.github.io/2019/01/07/copy_swap_20_years/)
* [PostgreSQL: The dangers of streaming across versions of glibc: A cautionary](https://www.postgresql.org/message-id/flat/BA6132ED-1F6B-4A0B-AC22-81278F5AB81E%40tripadvisor.com)
* [c - Create a temporary to pass to rvalue reference - Stack Overflow](https://stackoverflow.com/questions/34441456/create-a-temporary-to-pass-to-rvalue-reference)
* [TBBle/WG21-void: WG21 C paper relating to 'void'](https://github.com/TBBle/WG21-void)
* [Jacek's C Blog · Generating Integer Sequences at Compile Time](https://blog.galowicz.de/2016/06/24/integer_sequences_at_compile_time/)
* [Huawei Unveils Industry's Highest-Performance ARM-based CPU Bringing Global](https://www.huawei.com/en/press-events/news/2019/1/huawei-unveils-highest-performance-arm-based-cpu)
* [The Many New Features & Improvements Of The Linux 5.0 Kernel - Phoronix](https://www.phoronix.com/scan.php?page=article&item=linux-2019-features&num=1)
* [Reference Manual — TrustInSoft Documentation 1.37-dev documentation](https://taas.trust-in-soft.com/tsnippet/doc/ref/index.html)
* [TrustInSoft Analyzer - T∙Snippet](https://taas.trust-in-soft.com/tsnippet/#)
* [37 percent of HyperRogue's compilation time is due to `std::function` – Art](https://quuxplusone.github.io/blog/2019/01/06/hyper-function/)
* [TeX output 1992.11.12:1056](http://www.cs.princeton.edu/~appel/papers/critique.pdf)
* [Expression templates - Wikipedia](https://en.wikipedia.org/wiki/Expression_templates)
* [Linux 5.0-rc1 Debuts With New Hardware Support, FreeSync, I3C, High-Res Scr](https://www.phoronix.com/scan.php?page=news_item&px=Linux-5.0-rc1-Kernel-Released)
* [python - What exactly are iterator, iterable, and iteration? - Stack Overfl](https://stackoverflow.com/questions/9884132/what-exactly-are-iterator-iterable-and-iteration)
* [Iterables vs. Iterators vs. Generators » nvie.com](https://nvie.com/posts/iterators-vs-generators/)
* [If range() is a generator in Python 3.3, why can I not call next() on a ran](https://stackoverflow.com/questions/13092267/if-range-is-a-generator-in-python-3-3-why-can-i-not-call-next-on-a-range)
* [regex - Regular expression to find URLs within a string - Stack Overflow](https://stackoverflow.com/questions/6038061/regular-expression-to-find-urls-within-a-string)
* [Automatic Generation of Text Extraction Patterns from Examples](http://regex.inginf.units.it/)
* [Collected Papers of Alexander A. Stepanov](http://stepanovpapers.com/)
* [STL and Its Design Principles](http://stepanovpapers.com/stl.pdf)
* [abseil / Revisiting Regular Types](https://abseil.io/blog/20180531-regular-types)
* [Writing a basic clang static analysis check |](http://bbannier.github.io/blog/2015/05/02/Writing-a-basic-clang-static-analysis-check.html)
* [What is C ? | cor3ntin](https://cor3ntin.github.io/posts/what_is_cpp/)
* [Multi-Dimensional Analog Literals in C](http://www.eelis.net/C++/analogliterals.xhtml)
* [Eric Arnebäck](https://erkaman.github.io/posts/beginner_computer_graphics.html)
* [Kernel quality control, or the lack thereof [LWN.net]](https://lwn.net/Articles/774114/)
* [Meltdown and Spectre Patches From Intel and Others Have a Rough Start | WIR](https://www.wired.com/story/meltdown-spectre-patching-total-train-wreck/)
* [The Elite Intel Team Still Fighting Meltdown and Spectre | WIRED](https://www.wired.com/story/intel-meltdown-spectre-storm/)
* [rust - How to build an Rc or Rc? - Stack Overflow](https://stackoverflow.com/questions/31685697/how-to-build-an-rcstr-or-rct)
* [scope - What is the Rust equivalent of C 's shared_ptr? - Stack Overflow](https://stackoverflow.com/questions/49834414/what-is-the-rust-equivalent-of-cs-shared-ptr)
* [为什么 intrusive_ptr 没有进入标准库？ - 知乎](https://www.zhihu.com/question/25271180)
* [P0468R1: An Intrusive Smart Pointer](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/p0468r1.html)
* [Operational Telegram – the grugq – Medium](https://medium.com/@thegrugq/operational-telegram-cbbaadb9013a)
* [pickle — Python object serialization — Python 3.7.2 documentation](https://docs.python.org/3/library/pickle.html#what-can-be-pickled-and-unpickled)
* [python - `apply_async` silences "shared queue errors" - Stack Overflow](https://stackoverflow.com/questions/45179270/apply-async-silences-shared-queue-errors/45184127#45184127)
* [python - multiprocessing.Queue as arg to pool worker aborts execution of wo](https://stackoverflow.com/questions/45178447/multiprocessing-queue-as-arg-to-pool-worker-aborts-execution-of-worker?rq=1)
* [multiprocessing - Python Multiprocess diff between Windows and Linux - Stac](https://stackoverflow.com/questions/6596617/python-multiprocess-diff-between-windows-and-linux)
* [cakeml-jfp.pdf](https://www.cs.cmu.edu/~yongkiat/files/cakeml-jfp.pdf)
* [Understanding Parser Combinators | F# for fun and profit](https://fsharpforfunandprofit.com/posts/understanding-parser-combinators/)
* [BeatingFloatingPoint.pdf](http://www.johngustafson.net/pdfs/BeatingFloatingPoint.pdf)
* [Exposing Floating Point – Bartosz Ciechanowski](https://ciechanow.ski/exposing-floating-point/)
* [Parsing C in Python with Clang - Eli Bendersky's website](https://eli.thegreenplace.net/2011/07/03/parsing-c-in-python-with-clang)
* [geocar.sdf1.org/numbers.html](http://geocar.sdf1.org/numbers.html)
* [io_submit: The epoll alternative you've never heard about](https://blog.cloudflare.com/io_submit-the-epoll-alternative-youve-never-heard-about/#)
* [Trek10 | From relational DB to single DynamoDB table: a step-by-step explor](https://www.trek10.com/blog/dynamodb-single-table-relational-modeling/)
* [c - Why doesn't ADL find function templates? - Stack Overflow](https://stackoverflow.com/questions/2953684/why-doesnt-adl-find-function-templates)
* [c - What is "Argument-Dependent Lookup" (aka ADL, or "Koenig Lookup")? -](https://stackoverflow.com/questions/8111677/what-is-argument-dependent-lookup-aka-adl-or-koenig-lookup)
* [Argument-dependent lookup - cppreference.com](https://en.cppreference.com/w/cpp/language/adl)
* [Breakdown Notes](https://www.breakdown-notes.com/make)
* [从 0 开始学 Linux 驱动开发(一)](https://paper.seebug.org/779/)
* [腾讯安全 2018 年高级持续性威胁（APT）研究报告](https://paper.seebug.org/781/)
* [2018 年 IoT 那些事儿](https://paper.seebug.org/782/)
* [全球高级持续性威胁（APT）2018年总结报告](https://paper.seebug.org/783/)
* [Don’t kill my app! | Hey Android vendors, don’t kill my app!](https://dontkillmyapp.com/)
* [C Insights](https://cppinsights.io/)
* [cpp17_in_TTs/ALL_IN_ONE.md at master · tvaneerd/cpp17_in_TTs](https://github.com/tvaneerd/cpp17_in_TTs/blob/master/ALL_IN_ONE.md)
* [bcc/tutorial.md at master · iovisor/bcc](https://github.com/iovisor/bcc/blob/master/docs/tutorial.md)
* [Learn eBPF Tracing: Tutorial and Examples](http://www.brendangregg.com/blog/2019-01-01/learn-ebpf-tracing.html)
* [开源一个千万级多组Raft库 - Dragonboat](https://zhuanlan.zhihu.com/p/52487803?utm_source=com.ideashower.readitlater.pro&utm_medium=social&utm_oi=831107418380447744)
* [A Neighborhood of Infinity: The Mother of all Monads](http://blog.sigfpe.com/2008/12/mother-of-all-monads.html)
* [Sustainable Suburbia: A Review of Tiny Languages Part 1](http://sustburbia.blogspot.com/2016/01/a-review-of-tiny-languages-part-1.html)
* [Bytecode compilers and interpreters | Max Bernstein](https://bernsteinbear.com/blog/bytecode-interpreters/)
* [Using TLA to understand Xen vchan - Thomas Leonard's blog](http://roscidus.com/blog/blog/2019/01/01/using-tla-plus-to-understand-xen-vchan/)
* [https://github.com/yyzybb537/libgo/blob/16e0ad928dcc0d3a649fc309efa60bc90b733b8e/libgo/netio/windows/win_vc_hook.cpp](https://github.com/yyzybb537/libgo/blob/16e0ad928dcc0d3a649fc309efa60bc90b733b8e/libgo/netio/windows/win_vc_hook.cpp)
* [https://github.com/yyzybb537/libgo/blob/98b3e49da7c4c52b081b2fac6d8ef6abea7a2e71/libgo/netio/unix/hook.cpp](https://github.com/yyzybb537/libgo/blob/98b3e49da7c4c52b081b2fac6d8ef6abea7a2e71/libgo/netio/unix/hook.cpp)
* [n4174.pdf](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2014/n4174.pdf)
* [PyPy Status Blog: PyPy for low-latency systems](https://morepypy.blogspot.com/2019/01/pypy-for-low-latency-systems.html)
* [Improved Doxygen documentation and search | Magnum Engine Blog](https://blog.magnum.graphics/meta/improved-doxygen-documentation-and-search/)
* [HN.Academy - Online Courses Recommended By Hacker News Users](https://hn.academy/#)
* [Distributed systems theory for the distributed systems engineer](https://www.the-paper-trail.org/post/2014-08-09-distributed-systems-theory-for-the-distributed-systems-engineer/)
* [Distributed systems for fun and profit](http://book.mixu.net/distsys/)
* [LinuxBoot](https://www.linuxboot.org/)
* [Find, Fix, and Avoid Memory Leaks in C# .NET: 8 Best Practices - Michael's](https://michaelscodingspot.com/2019/01/03/find-fix-and-avoid-memory-leaks-in-c-net-8-best-practices/)
* ["Modern" C Ruminations](https://sean-parent.stlab.cc/2018/12/30/cpp-ruminations.html)
* [Linux平台的ASLR机制 - 加号减减号的博客 - CSDN博客](https://blog.csdn.net/Plus_RE/article/details/79199772)
* [Does Python have a stack/heap and how is memory managed? - Stack Overflow](https://stackoverflow.com/questions/14546178/does-python-have-a-stack-heap-and-how-is-memory-managed)
* [The internals of Python string interning](http://guilload.com/python-string-interning/)
* [Address space layout randomization - Wikipedia](https://en.wikipedia.org/wiki/Address_space_layout_randomization)
* [https://stackoverflow.com/a/20753450/8563711](https://stackoverflow.com/a/20753450/8563711)
* [Rust 创始人谈 Rust 2019 和未来：社区应限制成长速度 - 开源中国](https://www.oschina.net/news/103234/rust-2019-and-beyond)
* [c - Is declval() the same as (*(T*)nullptr)? - Stack Overflow](https://stackoverflow.com/questions/14657092/is-declvalt-the-same-as-tnullptr)
* [c - Why does std::declval add a reference? - Stack Overflow](https://stackoverflow.com/questions/25707441/why-does-stddeclval-add-a-reference)
* [std::experimental::is_detected, std::experimental::detected_t, std::experim](https://en.cppreference.com/w/cpp/experimental/is_detected)
* [Are we async yet?](https://areweasyncyet.rs/)
* [rust - How to force a move of a type which implements the Copy trait? - Sta](https://stackoverflow.com/questions/31168589/how-to-force-a-move-of-a-type-which-implements-the-copy-trait)
* [Clone VS Copy - 知乎](https://zhuanlan.zhihu.com/p/21730929)
* [How copying an int made my code 11 times faster – Medium](https://medium.com/@robertgrosse/how-copying-an-int-made-my-code-11-times-faster-f76c66312e0f)
* [高级加密标准评选过程 - 维基百科，自由的百科全书](https://zh.wikipedia.org/wiki/%E9%AB%98%E7%BA%A7%E5%8A%A0%E5%AF%86%E6%A0%87%E5%87%86%E8%AF%84%E9%80%89%E8%BF%87%E7%A8%8B)
* [AES对称密码算法介绍(1)——AES的内部结构 - 知乎](https://zhuanlan.zhihu.com/p/41716899)
* [AES对称密码算法介绍(2)——查表法软件实现 - 知乎](https://zhuanlan.zhihu.com/p/42264499)
* [Why not modes?](http://smallcultfollowing.com/babysteps/blog/2011/12/08/why-not-modes/)
* [RFC: Rethink argument modes · Issue #2030 · rust-lang/rust](https://github.com/rust-lang/rust/issues/2030)
* [Emulating try/finally in Rust](https://brson.github.io/2013/01/20/emulating-try-finally-in-rust)
* [c - Where does execution resume following an exception? - Stack Overflow](https://stackoverflow.com/questions/1961158/where-does-execution-resume-following-an-exception)
* [Use of Windows exception handling metadata — Leviathan Security](https://www.leviathansecurity.com/blog/use-of-windows-exception-handling-metadata)
* [Hexacorn | Blog](http://www.hexacorn.com/blog/2016/12/15/pe-section-names-re-visited/)
* [PDATA Structures (Windows CE 5.0) | Microsoft Docs](https://docs.microsoft.com/en-us/previous-versions/windows/embedded/aa448751(v=msdn.10))
* [c - Const objects not in rdata/rodata section - Stack Overflow](https://stackoverflow.com/questions/8823072/const-objects-not-in-rdata-rodata-section)
* [Compilerx](https://www.ele.uva.es/~jesus/hardware_empotrado/Compiler.pdf)
* [c - GCC: why constant variables not placed in .rodata - Stack Overflow](https://stackoverflow.com/questions/10818761/gcc-why-constant-variables-not-placed-in-rodata)
* [Linux source code: lib/sort.c (v4.20) - Bootlin](https://elixir.bootlin.com/linux/latest/source/lib/sort.c)
* [Rust: Raw string literals](https://rahul-thakoor.github.io/rust-raw-string-literals/)
* [rfcs/1331-grammar-is-canonical.md at master · rust-lang/rfcs](https://github.com/rust-lang/rfcs/blob/master/text/1331-grammar-is-canonical.md)
* [Canonical Rust grammar distinct from parser (tracking issue for RFC #1331)](https://github.com/rust-lang/rust/issues/30942)
* [Qix/ds.md at master · ty4z2008/Qix](https://github.com/ty4z2008/Qix/blob/master/ds.md)
* [Recording Artist: The Case Against Insensitivity](http://drewthaler.blogspot.com/2007/12/case-against-insensitivity.html)
* [Truths programmers should know about case](https://www.b-list.org/weblog/2018/nov/26/case/)
* [Han unification - Wikipedia](https://en.wikipedia.org/wiki/Han_unification)
* [8.1.2\. 文件名大小写问题 — GotGit](https://www.worldhello.net/gotgit/08-git-misc/030-case-insensitive.html)
* [Filesystems and case-insensitivity [LWN.net]](https://lwn.net/Articles/772960/)
* [请教一道Google面经题【一亩三分地论坛美国面经版】 - 手机版](https://www.1point3acres.com/bbs/thread-457043-1-1.html?_dsign=0a9ca5eb)
* [c - using custom deleter with unique_ptr - Stack Overflow](https://stackoverflow.com/questions/26360916/using-custom-deleter-with-unique-ptr)
* [Chapter 29. Demangling](https://gcc.gnu.org/onlinedocs/libstdc++/manual/ext_demangling.html)
* [Lambda expressions (since C 11) - cppreference.com](https://en.cppreference.com/w/cpp/language/lambda)
* [filesystems - What is a sparse file and why do we need it? - Stack Overflow](https://stackoverflow.com/questions/43126760/what-is-a-sparse-file-and-why-do-we-need-it)
* [linux - what is file hole and how can it be used? - Stack Overflow](https://stackoverflow.com/questions/13982478/what-is-file-hole-and-how-can-it-be-used)
* [ferrite-asplos16.pdf](https://homes.cs.washington.edu/~bornholt/papers/ferrite-asplos16.pdf)
* [学习 Linux，101: 保持文件系统的完整性](https://www.ibm.com/developerworks/cn/linux/l-lpic1-v3-104-2/index.html)
* [linux - What happens if mv is interrupted? - Super User](https://superuser.com/questions/259097/what-happens-if-mv-is-interrupted)
* [Log-structured File Systems(LFS) [基于日志结构文件系统] | A Libertine in Computer Sci](https://csruiliu.github.io/blog/2017-11-19-lfs.html)
* [LambdaConf 2015 - Finally Tagless DSLs and MTL Joseph Abrahamson - YouTube](https://www.youtube.com/watch?v=JxC1ExlLjgw)
* [crash - Can the filesystem become inconsistent if interrupted when moving a](https://unix.stackexchange.com/questions/202404/can-the-filesystem-become-inconsistent-if-interrupted-when-moving-a-file)
* [How can I copy a file on Unix using C? - Stack Overflow](https://stackoverflow.com/questions/2180079/how-can-i-copy-a-file-on-unix-using-c)
* [The History of /r/Animemes: Fourth Edition - Album on Imgur](https://imgur.com/a/lfLUTdQ#0aJt4Dy)
* [Heap Allocation in Assembly - Oneirony](https://seisvelas.github.io/journal/journal/asm-heap/)
* [Why is a raven like a writing desk? » Blog Archive » Thoughts on Modern C](http://www.elbeno.com/blog/?p=1598)
* [c - lower_bound == upper_bound - Stack Overflow](https://stackoverflow.com/questions/12158948/lower-bound-upper-bound)
* [Python-like enumeration in C – /** INSERT CODE HERE **/ – My personal blo](https://faouellet.github.io/enumerate/)
* [Python-like loop enumeration in C - Stack Overflow](https://stackoverflow.com/questions/11328264/python-like-loop-enumeration-in-c)
* [danistefanovic/build-your-own-x: ? Build your own (insert technology here)](https://github.com/danistefanovic/build-your-own-x)
* [hash - Meaning of Open hashing and Closed hashing - Stack Overflow](https://stackoverflow.com/questions/9124331/meaning-of-open-hashing-and-closed-hashing)
* [无锁HashMap的原理与实现 | | 酷 壳 - CoolShell](https://coolshell.cn/articles/9703.html)
* [Lock Free中的Epoch Based Reclamation - Yebangyu's Blog](http://www.yebangyu.org/blog/2016/09/09/epochbasedreclamation/)
* [(11 条消息)C 的无锁数据结构在工业界有真正的应用吗？ - 知乎](https://www.zhihu.com/question/52629893)
* [floodsung/Deep-Learning-Papers-Reading-Roadmap: Deep Learning papers readin](https://github.com/floodsung/Deep-Learning-Papers-Reading-Roadmap)
* [copy initialization - cppreference.com](https://en.cppreference.com/w/cpp/language/copy_initialization)
* [new expression - cppreference.com](https://en.cppreference.com/w/cpp/language/new#Allocation)
* [Copy elision - cppreference.com](https://en.cppreference.com/w/cpp/language/copy_elision)
* [(12 条消息)现代C/C 编译器有多智能？能做出什么厉害的优化？ - 知乎](https://www.zhihu.com/question/43598164)
* [Bartek's coding blog: C at the End of 2018](https://www.bfilipek.com/2018/12/c-at-end-of-2018.html)
* [Rust 2019: Address the "Big" Problem - Rust Internals](https://internals.rust-lang.org/t/rust-2019-address-the-big-problem/9109)
* [Weblogs Forum - The fate of reduce() in Python 3000](https://www.artima.com/forums/flat.jsp?forum=106&thread=98196)
* [The fate of reduce() in Python 3000](https://www.artima.com/weblogs/viewpost.jsp?thread=98196)
* [Visitor Pattern 与 Finally Tagless：解决表达式问题](https://ice1000.org/2019/01/01/FinallyTaglessVisitorPattern/)
* [几个接触的排序算法思想简介 — Steemit](https://steemit.com/tech/@bgping/5v1boz)
* [Sorting network - Wikipedia](https://en.wikipedia.org/wiki/Sorting_network)
* [双调排序 - 简书](https://www.jianshu.com/p/ea4a62fdaae9)
* [【并行计算】Bitonic Sort（双调排序）基础 - jiange_zh的博客 - CSDN博客](https://blog.csdn.net/jiange_zh/article/details/49533477)
* [排序网络 - IMCT](https://blog.seetee.me/post/2011/sorting-networks/)
* [分段排序网络 Bitonic Sort - kk Blog —— 通用基础](http://abcdxyzk.github.io/blog/2011/07/19/alg-bitonic-sort/)
* [gcc/libatomic at master · gcc-mirror/gcc](https://github.com/gcc-mirror/gcc/tree/master/libatomic)
* [c - Why does g still require -latomic - Stack Overflow](https://stackoverflow.com/questions/30591313/why-does-g-still-require-latomic/30592461)
* [Floating-point environment - cppreference.com](https://en.cppreference.com/w/cpp/numeric/fenv)
* [Compiler Explorer](https://godbolt.org/#g:!((g:!((g:!((h:codeEditor,i:(j:1,source:'%23include+%3Catomic%3E%0A%0Astruct+MyBools+%7B%0A++bool+x%3B%0A++bool+y%3B%0A%7D%3B%0A%0Abool+operator%3D%3D(const+MyBools%26+lhs,+const+MyBools%26+rhs)+%7B%0A++++return+lhs.x+%3D%3D+rhs.x+%26%26+lhs.y+%3D%3D+rhs.y%3B%0A%7D%0A%0Avoid+set(std::atomic%3CMyBools%3E%26+x)+%7B%0A++x+%3D+%7Bfalse,+false%7D%3B%0A%7D%0A%0Abool+compare(std::atomic%3CMyBools%3E%26+x)+%7B%0A%09return+x+%3D%3D+MyBools%7Bfalse,+false%7D%3B%0A%7D%0A%0Avoid+set(std::atomic%3Cbool%3E%26+x)+%7B%0A++x+%3D+false%3B%0A%7D%0A%0Abool+compare(std::atomic%3Cbool%3E%26+x)+%7B%0A++return+!!x%3B%0A%7D'),l:'5',n:'0',o:'C%2B%2B+source+%231',t:'0')),k:50,l:'4',n:'0',o:'',s:0,t:'0'),(g:!((h:compiler,i:(compiler:g71,filters:(___0:(),b:'0',commentOnly:'0',directives:'0',intel:'0',jquery:'3.2.1',length:1,prevObject:(___0:(sizzle1501338952069:(undefined:(legend:!(5,0,'1')))),length:1,prevObject:(___0:(jQuery3210190218101405847721:(display:''),sizzle1501338952069:(undefined:(legend:!(5,0,'1')))),length:1))),options:'-std%3Dc%2B%2B14+-O3',source:1),l:'5',n:'0',o:'x86-64+gcc+7.1+(Editor+%231,+Compiler+%231)',t:'0')),k:50,l:'4',n:'0',o:'',s:0,t:'0')),l:'2',n:'0',o:'',t:'0')),version:4)
* [c - is multiple assignments of atomic variables, an atomic operation? - S](https://stackoverflow.com/questions/45389570/is-multiple-assignments-of-atomic-variables-an-atomic-operation)
* [c - Why isn't atomic double fully implemented - Stack Overflow](https://stackoverflow.com/questions/30048533/why-isnt-atomic-double-fully-implemented)
* [c - Atomic exchange of two std::atomic objects in a lock-free manner in C](https://stackoverflow.com/questions/18349688/atomic-exchange-of-two-stdatomict-objects-in-a-lock-free-manner-in-c11)
* [jvm(11)-晚期（运行期）优化 - PacosonSWJTU的博客 - CSDN博客](https://blog.csdn.net/PacosonSWJTU/article/details/51045611)
* [深入理解Java中的final关键字 - ImportNew](http://www.importnew.com/7553.html)
* [Search operators you can use with Gmail - Gmail Help](https://support.google.com/mail/answer/7190?hl=en)
* [Comparing Pythagorean triples in C , D, and Rust | Átila on Code](https://atilanevesoncode.wordpress.com/2018/12/31/comparing-pythagorean-triples-in-c-d-and-rust/)
* [Microsoft Word - abstraction and machine](http://www.stroustrup.com/abstraction-and-machine.pdf)
* [How to understand atomics in a freestanding C or C implementation? - Stac](https://stackoverflow.com/questions/41190204/how-to-understand-atomics-in-a-freestanding-c-or-c-implementation)
* [multithreading - How coroutines can be faster than threads? - Stack Overflo](https://stackoverflow.com/questions/47092460/how-coroutines-can-be-faster-than-threads)
* [Async Python: The Different Forms of Concurrency · Abu Ashraf Masnun](http://masnun.rocks/2016/10/06/async-python-the-different-forms-of-concurrency/)
* [multithreading - Python: what are the advantages of async over threads? - S](https://stackoverflow.com/questions/48020593/python-what-are-the-advantages-of-async-over-threads)
* [进程、线程、协程与goruntine - 知乎](https://zhuanlan.zhihu.com/p/27245377)
* [architecture - Difference between a "coroutine" and a "thread"? - Stack Ove](https://stackoverflow.com/questions/1934715/difference-between-a-coroutine-and-a-thread)
* [Equivalence of State Machines and Coroutines - 250bpm](http://250bpm.com/blog:141)
* [(1 封私信 / 6 条消息)Kotlin的Coroutine相对于只提供async或channel的语言有什么优势？ - 知乎](https://www.zhihu.com/question/306211957)
* [std::atomic::compare_exchange_weak, std::atomic::compare_exchange_strong -](https://en.cppreference.com/w/cpp/atomic/atomic/compare_exchange)
* [algorithm - dead-lock free vs. starvation free - Stack Overflow](https://stackoverflow.com/questions/8370098/dead-lock-free-vs-starvation-free)
* [Starvation (computer science) - Wikipedia](https://en.wikipedia.org/wiki/Starvation_(computer_science))
* [Concurrency Freaks](http://concurrencyfreaks.blogspot.com/)
* [Concurrency Freaks: Lock-Free is not Starvation-Free](http://concurrencyfreaks.blogspot.com/2014/07/lock-free-is-not-starvation-free.html)
* [Concurrency Freaks: Lock-Free and Wait-Free, definition and examples](http://concurrencyfreaks.blogspot.com/2013/05/lock-free-and-wait-free-definition-and.html)
* [5 switch statement patterns - yourbasic.org/golang](https://yourbasic.org/golang/switch-statement/)
* [Data.Witherable](http://hackage.haskell.org/package/witherable-0.3/docs/Data-Witherable.html)
* [Getting You There - Your C Standardization Efforts in 2019 | The Pasture](https://thephd.github.io/getting-there-standardization-in-2019)
* [python - What are the differences between Conda and Anaconda - Stack Overfl](https://stackoverflow.com/questions/30034840/what-are-the-differences-between-conda-and-anaconda)
* [Using the GNU Compiler Collection (GCC)](https://gcc.gnu.org/onlinedocs/gcc-3.2/gcc/Variable-Attributes.html#Variable%20Attributes)
* [整理了Google一些最新高频面经题，求大神指教【一亩三分地论坛美国面经版】 -](https://www.1point3acres.com/bbs/forum.php?mod=viewthread&tid=429386&extra=)
* [【譯】使用 GNU stow 管理你的點文件 - Farseerfc的小窩](https://farseerfc.me/using-gnu-stow-to-manage-your-dotfiles.html)
* [How to use GNU Stow to manage programs installed from source and dotfiles -](https://linuxconfig.org/how-to-use-gnu-stow-to-manage-programs-installed-from-source-and-dotfiles)
* [Hacker News](http://hn.premii.com/#/comments/18788244)
* [EssentialC.pdf](http://cslibrary.stanford.edu/101/EssentialC.pdf)
* [AI Conference Deadlines](https://aideadlin.es/?sub=ML,CV,NLP,RO,SP,DM)
* [知其变，守其恒，为天下式](https://ice1000.org/lagda/MuGenHackingToTheGate.html)
* [Definitions and ODR - cppreference.com](https://en.cppreference.com/w/cpp/language/definition)
* [透过 Linux 内核看无锁编程](https://www.ibm.com/developerworks/cn/linux/l-cn-lockfree/index.html)
* [Are there any laws for filterable structures? : haskellquestions](https://www.reddit.com/r/haskellquestions/comments/aaur45/are_there_any_laws_for_filterable_structures/)
* [From Encrypting the Web to Encrypting the Net: 2018 Year in Review | Electr](https://www.eff.org/deeplinks/2018/12/encrypting-web-encrypting-net-year-review)
* [The Science of Deep Specification](https://deepspec.org/main)
* [Infer static analyzer | Infer](https://fbinfer.com/)
* [https://www.v2ex.com/t/518773](https://www.v2ex.com/t/518773)
* [层级锁 - Lock Hierarchies | yi's weblog](http://zhengyi.me/2018/04/11/what-is-lock-hierarchy/)
* [AcFunDanMu/README.md at master · MeiK-h/AcFunDanMu](https://github.com/MeiK-h/AcFunDanMu/blob/master/README.md)
* [dynamic-programming.pdf](https://cs.stanford.edu/~danqi/misc/dynamic-programming.pdf)
* [divide-and-conquer](https://cs.stanford.edu/~danqi/misc/divide-and-conquer.pdf)
* [python - How do I pass a variable by reference? - Stack Overflow](https://stackoverflow.com/questions/986006/how-do-i-pass-a-variable-by-reference)
* [methods - Is Java "pass-by-reference" or "pass-by-value"? - Stack Overflow](https://stackoverflow.com/questions/40480/is-java-pass-by-reference-or-pass-by-value)
* [東京大学 大学院 情報理工学系研究科](http://www.i.u-tokyo.ac.jp/edu/course/ipc/admission.shtml)
* [东京帝国大学，远没你想得那么简单，这就是日本技术宅的极致。](https://www.douban.com/note/257129661/)
* [P3385 【模板】负环 题解](https://www.luogu.org/problemnew/solution/P3385?&page=3)
* [luogu-dev/cyaron: CYaRon: Yet Another Random Olympic-iNformatics test data](https://github.com/luogu-dev/cyaron)
* [algorithms - Increase-key and decrease-key in a binary min-heap - Computer](https://cs.stackexchange.com/questions/10203/increase-key-and-decrease-key-in-a-binary-min-heap)
* [TR-07-54.dvi](http://www3.cs.stonybrook.edu/~rezaul/papers/TR-07-54.pdf)
* [data structures - Why does Dijkstra's algorithm use decrease-key? - Stack O](https://stackoverflow.com/questions/9255620/why-does-dijkstras-algorithm-use-decrease-key)
* [algorithm - How to update elements within a heap? (priority queue) - Stack](https://stackoverflow.com/questions/46996064/how-to-update-elements-within-a-heap-priority-queue)
* [(2 条消息)如何卡spfa？ - 知乎](https://www.zhihu.com/question/268382638)
* [Fibonacci堆实现的Dijkstra算法 | GreeenSY's Blog](https://greeensy.github.io/2013/04/16/Fibonacci-Dijkstra/)
* [Problem of the Week | Harvard University Department of Physics](https://www.physics.harvard.edu/academics/undergrad/problems)
* [Mozilla revives Mozilla Labs - gHacks Tech News](https://www.ghacks.net/2018/12/28/mozilla-revives-mozilla-labs/)
* [How DOOM fire was done](http://fabiensanglard.net/doom_fire_psx/)
* [Major performance (I/O?) issue in /mnt/* and in ~ (home) · Issue #873 · Mic](https://github.com/Microsoft/WSL/issues/873#issuecomment-425272829)
* [realcr/fragmentos: Datagram fragmentation system](https://github.com/realcr/fragmentos)
* [pl-docs/calling-for-language-features.md at master · FrankHB/pl-docs](https://github.com/FrankHB/pl-docs/blob/master/en-US/calling-for-language-features.md)
* [concurrency - Software mutexes and consensus number 1 - Computer Science St](https://cs.stackexchange.com/questions/63894/software-mutexes-and-consensus-number-1)
* [concurrency - Why is the consensus number for test-and-set, 2? - Computer S](https://cs.stackexchange.com/questions/33031/why-is-the-consensus-number-for-test-and-set-2)
* [【fulltopic的专栏】 - CSDN博客](https://blog.csdn.net/fulltopic)
* [Boehm.pdf](https://www.usenix.org/legacy/event/hotpar11/tech/final_files/Boehm.pdf)
* [Benign Data Races: What Could Possibly Go Wrong? | Intel® Software](https://software.intel.com/en-us/blogs/2013/01/06/benign-data-races-what-could-possibly-go-wrong)
* [请问，多个线程可以读一个变量，只有一个线程可以对这个变量进行写，到底要不要加锁？ - 知乎](https://www.zhihu.com/question/31325454)
* [Case Study: Reusing Double Dispatch for serialization – Andy G's Blog](https://gieseanw.wordpress.com/2018/12/29/reuse-double-dispatch/)
* [Stop reimplementing the virtual table and start using double dispatch – And](https://gieseanw.wordpress.com/2018/12/29/stop-reimplementing-the-virtual-table-and-start-using-double-dispatch/)
* [Porting C code to Rust- notes, questions, and request for review. : rust](https://www.reddit.com/r/rust/comments/aanedt/porting_c_code_to_rust_notes_questions_and/)
* [Applied Cryptography Engineering — Quarrelsome](https://sockpuppet.org/blog/2013/07/22/applied-practical-cryptography/)
* [Arc Length of Bézier Curves - Mathematics Stack Exchange](https://math.stackexchange.com/questions/12186/arc-length-of-b%C3%A9zier-curves)
* [A Primer on Bézier Curves](https://pomax.github.io/bezierinfo/zh-CN/)
* [How long is that Bézier? | Raph Levien’s blog](https://raphlinus.github.io/curves/2018/12/28/bezier-arclength.html)
* [Redux 入门教程（一）：基本用法 - 阮一峰的网络日志](http://www.ruanyifeng.com/blog/2016/09/redux_tutorial_part_one_basic_usages.html)
* [自述 · GitBook](https://cn.redux.js.org/)
* [Implement Your Own Automatic Differentiation with Julia in ONE day | Half I](http://blog.rogerluo.me/2018/10/23/write-an-ad-in-one-day/)
* [亚麻 OA2 超级详细【一亩三分地论坛美国面经版】 -](https://www.1point3acres.com/bbs/forum.php?mod=viewthread&tid=468231&extra=)
* [algorithm - What is the meaning of "exclusive" and "inclusive" when describ](https://stackoverflow.com/questions/39010041/what-is-the-meaning-of-exclusive-and-inclusive-when-describing-number-ranges)
* [B - Operators and Symbols - The Rust Programming Language](https://doc.rust-lang.org/book/appendix-02-operators.html)
* [rust - How do I include the end value in a range? - Stack Overflow](https://stackoverflow.com/questions/43698191/how-do-i-include-the-end-value-in-a-range)
* [rust - What does the "two periods" operator mean in the context of a &str s](https://stackoverflow.com/questions/31797599/what-does-the-two-periods-operator-mean-in-the-context-of-a-str-subscript)
* ["Modern" C Lamentations : rust](https://www.reddit.com/r/rust/comments/aaexjy/modern_c_lamentations/)
* [A Perspective on C Standardization in 2018 : cpp](https://www.reddit.com/r/cpp/comments/aaet5r/a_perspective_on_c_standardization_in_2018/)
* [A Perspective on C Standardization in 2018 | The Pasture](https://thephd.github.io/perspective-standardization-in-2018)
* [Dentrax/DLL-Injection-with-Assembly: DLL Injection to Exe with Assembly usi](https://github.com/Dentrax/DLL-Injection-with-Assembly)
* [/ TLS 1.3 /](https://www.davidwong.fr/tls13/)
* [Things I Don’t Know as of 2018 - Overreacted](https://overreacted.io/things-i-dont-know-as-of-2018/)
* [Issue 2070: allocate_shared should use allocator_traits::construct - WG21 L](https://wg21.cmeerw.net/lwg/issue2070)
* [cargo-crev and Rust 2019 fearless code reuse — Dawid Ciężarkiewicz aka `dpc](https://dpc.pw/cargo-crev-and-rust-2019-fearless-code-reuse)
* [Move the most recent commit(s) to a new branch with Git - Stack Overflow](https://stackoverflow.com/questions/1628563/move-the-most-recent-commits-to-a-new-branch-with-git)
* [media.ccc.de - 35C3 Refreshing Memories](https://media.ccc.de/b/congress/2018)
* [Implement the new-style trait solver by scalexm · Pull Request #56384 · rus](https://github.com/rust-lang/rust/pull/56384)
* [P1376R0: Summary of freestanding evening session discussions](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/p1376r0.html#definition)
* [ISO/IEC JTC1/SC22/WG21 - Papers 2018](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/)
* [p0709r0.pdf](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/p0709r0.pdf)
* [p0932r1.pdf](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/p0932r1.pdf)
* [java - Methods With Same Name as Constructor - Why? - Stack Overflow](https://stackoverflow.com/questions/3401444/methods-with-same-name-as-constructor-why)
* [What is the default initialization of an array in Java? - Stack Overflow](https://stackoverflow.com/questions/3426843/what-is-the-default-initialization-of-an-array-in-java)
* [Optimizing Rust Struct Size: A 6-month Compiler Development Project | Blind](http://camlorn.net/posts/April%202017/rust-struct-field-reordering.html)
* [Refactor type memory layouts and ABIs, to be more general and easier to opt](https://github.com/rust-lang/rust/pull/45225)
* [A massive refactoring of memory layouts has landed, meaning that types like](https://www.reddit.com/r/rust/comments/7ecic4/a_massive_refactoring_of_memory_layouts_has/)
* [n4492.pdf](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2015/n4492.pdf)
* [P0977-remember-the-vasa.pdf](http://www.stroustrup.com/P0977-remember-the-vasa.pdf)
* ["Modern" C Lamentations : cpp](https://www.reddit.com/r/cpp/comments/aabthn/modern_c_lamentations/)
* ["Modern" C Lamentations · Aras' website](http://aras-p.info/blog/2018/12/28/Modern-C-Lamentations/)
* [科普帖：深度学习中GPU和显存分析 - 知乎](https://zhuanlan.zhihu.com/p/31558973)
* [Crypto 101](https://www.crypto101.io/)
* [22 SSH Examples, Practical Tips & Tunnels | HackerTarget.com](https://hackertarget.com/ssh-examples-tunnels/)
* [How do you actually use dynamically sized types in Rust? - Stack Overflow](https://stackoverflow.com/questions/25740916/how-do-you-actually-use-dynamically-sized-types-in-rust)
* [Rust: The `?` operator · m4rw3r](https://m4rw3r.github.io/rust-questionmark-operator)
* [rfcs/0490-dst-syntax.md at master · rust-lang/rfcs](https://github.com/rust-lang/rfcs/blob/master/text/0490-dst-syntax.md)
* [generics - What does the question mark mean in a type parameter bound? - St](https://stackoverflow.com/questions/30333607/what-does-the-question-mark-mean-in-a-type-parameter-bound)
* [Array lengths don't support generic type parameters. · Issue #43408 · rust-](https://github.com/rust-lang/rust/issues/43408)
* [Yet another approach for constrained declarations](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/p1141r1.html)
* [A Simple Timer in C - Fluent C](https://www.fluentcpp.com/2018/12/28/timer-cpp/)
* [Seeing Theory](https://seeing-theory.brown.edu/#firstPage)
* [Rust 2019 | Vorner’s random stuff](https://vorner.github.io/2018/12/27/rust-2019.html)
* [Easy Postgres extensions in Rust with pg-extend-rs](https://bluejekyll.github.io/blog/rust/2018/12/27/announcing-pg-extend.html)
* [Hello](https://alf.nu/)
* [游程编码 - 维基百科，自由的百科全书](https://zh.wikipedia.org/wiki/%E6%B8%B8%E7%A8%8B%E7%BC%96%E7%A0%81)
* [Asterisk 何德何能？ - V2EX](https://www.v2ex.com/t/521749#reply10)
* [How assignment works with python list slice - Stack Overflow](https://stackoverflow.com/questions/10623302/how-assignment-works-with-python-list-slice)
* [Constraints and concepts (since C 20) - cppreference.com](https://en.cppreference.com/w/cpp/language/constraints)
* [Concepts library (C 20) - cppreference.com](https://en.cppreference.com/w/cpp/concepts)
* [Consistency Models Explained Briefly - A Foo walks into a Bar... - blog by](http://coldattic.info/post/88/)
* [multithreading - If I use locks, can my algorithm still be lock-free? - Sof](https://softwareengineering.stackexchange.com/questions/141271/if-i-use-locks-can-my-algorithm-still-be-lock-free/307954)
* [无锁和无等待的定义和例子 | 并发编程网 – ifeve.com](http://ifeve.com/lock-free-and-wait-free/)
* [concurrency - Why is quiescent consistency compositional, but sequential co](https://cs.stackexchange.com/questions/54748/why-is-quiescent-consistency-compositional-but-sequential-consistency-is-not)
* [What are the differences between sequential consistency and quiescent consi](https://stackoverflow.com/questions/26089729/what-are-the-differences-between-sequential-consistency-and-quiescent-consistenc)
* [线性一致性(Linear consistency)，串行一致性(或顺序一致性Sequential consistency)，静态一致性(Quiesce](https://jnxnj.wordpress.com/2009/01/30/%E7%BA%BF%E6%80%A7%E4%B8%80%E8%87%B4%E6%80%A7linear-consistency%EF%BC%8C%E4%B8%B2%E8%A1%8C%E4%B8%80%E8%87%B4%E6%80%A7%E6%88%96%E9%A1%BA%E5%BA%8F%E4%B8%80%E8%87%B4%E6%80%A7sequential-consistency/)
* [炉石卡组代码解析 | 米米的博客](https://zhangshuqiao.org/2018-12/%E7%82%89%E7%9F%B3%E5%8D%A1%E7%BB%84%E4%BB%A3%E7%A0%81%E8%A7%A3%E6%9E%90/)
* [media.ccc.de - "The" Social Credit System](https://media.ccc.de/v/35c3-9904-the_social_credit_system)
* [Session types in programming languages---a collection of implementations. |](http://simonjf.com/2016/05/28/session-type-implementations.html)
* [Hacker News](http://hn.premii.com/#/comments/18772873)
* [cling/ClingTheLLVM-basedInterpreter.pdf at master · root-project/cling](https://github.com/root-project/cling/blob/master/www/docs/talks/ClingTheLLVM-basedInterpreter.pdf)
* [cling/www/docs/talks at master · root-project/cling](https://github.com/root-project/cling/tree/master/www/docs/talks)
* [The Complete List of Penetration Testing Tools](https://pentest-tools.com/alltools)
* [Document Metadata Extractor | Pentest-Tools.com](https://pentest-tools.com/information-gathering/metadata-extractor-online)
* [Data Science 面试准备笔记 资料【一亩三分地论坛数据科学版】 -](https://www.1point3acres.com/bbs/forum.php?mod=viewthread&tid=461877&extra=)
* [OpenWPM_1_million_site_tracking_measurement.pdf](http://randomwalker.info/publications/OpenWPM_1_million_site_tracking_measurement.pdf)
* [http://pgbovine.net/teaching-large-courses.htm](http://pgbovine.net/teaching-large-courses.htm)
* [Censys](https://censys.io/)
* [什么叫做“滚挂”？ - V2EX](https://www.v2ex.com/t/521402#reply32)
* [Thoughts on Rust in 2019](https://words.steveklabnik.com/thoughts-on-rust-in-2019)
* [Challenge your performance intuition with C operators](http://wordsandbuttons.online/challenge_your_performance_intuition_with_cpp_operators.html)
* [drujensen/fib: Performance Benchmark of top Github languages](https://github.com/drujensen/fib)
* [Chris's Wiki :: blog/sysadmin/TarFindingTruncateBug](https://utcc.utoronto.ca/~cks/space/blog/sysadmin/TarFindingTruncateBug)
* [Advent of Haskell – Martín Valdés de León – Medium](https://medium.com/@mvaldesdeleon/advent-of-haskell-950d6408a729)
* [Lisp机器 - 维基百科，自由的百科全书](https://zh.wikipedia.org/wiki/Lisp%E6%9C%BA%E5%99%A8)
* [Java processor - Wikipedia](https://en.wikipedia.org/wiki/Java_processor)
* [C and Beyond 2012: Herb Sutter - atomic Weapons 1 of 2 - YouTube](https://www.youtube.com/watch?v=A8eCGOqgvH4)
* [An Introduction to Lock-Free Programming](https://preshing.com/20120612/an-introduction-to-lock-free-programming/)
* [c - Can num be atomic for 'int num'? - Stack Overflow](https://stackoverflow.com/questions/39393850/can-num-be-atomic-for-int-num/39396999#39396999)
* [The as-if rule - cppreference.com](https://en.cppreference.com/w/cpp/language/as_if)
* [c - Does sequenced-before relation in C 11 prevent compiler/CPU reorderi](https://stackoverflow.com/questions/25287484/does-sequenced-before-relation-in-c11-prevent-compiler-cpu-reordering)
* [c - Can non-atomic-load be reordered after atomic-acquire-load? - Stack O](https://stackoverflow.com/questions/38677061/can-non-atomic-load-be-reordered-after-atomic-acquire-load)
* [CPU Reordering – What is actually being reordered? – Musing Mortoray](https://mortoray.com/2010/11/18/cpu-reordering-what-is-actually-being-reordered/)
* [c - Why don't compilers merge redundant std::atomic writes? - Stack Overf](https://stackoverflow.com/questions/45960387/why-dont-compilers-merge-redundant-stdatomic-writes)
* [P0062R1: When should compilers optimize atomics?](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2016/p0062r1.html)
* [c - Can and does the compiler optimize out two atomic loads? - Stack Over](https://stackoverflow.com/questions/41820539/can-and-does-the-compiler-optimize-out-two-atomic-loads)
* [WG21/N2338: Concurrency memory model compiler consequences](http://www.open-std.org/JTC1/SC22/WG21/docs/papers/2007/n2338.html)
* [c - May compiler optimizations be inhibited by multi-threading? - Stack O](https://stackoverflow.com/questions/16807766/may-compiler-optimizations-be-inhibited-by-multi-threading)
* [PDF - ForensicsWiki](https://www.forensicswiki.org/wiki/PDF)
* [purecpp - a cool open source modern c community](http://purecpp.org/detail?id=2068)
* [https://stackoverflow.com/a/45971285/8563711](https://stackoverflow.com/a/45971285/8563711)
* [Java提高篇——静态代码块、构造代码块、构造函数以及Java类初始化顺序 - 萌小Q - 博客园](https://www.cnblogs.com/Qian123/p/5713440.html)
* [Barry Revzin](https://brevzin.github.io/posts/)
* [Fluent Polymorphism with Visible Type Applications](https://blog.sumtypeofway.com/fluent-polymorphism-with-visible-type-applications/)
* [Generate automatically async/await code from sync code with Roslyn | xoofx](http://xoofx.com/blog/2018/12/26/generate-async-from-sync-code-with-roslyn/)
* [Ranges, Code Quality, and the future of C – Jason Meisel – Medium](https://medium.com/@jasonmeisel/ranges-code-quality-and-the-future-of-c-99adc6199608)
* [graydon2 | Rust 2019 and beyond: limits to (some) growth.](https://graydon2.dreamwidth.org/263429.html)
* [一种防机器识别的网页文字加密方法 - 简书](https://www.jianshu.com/p/1c65fcd30c4b)
* [On Rust — Bill de hÓra](https://dehora.net/journal/2018/12/23/on-rust)
* [Visualizing Crates.io](https://8-p.info/visualizing-crates-io/)
* [Fermat's Library | One-sentence proof of Fermat's theorem on sums of two sq](https://fermatslibrary.com/s/a-one-sentence-proof-of-fermats-theorem-on-sums-of-two-squares#email-newsletter)
* [EOS 回滚攻击手法分析之黑名单篇](https://paper.seebug.org/773/)
* [前端娱乐圈大事记](http://qianduanyule.club/)
* [(13 条消息)为什么有些前端一直用 div 当按钮，而不是用 button，难道他们不知道语义化吗？ - 知乎](https://www.zhihu.com/question/296706208)
* [What is accessibility? | MDN](https://developer.mozilla.org/zh-CN/docs/Learn/Accessibility/What_is_accessibility)
* [This Week in Rust 266 · This Week in Rust](https://this-week-in-rust.org/blog/2018/12/25/this-week-in-rust-266/)
* [purecpp - a cool open source modern c community](http://purecpp.org/detail?id=2067)
* [关于算法，那些你不知道的事 - 西代零零发 - CSDN博客](https://blog.csdn.net/dc_726/article/details/51724097)
* [Issue 45: Access to nested classes - WG21 CWG Issues](https://wg21.cmeerw.net/cwg/issue45)
* [c - Can inner classes access private variables? - Stack Overflow](https://stackoverflow.com/questions/486099/can-inner-classes-access-private-variables)
* [paper.dvi](http://erikdemaine.org/papers/BRICS2002/paper.pdf)
* [PowerPoint Presentation](http://cs.tju.edu.cn/faculty/zhangkl/aboutme/aboutcoa.pdf)
* [Cache-oblivious algorithm - Wikipedia](https://en.wikipedia.org/wiki/Cache-oblivious_algorithm)
* [Courses by Marc Moreno Maza](http://www.csd.uwo.ca/~moreno/teaching.html)
* [Implementing FFTs in Practice](https://cnx.org/contents/ulXtQbN7@15/Implementing-FFTs-in-Practice)
* [lambdaspeech :: zorg](http://lambdaway.free.fr/lambdaspeech/?view=zorg)
* [Bytecode Optimizations](http://wiki.luajit.org/Optimizations)
* [http://www.rdrop.com/users/paulmck/scalability/paper/whymb.2009.04.05a.pdf](http://www.rdrop.com/users/paulmck/scalability/paper/whymb.2009.04.05a.pdf)
* [HowTo: Find Out My Linux Distribution Name and Version - nixCraft](https://www.cyberciti.biz/faq/find-linux-distribution-name-version-number/)
* [Practical C value categories - It's compiling.](http://itscompiling.eu/2016/05/12/practical-cpp-value-categories/)
* [Chained Functions Break Reference Lifetime Extension](http://cpptruths.blogspot.com/2018/10/chained-functions-break-reference.html)
* [abseil / Tip of the Week #107: Reference Lifetime Extension](https://abseil.io/tips/107)
* [Issue 2012: Lifetime of references - WG21 CWG Issues](https://wg21.cmeerw.net/cwg/issue2012)
* [Lifetime - cppreference.com](https://en.cppreference.com/w/cpp/language/lifetime)
* [Value categories - cppreference.com](https://en.cppreference.com/w/cpp/language/value_category)
* [主页 -- 耻球学派・改三](https://www.chikyuuschool.com/)
* [compiler-rt/divdf3.c at master · llvm-mirror/compiler-rt](https://github.com/llvm-mirror/compiler-rt/blob/master/lib/builtins/divdf3.c#L92)
* [c_lang_cn](https://chikyuuschool.com/c_lang_cn/)
* [Real World CTF 2018 rwext5命題報告 | MaskRay](https://maskray.me/blog/2018-12-09-real-world-ctf-2018-rwext5)
* [c - What is a "Regular Type" in the context of move semantics? - Stack Ov](https://stackoverflow.com/questions/13998945/what-is-a-regular-type-in-the-context-of-move-semantics)
* [Technitium Blog: Configuring DNS-over-TLS and DNS-over-HTTPS with any DNS S](https://blog.technitium.com/2018/12/configuring-dns-over-tls-and-dns-over.html)
* [Blog — Inverse Palindrome](https://inversepalindrome.com/blog/)
* [Diggsey/aoc2018: Rust solutions to the Advent Of Code 2018](https://github.com/Diggsey/aoc2018)
* [capo/singleton.hpp at master · mutouyun/capo](https://github.com/mutouyun/capo/blob/master/capo/singleton.hpp)
* [Variable template(since C 14) - cppreference.com](https://en.cppreference.com/w/cpp/language/variable_template)
* [c - __attribute__((constructor)) equivalent in VC? - Stack Overflow](https://stackoverflow.com/questions/1113409/attribute-constructor-equivalent-in-vc)
* [(19 条消息)正则表达式如何匹配 3 的倍数？ - 知乎](https://www.zhihu.com/question/24824487)
* [Michael Fogleman](https://www.michaelfogleman.com/aoc18/)
* [Ruby 2.6](https://anamaria.martinezgomez.name/2018/12/21/ruby2_6.html)
* [Compiler Fuzzing through Deep Learning](http://homepages.inf.ed.ac.uk/hleather/publications/2018_deepfuzzing_issta.pdf)
* [LKML: Linus Torvalds: Linux 4.20 released..](https://lkml.org/lkml/2018/12/23/187)
* [How to Optimize Components to Improve React Performance | Toptal](https://www.toptal.com/react/optimizing-react-performance)
* [经过技术选型研究，我们放弃了 React，转向 Vue - V2EX](https://www.v2ex.com/t/519999?p=2)
* [(11 条消息)如何理解皮尔逊相关系数（Pearson Correlation Coefficient）？ - 知乎](https://www.zhihu.com/question/19734616)
* [Schneier on Security](https://www.schneier.com/)
* [The JRPG Startup Cost « Significant Bits](http://www.significant-bits.com/the-jrpg-startup-cost/)
* [吴小林直线算法 - 维基百科，自由的百科全书](https://zh.wikipedia.org/wiki/%E5%90%B4%E5%B0%8F%E6%9E%97%E7%9B%B4%E7%BA%BF%E7%AE%97%E6%B3%95)
* [Xiaolin Wu’s fast antialiased line drawing algorithm in Haskell](https://blog.rcook.org/blog/2018/xiaolin-wu-algorithm/)
* [Who are some good cppcon speakers especially for scientific computing? : cp](https://www.reddit.com/r/cpp/comments/a8ws6r/who_are_some_good_cppcon_speakers_especially_for/)
* [GTK Programming with Haskell | Haskell at Work](https://haskell-at-work.com/episodes/2018-11-13-gtk-programming-with-haskell.html)
* [Overloading · haskell-gi/haskell-gi Wiki](https://github.com/haskell-gi/haskell-gi/wiki/Overloading)
* [10.1\. Language options — Glasgow Haskell Compiler 8.6.2 User's Guide](https://downloads.haskell.org/~ghc/latest/docs/html/users_guide/glasgow_exts.html#extension-OverloadedLabels)
* [MySlide - 专注PPT分享，追随SlideShare和SpeakerDeck的脚步](https://myslide.cn/)
* [haskell - Is there a function to flatten a nested list of elements? - Stack](https://stackoverflow.com/questions/5994051/is-there-a-function-to-flatten-a-nested-list-of-elements)
* [HowToBeAProgrammer.pdf](https://www.doc.ic.ac.uk/~susan/475/HowToBeAProgrammer.pdf)

### 2018-01-15 - 2019-03-05
* [Kona: A trip report | cor3ntin](https://cor3ntin.github.io/posts/kona2019/#modules)
* [Are C Modules Dead-on-Arrival?](https://vector-of-bool.github.io/2019/03/04/modules-doa-2.html)
* [What are covariance and contravariance? | Stephan Boyer](https://www.stephanboyer.com/post/132/what-are-covariance-and-contravariance)
* [Is C# a low-level language? · Performance is a Feature!](https://mattwarren.org/2019/03/01/Is-CSharp-a-low-level-language/)
* [aphyr/distsys-class: Class materials for a distributed systems lecture seri](https://github.com/aphyr/distsys-class)
* [kenwoodjw/python_interview_question: 关于python的面试题](https://github.com/kenwoodjw/python_interview_question)
* [问题求解 - 帖子 - LibreOJ](https://loj.ac/article/418)
* [Async-await status report](http://smallcultfollowing.com/babysteps/blog/2019/03/01/async-await-status-report/)
* [The Kernel Boot Process | Many But Finite](https://manybutfinite.com/post/kernel-boot-process/)
* [Kona: A trip report | cor3ntin](https://cor3ntin.github.io/posts/kona2019/)
* [p1063r2.pdf](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2019/p1063r2.pdf)
* [Foldable and Traversable | Jakub Arnold Blog](https://blog.jakuba.net/2014/07/30/Foldable-and-Traversable/)
* [These Years in Common Lisp 2018 - Lisp journey](https://lisp-journey.gitlab.io/blog/these-years-in-common-lisp-2018/)
* [《GoForCPPProgrammers》中文翻译 - Go与C 的异同 - Eagle](https://www.eaglexiang.org/goforcppprogrammers_zh_cn)
* [RMM2019-Day1-English.pdf](http://rmms.lbi.ro/rmm2019/pr/RMM2019-Day1-English.pdf)
* [Multi-dimensional Vectorization in LLVM](http://compilers.cs.uni-saarland.de/papers/moll_tensorrv_wpmvp19.pdf)
* [abseil / What Should Go Into the C Standard Library](https://abseil.io/blog/20180227-what-should-go-stdlib)
* [Tutorial: When to Write Which Special Member - foonathan::blog()](https://foonathan.net/blog/2019/02/26/special-member-functions.html)
* [Index of /Meeting_Papers/BlackHat/](https://paper.bobylive.com/Meeting_Papers/BlackHat/)
* [1\. Extending Python with C or C — Python 3.7.2 documentation](https://docs.python.org/3/extending/extending.html#calling-python-functions-from-c)
* [Embedding Python in Your C Programs | Linux Journal](https://www.linuxjournal.com/article/8497)
* [Extending and Embedding the Python Interpreter — Python 3.7.2 documentation](https://docs.python.org/3/extending/)
* [The Unscalable, Deadlock-prone, Thread Pool - Paul Khuong: some Lisp](https://pvk.ca/Blog/2019/02/25/the-unscalable-thread-pool/)
* [java - Why is it faster to process a sorted array than an unsorted array? -](https://stackoverflow.com/questions/11227809/why-is-it-faster-to-process-a-sorted-array-than-an-unsorted-array#11227902)
* [(1 封私信 / 26 条消息)CPU 的分支預測器是怎樣工作的？ - 知乎](https://www.zhihu.com/question/23973128)
* [regex - converting context free grammer into regular expression - Stack Ove](https://stackoverflow.com/questions/22994440/converting-context-free-grammer-into-regular-expression)
* [research!rsc: An Encoded Tree Traversal](https://research.swtch.com/treenum)
* [Introducing battery crate · svartalf](https://svartalf.info/posts/2019-02-25-introducing-battery-crate/)
* [The CPython Bytecode Compiler is Dumb « null program](https://nullprogram.com/blog/2019/02/24/)
* [Typora XSS 到 RCE（下） - 安全客，安全资讯平台](https://www.anquanke.com/post/id/170756)
* [Trip report: Winter ISO C standards meeting (Kona) | Sutter’s Mill](https://herbsutter.com/2019/02/23/trip-report-winter-iso-c-standards-meeting-kona/)
* [2019-02 Kona ISO C Committee Trip Report (C 20 design is complete; Modul](https://www.reddit.com/r/cpp/comments/au0c4x/201902_kona_iso_c_committee_trip_report_c20/)
* [Hacker News](http://hn.premii.com/#/comments/19224579)
* [Real World Technologies - Forums - Thread: ARM announces Ares](https://www.realworldtech.com/forum/?threadid=183440&curpostid=183486)
* [How to Run SQL on PDF Files](https://rockset.com/blog/how-to-run-sql-on-pdf-files/)
* [Why is C's void type not analogous to the empty/bottom type? - Computer Sci](https://cs.stackexchange.com/questions/63203/why-is-cs-void-type-not-analogous-to-the-empty-bottom-type)
* [bock_dependent_types.pdf](https://www.uio.no/studier/emner/matnat/ifi/nedlagte-emner/INF5160/h13/timeplan/bock_dependent_types.pdf)
* [宏定义黑魔法-从入门到奇技淫巧 (3) - function-like 的宏展开 - 知乎](https://zhuanlan.zhihu.com/p/27019165)
* [Template meta-programming: Some testing and debugging tricks | Ivan Čukić](https://cukic.co/2019/02/19/tmp-testing-and-debugging-templates/)
* [从i9 9990XE起谈Intel产品线设计 - 哔哩哔哩](https://www.bilibili.com/read/cv2076835)
* [CPU频率、睿频、功耗与主板相关 - 哔哩哔哩](https://www.bilibili.com/read/cv2034602)
* [装机中需要了解的PCIe的标准与坑 - 哔哩哔哩](https://www.bilibili.com/read/cv2014415)
* [zeuxcg.org - Flavors of SIMD](https://zeuxcg.org/2019/02/17/flavors-of-simd/)
* [Explaining Code using ASCII Art – Embedded in Academia](https://blog.regehr.org/archives/1653)
* [Why is creating a new process more expensive on Windows than Linux? - Stack](https://stackoverflow.com/questions/47845/why-is-creating-a-new-process-more-expensive-on-windows-than-linux)
* [Bartek's coding blog: Five Awesome C Papers For Kona 2019 ISO Meeting](https://www.bfilipek.com/2019/02/papers-kona.html#p0798-monadic-operations-for-stdoptional)
* [Jessie Frazelle's Blog: 10 LDFLAGS I Love](https://blog.jessfraz.com/post/top-10-favorite-ldflags/)
* [Jessie Frazelle's Blog: LD_PRELOAD: The Hero We Need and Deserve](https://blog.jessfraz.com/post/ld_preload/)
* [Low-Cost Deterministic C Exceptions for Embedded Systems](https://www.research.ed.ac.uk/portal/files/78829292/low_cost_deterministic_C_exceptions_for_embedded_systems.pdf)
* [The C Preprocessor: Common Predefined Macros](http://gcc.gnu.org/onlinedocs/cpp/Common-Predefined-Macros.html)
* [Explore C 20 Bit Flag with Designated Initializer and Concepts](https://dreamdota.com/explore-c-20-bitmask-design/)
* [The future of Catch2 — The Coding Nest](https://codingnest.com/the-future-of-catch2/)
* [Amazon OA 1](https://aonecode.com/getArticle/215)
* [CASS 2018 | Slides Videos](https://www.cse.iitk.ac.in/users/biswap/CASS18/slides.html)
* [Fast Perfect Hashing Of Integral Types · J. Andrew Rogers](http://www.jandrewrogers.com/2019/02/12/fast-perfect-hashing/)
* [security.txt | A proposed standard which allows websites to define security](https://securitytxt.org/)
* [Laurence Tratt: A Quick Look at Trait Objects in Rust](https://tratt.net/laurie/blog/entries/a_quick_look_at_trait_objects_in_rust.html)
* [ACCU :: CPU Clocks and Clock Interrupts, and Their Effects on Schedulers](https://accu.org/index.php/journals/2185)
* [McCarthy's Ambiguous Operator | Random Hacks](http://www.randomhacks.net/2005/10/11/amb-operator/)
* [Generators I: Toward a minimum viable product](https://boats.gitlab.io/blog/post/generators-i/)
* [John Regehr 的 Twitter: “please contribute to this thread by replying with b](https://twitter.com/johnregehr/status/1095018518737637376)
* [List of bug bounty writeups](https://paper.seebug.org/802/)
* [__asmbits](https://asmbits.blogspot.com/)
* [Wayland misconceptions debunked | Drew DeVault’s Blog](https://drewdevault.com/2019/02/10/Wayland-misconceptions-debunked.html)
* [Coroutines in less than 20 lines of standard C - Tony Finch's blog](https://fanf.livejournal.com/105413.html)
* [python - PLY - return multiple tokens - Stack Overflow](https://stackoverflow.com/questions/28259366/ply-return-multiple-tokens)
* [PEP 563 -- Postponed Evaluation of Annotations | Python.org](https://www.python.org/dev/peps/pep-0563/)
* [c - std::vector initialization move/copy constructor of the element - Sta](https://stackoverflow.com/questions/24793019/stdvector-initialization-move-copy-constructor-of-the-element/24793143#24793143)
* [Beware of copies with std::initializer_list!](https://tristanbrindle.com/posts/beware-copies-initializer-list)
* [Ringing in a new asynchronous I/O API [LWN.net]](https://lwn.net/Articles/776703/)
* [Build me a LISP — kirit.com](https://kirit.com/Build%20me%20a%20LISP)
* [Status on extensions for structured bindings : cpp](https://www.reddit.com/r/cpp/comments/aofd95/status_on_extensions_for_structured_bindings/)
* [Inside the STL: the implementation of rotate – awfulcode.io](https://awfulcode.io/2019/02/07/inside-the-stl-the-implementation-of-rotate/)
* [The Language Design Meta-Problem • The Adamant Programming Language Blog](https://blog.adamant-lang.org/2019/the-meta-problem/)
* [Learning the Rust Programming Language - Aaron Greenlee](https://www.aarongreenlee.com/blog/beginning-to-learn-rust-programming-language-rustlang/)
* [The steps towards rustc, the great optimiser](https://kazlauskas.me/entries/the-road-to-bestest-optimiser.html)
* [Part 0: Setup – New Coder](http://newcoder.io/dataviz/part-0/)
* [Bash scripting cheatsheet](https://devhints.io/bash)
* [Programming Z3](https://theory.stanford.edu/~nikolaj/programmingz3.html)
* [https://stackoverflow.com/a/22265239/8563711](https://stackoverflow.com/a/22265239/8563711)
* [c - How does the number of braces affect uniform initialization? - Stack](https://stackoverflow.com/questions/54504463/how-does-the-number-of-braces-affect-uniform-initialization)
* [LeetCode全部题目-我的机器能学习](http://206.81.6.248:12306/leetcode/algorithm)
* [Circular (or cyclic) imports in Python - Stack Overflow](https://stackoverflow.com/questions/744373/circular-or-cyclic-imports-in-python)
* [Which CI platform should Rust use? - tools and infrastructure - Rust Intern](https://internals.rust-lang.org/t/which-ci-platform-should-rust-use/9322/9)
* [整数分拆 - 维基百科，自由的百科全书](https://zh.wikipedia.org/wiki/%E6%95%B4%E6%95%B8%E5%88%86%E6%8B%86)
* [贝尔数 - 维基百科，自由的百科全书](https://zh.wikipedia.org/wiki/%E8%B4%9D%E5%B0%94%E6%95%B0)
* [A proposed API for full-memory encryption [LWN.net]](https://lwn.net/Articles/776688/)
* [给类型求导 - 知乎](https://zhuanlan.zhihu.com/p/20570808)
* [Lock-free Rust: Crossbeam in 2019 | stjepang.github.io](https://stjepang.github.io/2019/01/29/lock-free-rust-crossbeam-in-2019.html)
* [c - NCURSES border printing as q, x, when using UTF-8 and PuTTY - Stack O](https://stackoverflow.com/questions/41389568/ncurses-border-printing-as-q-x-when-using-utf-8-and-putty)
* [[EN] Down the Rabbit Hole - Part I: A Journey into the UEFI Land | erfur's](https://erfur.github.io/down_the_rabbit_hole_pt1/)
* [Lorem Ipsum – Generator, Origins and Meaning](https://loremipsum.io/)
* [Writing a Hyper-V “Bridge” for Fuzzing — Part 2 : Hypercalls & MDLs – Alex](http://www.alex-ionescu.com/?p=471)
* [Racket-on-Chez Status: January 2019](https://blog.racket-lang.org/2019/01/racket-on-chez-status.html)
* [Comparison of parser generators - Wikipedia](https://en.wikipedia.org/wiki/Comparison_of_parser_generators)
* [Understanding parsers generated by GNU Bison](https://www.cs.uic.edu/~spopuri/cparser.html)
* [The case for network-accelerated query processing | the morning paper](https://blog.acolyer.org/2019/01/28/the-case-for-network-accelerated-query-processing/)
* [C Modules Might Be Dead-On-Arrival | Hacker News](https://news.ycombinator.com/item?id=19015079)
* [Home · ssloy/tinykaboom Wiki](https://github.com/ssloy/tinykaboom/wiki)
* [Rust now, on average, outperforms C in The Benchmarks Game by 3%, and is](https://www.reddit.com/r/rust/comments/akluxx/rust_now_on_average_outperforms_c_in_the/)
* [cliffordwolf/xbitmanip: RISC-V XBitmanip Extension](https://github.com/cliffordwolf/xbitmanip)
* [Swizzle Inventor: Data Movement Synthesis for GPU Kernels • Publications •](https://lenary.co.uk/publications/swizzle_inventor/)
* [Advanced Paging | Writing an OS in Rust](https://os.phil-opp.com/advanced-paging/)
* [Bison 3.3 released [stable]](http://lists.gnu.org/archive/html/info-gnu/2019-01/msg00016.html)
* [Revisiting Rust’s modules · Aaron Turon](https://aturon.github.io/blog/2017/07/26/revisiting-rusts-modules/)
* [Pre-Kona 2019 C Standards Mailing - 177 Papers! : cpp](https://www.reddit.com/r/cpp/comments/ajy361/prekona_2019_c_standards_mailing_177_papers/)
* [A Self-Learning, Modern Computer Science Curriculum](https://functionalcs.github.io/curriculum/#introduction-to-parallel-and-sequential-algorithms)
* [linux_perf_tools_full.png (3000×2100)](http://www.brendangregg.com/Perf/linux_perf_tools_full.png)
* [C Modules Might Be Dead-on-Arrival](https://vector-of-bool.github.io/2019/01/27/modules-doa.html)
* [n-body Rust #7 program | Computer Language Benchmarks Game](https://benchmarksgame-team.pages.debian.net/benchmarksgame/program/nbody-rust-7.html)
* [Linux内存取证：解析用户空间进程堆（上） - 嘶吼 RoarTalk – 回归最本质的信息安全,互联网安全新媒体,4hou.com](http://www.4hou.com/technology/15826.html)
* [Meta issue for FIXMEs that reference closed issues · Issue #44366 · rust-la](https://github.com/rust-lang/rust/issues/44366)
* [Troels Henriksen's website | Programming Languages and Curly Braces](http://sigkill.dk/writings/braces.html)
* [Why Is It so Hard to Detect Keyup Event on Linux?](http://blog.robertelder.org/detect-keyup-event-linux-terminal/)
* [Future JavaScript: what is still missing?](http://2ality.com/2019/01/future-js.html)
* [GPU 不能完全取代 CPU 的最大原因是什么？ - 知乎](https://www.zhihu.com/question/22219245)
* [p1408r0.pdf](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2019/p1408r0.pdf)
* [A Proposal for the World's Dumbest Smart Pointer, v4](http://open-std.org/JTC1/SC22/WG21/docs/papers/2014/n4282.pdf)
* [westerndigitalcorporation/swerv_eh1: A directory of Western Digital’s RISC-](https://github.com/westerndigitalcorporation/swerv_eh1)
* [Kafka 源码分析系列 · Issue #7 · wangzzu/awesome](https://github.com/wangzzu/awesome/issues/7)
* [Iptables Essentials: Common Firewall Rules and Commands | DigitalOcean](https://www.digitalocean.com/community/tutorials/iptables-essentials-common-firewall-rules-and-commands)
* [Rust RFC: Opt-in builtin traits](http://smallcultfollowing.com/babysteps/blog/2014/02/28/rust-rfc-opt-in-builtin-traits/)
* [What is an auto trait in Rust? - Stack Overflow](https://stackoverflow.com/questions/49710852/what-is-an-auto-trait-in-rust)
* [CockroachDB's Consistency Model | Cockroach Labs](https://www.cockroachlabs.com/blog/consistency-model/)
* [VanRoy-Programming.pdf](http://hiperc.buffalostate.edu/courses/ACM612-F15/uploads/ACM612/VanRoy-Programming.pdf)
* [CyberZHG/toolbox: https://cyberzhg.github.io/toolbox/](https://github.com/CyberZHG/toolbox/tree/gh-pages)
* [Regex => NFA => DFA](https://cyberzhg.github.io/toolbox/nfa2dfa)
* [Bison shift/reduce conflict / reduce/reduce conflict warnings - Stack Overf](https://stackoverflow.com/questions/32821775/bison-shift-reduce-conflict-reduce-reduce-conflict-warnings/32826695#32826695)
* [Shift/Reduce (Bison 3.2.2)](https://www.gnu.org/software/bison/manual/html_node/Shift_002fReduce.html)
* [bison - Reforming the grammar to remove shift reduce conflict in if-then-el](https://stackoverflow.com/questions/12731922/reforming-the-grammar-to-remove-shift-reduce-conflict-in-if-then-else)
* [Understanding (Bison 3.2.2)](https://www.gnu.org/software/bison/manual/html_node/Understanding.html)
* [parsing - How to detect shift/reduce conflicts in bison? - Stack Overflow](https://stackoverflow.com/questions/50114910/how-to-detect-shift-reduce-conflicts-in-bison)
* [DeepSpec/dsss18: Lecture material for DeepSpec Summer School 2018](https://github.com/DeepSpec/dsss18)
* [CS 7194 - Great works in Programming Languages](https://www.cs.cornell.edu/courses/cs7194/2019sp/)
* [Threads Basics](http://www.hpl.hp.com/techreports/2009/HPL-2009-259html.html)
* [C Compile-Time Exceptions – Netherlands eScience Center](https://blog.esciencecenter.nl/c-compile-time-exceptions-5443f5bf06fe)
* [foonathan::blog() - Writing Cache-Friendly C](https://foonathan.net/meetingcpp2018.html)
* [dtolnay/typetag: Serde serializable and deserializable trait objects](https://github.com/dtolnay/typetag)
* [Running Fast SQL on DynamoDB Tables](https://rockset.com/blog/running-fast-sql-on-dynamodb-tables/)
* [美国个人所得税入门科普 - 知乎](https://zhuanlan.zhihu.com/p/34562888)
* [树形背包总结 - Pat - 博客园](https://www.cnblogs.com/Patt/p/6366429.html)
* [精确覆盖问题、Algorithm X 与 Dancing Links（DLX） - 简书](https://www.jianshu.com/p/0dafcd6a6fc1)
* [Refactor type memory layouts and ABIs, to be more general and easier to opt](https://github.com/rust-lang/rust/pull/45225)
* [Why can't C compilers rearrange struct members to eliminate alignment paddi](https://stackoverflow.com/questions/9486364/why-cant-c-compilers-rearrange-struct-members-to-eliminate-alignment-padding)
* [Scoreboarding - Wikipedia](https://en.wikipedia.org/wiki/Scoreboarding)
* [Hana Dusíková 的 Twitter: “Question for the library implementers: what do yo](https://twitter.com/hankadusikova/status/1087069032916885504)
* [What should we return when pattern matching on a Higher Indutive Type and t](https://cs.stackexchange.com/questions/103146/what-should-we-return-when-pattern-matching-on-a-higher-indutive-type-and-the-ca/103151#103151)
* [知其变，守其恒，为天下式](https://ice1000.org/lagda/PathToHigherInductiveTypes.html)
* [Which block I/O scheduler is the best? We asked eBPF – Circonus](https://www.circonus.com/2019/01/which-block-i-o-scheduler-is-the-best-we-asked-ebpf/)
* [Amazon Posts L1TF/Foreshadow Demonstrator Code For The Linux Kernel - Phoro](https://www.phoronix.com/scan.php?page=news_item&px=Amazon-L1TF-Demonstrator-Code)
* [Discuss - LeetCode](https://leetcode.com/discuss/)
* [linux - Is there a difference between sudo mode and kernel mode? - Stack Ov](https://stackoverflow.com/questions/21761185/is-there-a-difference-between-sudo-mode-and-kernel-mode)
* [ucore_os_docs/lab1_3_2_1_protection_mode.md at master · chyyuu/ucore_os_doc](https://github.com/chyyuu/ucore_os_docs/blob/master/lab1/lab1_3_2_1_protection_mode.md)
* [What happens in OS when we dereference a NULL pointer in C? - Stack Overflo](https://stackoverflow.com/questions/12645647/what-happens-in-os-when-we-dereference-a-null-pointer-in-c)
* [tigerfix/patch.c at master · NiceKingWei/tigerfix](https://github.com/NiceKingWei/tigerfix/blob/master/tfix/lib/patch.c)
* [https://www.reddit.com/r/cpp/comments/ai861h/stdfilesystemfile_size_advantages_and_differences/](https://www.reddit.com/r/cpp/comments/ai861h/stdfilesystemfile_size_advantages_and_differences/)
* [Hacker News](http://hn.premii.com/#/comments/18952755)
* [Inside the C Standard Library](https://begriffs.com/posts/2019-01-19-inside-c-standard-lib.html)
* [Covariance and contravariance in C – Arthur O'Dwyer – Stuff mostly about](https://quuxplusone.github.io/blog/2019/01/20/covariance-and-contravariance/)
* [(18 条消息)微信红包的随机算法是怎样实现的？ - 知乎](https://www.zhihu.com/question/22625187)
* [The rejection of XID_Start/XID_Continue linked from the Rust issue is not,](https://news.ycombinator.com/item?id=18691441)
* [Recommendations for extended identifier characters for C and C](http://www.open-std.org/jtc1/sc22/wg14/www/docs/n1518.htm)
* [LALR语法分析器 - 维基百科，自由的百科全书](https://zh.wikipedia.org/wiki/LALR%E8%AF%AD%E6%B3%95%E5%88%86%E6%9E%90%E5%99%A8)
* [LR分析器 - 维基百科，自由的百科全书](https://zh.wikipedia.org/wiki/LR%E5%89%96%E6%9E%90%E5%99%A8)
* [LL分析器 - 维基百科，自由的百科全书](https://zh.wikipedia.org/wiki/LL%E5%89%96%E6%9E%90%E5%99%A8)
* [A Very Relatable Database: Part 1 | Nate Lincoln's Blog](https://natelincoln.com/a-very-relatable-database/part-1/)
* [Where do you think Rust will be in 3 years? : rust](https://www.reddit.com/r/rust/comments/aho6xj/where_do_you_think_rust_will_be_in_3_years/)
* [The Internals of PostgreSQL : Introduction](http://www.interdb.jp/pg/index.html)
* [Python 3 datetime.fromtimestamp fails by 1 microsecond - Stack Overflow](https://stackoverflow.com/questions/24534412/python-3-datetime-fromtimestamp-fails-by-1-microsecond)
* [[Python-Dev] Rejecting PEP 410 (Use decimal.Decimal type for timestamps)](https://mail.python.org/pipermail/python-dev/2012-February/116837.html)
* [Influencing mainstream software—Applying programming language research idea](https://www.microsoft.com/en-us/research/blog/influencing-mainstream-software-applying-programming-language-research-ideas-to-transform-spreadsheets/?OCID=msr_blog_PLspreadsheets_popl_highlights)
* [Question: How to relinquishing control to the event loop in Python 3.5 · Is](https://github.com/python/asyncio/issues/284)
* [What is the asynchronous version of yield_now? - help - The Rust Programmin](https://users.rust-lang.org/t/what-is-the-asynchronous-version-of-yield-now/24367/3)
* [Compile Time, Binary Size Reductions and C ’s future for sol3 | The Pastur](https://thephd.github.io/sol3-compile-times-binary-sizes)
* [https://www.kernel.org/doc/Documentation/locking/lockdep-design.txt](https://www.kernel.org/doc/Documentation/locking/lockdep-design.txt)
* [Dagstuhl-Open-Problems.pdf](http://web.eecs.umich.edu/~pettie/Dagstuhl-Open-Problems.pdf)
* [CS552 Course Wiki: Spring 2009 : Common Synthesis Errors and Synthesis FAQ](http://pages.cs.wisc.edu/~karu/courses/cs552/spring2009/wiki/index.php/Synthesis/CommonSynthesisErrors)
* [消失的密室: Design Compiler --- Reading Verilog Designs (analyze & elaborate)](https://stevenchen886.blogspot.com/2017/01/design-compiler-reading-verilog-designs.html?m=0)
* [Jacob Torrey 的 Twitter: “Still one of the strangest things I've learned fro](https://twitter.com/JacobTorrey/status/1086229532883980291)
* [popularity contest - Write a program that makes 2 2 = 5 - Programming Puz](https://codegolf.stackexchange.com/questions/28786/write-a-program-that-makes-2-2-5)
* [zeuxcg.org - Is C fast?](https://zeuxcg.org/2019/01/17/is-c-fast/)
* [知乎问答：求助大佬：如何编程判断一个数是否是质数？](https://www.zhihu.com/question/308322307/answer/574767625?utm_source=com.ideashower.readitlater.pro&utm_medium=social&utm_oi=831107418380447744)
* [I/O Redirection](https://www.tldp.org/LDP/abs/html/io-redirection.html)
* [How to write a rootkit without really trying | Trail of Bits Blog](https://blog.trailofbits.com/2019/01/17/how-to-write-a-rootkit-without-really-trying/)
* [The "rare write" mechanism [LWN.net]](https://lwn.net/Articles/724319/)
* [grsecurity 的 Twitter: “This code copy pasted from PaX for toggling CR0.WP i](https://twitter.com/grsecurity/status/1086021188340584449)
* [Project Zero: Taking a page from the kernel's book: A TLB issue in mremap()](https://googleprojectzero.blogspot.com/2019/01/taking-page-from-kernels-book-tlb-issue.html)
* [Why do we require `requires requires`? – Arthur O'Dwyer – Stuff mostly abou](https://quuxplusone.github.io/blog/2019/01/15/requires-requires-is-like-noexcept-noexcept/)
* [c - Implicit type conversion with template - Stack Overflow](https://stackoverflow.com/questions/9787593/implicit-type-conversion-with-template)
* [Graham Lyons | Everything You Need To Know About Networking On AWS](https://grahamlyons.com/article/everything-you-need-to-know-about-networking-on-aws)
* [reference - why is "&&" being used here? - Stack Overflow](https://stackoverflow.com/questions/43828013/why-is-being-used-here)
* [Karol Kuczmarski's Blog – patterns](http://xion.io/post/code/rust-patterns-ref.html)
* [Patterns](https://doc.rust-lang.org/1.5.0/book/patterns.html)
* [The Little Book of Rust Macros](https://danielkeep.github.io/tlborm/book/index.html)
* [Procedural Macros in Rust 2018 | Rust Blog](https://blog.rust-lang.org/2018/12/21/Procedural-Macros-in-Rust-2018.html)
* [A Quick Intro to Rust Macros](https://danielkeep.github.io/quick-intro-to-macros.html)
* [Python功能点实现：数据热更新 - 简书](https://www.jianshu.com/p/2d31f1c7ef63)
* [MIT 6.824 分布式课程 Raft日志分发实现 - 知乎](https://zhuanlan.zhihu.com/p/40912659)
* [词法分析 | DFA 的最小化：Hopcroft 算法 - 知乎](https://zhuanlan.zhihu.com/p/31166841)
* [What are Cell and RefCell used for? : rust](https://www.reddit.com/r/rust/comments/4cvc3o/what_are_cell_and_refcell_used_for/)
* [The Evolution of a Rust Programmer](http://antoyo.ml/evolution-rust-programmer)
* [How do I get the effect of C#’s async void in a C coroutine? Part 1: Why](https://blogs.msdn.microsoft.com/oldnewthing/20190116-00/?p=100715)
* [Rust in 2019: Security, Maturity, Stability](https://tonyarcieri.com/rust-in-2019-security-maturity-stability)
* [Bode Plot Examples](http://lpsa.swarthmore.edu/Bode/BodeExamples.html)
* [nlohmann/json: JSON for Modern C](https://github.com/nlohmann/json)
* [306 - 加法器的优化——超前进位加法器（Carry-Lookahead Adder，CLA） - 简书](https://www.jianshu.com/p/6ce9cad8b467)
* [(原創) timing中的slack是什麼意思? (SOC) (Quartus II) - 真 OO无双 - 博客园](https://www.cnblogs.com/oomusou/archive/2010/08/04/timing_slack.html)
* [p761-thompson.pdf](https://www.archive.ece.cmu.edu/~ganger/712.fall02/papers/p761-thompson.pdf)
* [reublog - Performance Tuning for .NET Core](https://reubenbond.github.io/posts/dotnet-perf-tuning)
* [start [Knowledge Base]](https://wiki2.xbits.net:4430/)
* [Serverless computing: one step forward, two steps back | the morning paper](https://blog.acolyer.org/2019/01/14/serverless-computing-one-step-forward-two-steps-back/)
* [数字后端基础之：芯片的整体功耗是如何计算出来的？ - 知乎](https://zhuanlan.zhihu.com/p/35327895)
* [nanpuyue/crc: A Pure Rust Implementation of Generic CRC Algorithm](https://github.com/nanpuyue/crc)
* [Language support for empty objects](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/p0840r2.html)
* [if constexpr isn't broken](https://brevzin.github.io/c++/2019/01/15/if-constexpr-isnt-broken/)
* [is global counter thread safe in python? - Stack Overflow](https://stackoverflow.com/questions/37990533/is-global-counter-thread-safe-in-python)
* [[Python-Dev] Reworking the GIL](https://mail.python.org/pipermail/python-dev/2009-October/093321.html)
* [浅析 Java 序列化和反序列化](https://paper.seebug.org/792/)
* [Gotchas when using linker sections to arrange data, part 2 – The Old New Th](https://blogs.msdn.microsoft.com/oldnewthing/20181109-00/?p=100175)
* [Gotchas when using linker sections to arrange data, part 1 – The Old New Th](https://blogs.msdn.microsoft.com/oldnewthing/20181108-00/?p=100165)
* [Why would the incremental linker insert padding between section fragments?](https://blogs.msdn.microsoft.com/oldnewthing/20190114-00/?p=100695)
* [Introducing MIR | Rust Blog](https://blog.rust-lang.org/2016/04/19/MIR.html)
* [Unstable Book Updates needed · Issue #57224 · rust-lang/rust](https://github.com/rust-lang/rust/issues/57224)
* [Rust Modules and File Hierarchy - Suspect Semantics](http://www.suspectsemantics.com/blog/2016/05/26/rust-modules-and-file-hierarchy/)
* [Files are hard](https://danluu.com/file-consistency/)
* [The overview of C 20 Range view](https://ezoeryou.github.io/blog/article/2019-01-10-range-view.html)
* [9 Kubernetes Security Best Practices Everyone Must Follow - Cloud Native Co](https://www.cncf.io/blog/2019/01/14/9-kubernetes-security-best-practices-everyone-must-follow/)
* [iterator - When should I use `drain` vs `into_iter`? - Stack Overflow](https://stackoverflow.com/questions/27882800/when-should-i-use-drain-vs-into-iter)
* [hardlink - What is the difference between NTFS hard links and directory jun](https://superuser.com/questions/67870/what-is-the-difference-between-ntfs-hard-links-and-directory-junctions)
* [Main is usually a function. So then when is it not?](http://jroweboy.github.io/c/asm/2015/01/26/when-is-main-not-a-function.html)
* [Miss Gender ? 的 Twitter: “… ”](https://twitter.com/willkirkby/status/1084623111100817408)
* [Important Papers](http://www.cs.cmu.edu/~amarp/paper_list/amar_reading_list.html)
* [趣题：用正则表达式判断一个二进制数是否能被3整除 | Matrix67: The Aha Moments](http://www.matrix67.com/blog/archives/1089)
* [rust - Why is it useful to use PhantomData to inform the compiler that a st](https://stackoverflow.com/questions/42708462/why-is-it-useful-to-use-phantomdata-to-inform-the-compiler-that-a-struct-owns-a)
* [非确定有限状态自动机 - 维基百科，自由的百科全书](https://zh.wikipedia.org/wiki/%E9%9D%9E%E7%A1%AE%E5%AE%9A%E6%9C%89%E9%99%90%E7%8A%B6%E6%80%81%E8%87%AA%E5%8A%A8%E6%9C%BA)
* [regex - DFA vs NFA engines: What is the difference in their capabilities an](https://stackoverflow.com/questions/3978438/dfa-vs-nfa-engines-what-is-the-difference-in-their-capabilities-and-limitations)
* [Calling trait static method from another static method (rust) - Stack Overf](https://stackoverflow.com/questions/24541074/calling-trait-static-method-from-another-static-method-rust)
* [Evolution of the x86 context switch in Linux – MaiZure's Projects](http://www.maizure.org/projects/evolution_x86_context_switch_linux/)
* [C 17 Filesystem - Writing a simple file watcher | Solarian Programmer](https://solarianprogrammer.com/2019/01/13/cpp-17-filesystem-write-file-watcher-monitor/)
* [c - warning: always_inline function might not be inlinable [-Wattributes] -](https://stackoverflow.com/questions/32432596/warning-always-inline-function-might-not-be-inlinable-wattributes)
* [Haskell I/O and XPath](https://blog.adamretter.org.uk/haskell-io-and-xpath/)
* [Introduction to Paging | Writing an OS in Rust](https://os.phil-opp.com/paging-introduction/)
* [Case Study: Reusing Double Dispatch for serialization – Andy G's Blog](https://gieseanw.wordpress.com/2018/12/29/reuse-double-dispatch/)
* [Stop reimplementing the virtual table and start using double dispatch – And](https://gieseanw.wordpress.com/2018/12/29/stop-reimplementing-the-virtual-table-and-start-using-double-dispatch/)
* [Porting C code to Rust- notes, questions, and request for review. : rust](https://www.reddit.com/r/rust/comments/aanedt/porting_c_code_to_rust_notes_questions_and/)
* [Applied Cryptography Engineering — Quarrelsome](https://sockpuppet.org/blog/2013/07/22/applied-practical-cryptography/)
* [Arc Length of Bézier Curves - Mathematics Stack Exchange](https://math.stackexchange.com/questions/12186/arc-length-of-b%C3%A9zier-curves)
* [A Primer on Bézier Curves](https://pomax.github.io/bezierinfo/zh-CN/)
* [How long is that Bézier? | Raph Levien’s blog](https://raphlinus.github.io/curves/2018/12/28/bezier-arclength.html)
* [Redux 入门教程（一）：基本用法 - 阮一峰的网络日志](http://www.ruanyifeng.com/blog/2016/09/redux_tutorial_part_one_basic_usages.html)
* [自述 · GitBook](https://cn.redux.js.org/)
* [Implement Your Own Automatic Differentiation with Julia in ONE day | Half I](http://blog.rogerluo.me/2018/10/23/write-an-ad-in-one-day/)
* [亚麻 OA2 超级详细【一亩三分地论坛美国面经版】 -](https://www.1point3acres.com/bbs/forum.php?mod=viewthread&tid=468231&extra=)
* [algorithm - What is the meaning of "exclusive" and "inclusive" when describ](https://stackoverflow.com/questions/39010041/what-is-the-meaning-of-exclusive-and-inclusive-when-describing-number-ranges)
* [B - Operators and Symbols - The Rust Programming Language](https://doc.rust-lang.org/book/appendix-02-operators.html)
* [rust - How do I include the end value in a range? - Stack Overflow](https://stackoverflow.com/questions/43698191/how-do-i-include-the-end-value-in-a-range)
* [rust - What does the "two periods" operator mean in the context of a &str s](https://stackoverflow.com/questions/31797599/what-does-the-two-periods-operator-mean-in-the-context-of-a-str-subscript)
* ["Modern" C Lamentations : rust](https://www.reddit.com/r/rust/comments/aaexjy/modern_c_lamentations/)
* [A Perspective on C Standardization in 2018 : cpp](https://www.reddit.com/r/cpp/comments/aaet5r/a_perspective_on_c_standardization_in_2018/)
* [A Perspective on C Standardization in 2018 | The Pasture](https://thephd.github.io/perspective-standardization-in-2018)
* [Dentrax/DLL-Injection-with-Assembly: DLL Injection to Exe with Assembly usi](https://github.com/Dentrax/DLL-Injection-with-Assembly)
* [/ TLS 1.3 /](https://www.davidwong.fr/tls13/)
* [Things I Don’t Know as of 2018 - Overreacted](https://overreacted.io/things-i-dont-know-as-of-2018/)
* [Issue 2070: allocate_shared should use allocator_traits::construct - WG21 L](https://wg21.cmeerw.net/lwg/issue2070)
* [cargo-crev and Rust 2019 fearless code reuse — Dawid Ciężarkiewicz aka `dpc](https://dpc.pw/cargo-crev-and-rust-2019-fearless-code-reuse)
* [Move the most recent commit(s) to a new branch with Git - Stack Overflow](https://stackoverflow.com/questions/1628563/move-the-most-recent-commits-to-a-new-branch-with-git)
* [media.ccc.de - 35C3 Refreshing Memories](https://media.ccc.de/b/congress/2018)
* [Implement the new-style trait solver by scalexm · Pull Request #56384 · rus](https://github.com/rust-lang/rust/pull/56384)
* [P1376R0: Summary of freestanding evening session discussions](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/p1376r0.html#definition)
* [ISO/IEC JTC1/SC22/WG21 - Papers 2018](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/)
* [p0709r0.pdf](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/p0709r0.pdf)
* [p0932r1.pdf](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/p0932r1.pdf)
* [java - Methods With Same Name as Constructor - Why? - Stack Overflow](https://stackoverflow.com/questions/3401444/methods-with-same-name-as-constructor-why)
* [What is the default initialization of an array in Java? - Stack Overflow](https://stackoverflow.com/questions/3426843/what-is-the-default-initialization-of-an-array-in-java)
* [Optimizing Rust Struct Size: A 6-month Compiler Development Project | Blind](http://camlorn.net/posts/April%202017/rust-struct-field-reordering.html)
* [A massive refactoring of memory layouts has landed, meaning that types like](https://www.reddit.com/r/rust/comments/7ecic4/a_massive_refactoring_of_memory_layouts_has/)
* [n4492.pdf](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2015/n4492.pdf)
* [P0977-remember-the-vasa.pdf](http://www.stroustrup.com/P0977-remember-the-vasa.pdf)
* ["Modern" C Lamentations : cpp](https://www.reddit.com/r/cpp/comments/aabthn/modern_c_lamentations/)
* ["Modern" C Lamentations · Aras' website](http://aras-p.info/blog/2018/12/28/Modern-C-Lamentations/)
* [科普帖：深度学习中GPU和显存分析 - 知乎](https://zhuanlan.zhihu.com/p/31558973)
* [Crypto 101](https://www.crypto101.io/)
* [22 SSH Examples, Practical Tips & Tunnels | HackerTarget.com](https://hackertarget.com/ssh-examples-tunnels/)
* [How do you actually use dynamically sized types in Rust? - Stack Overflow](https://stackoverflow.com/questions/25740916/how-do-you-actually-use-dynamically-sized-types-in-rust)
* [Rust: The `?` operator · m4rw3r](https://m4rw3r.github.io/rust-questionmark-operator)
* [rfcs/0490-dst-syntax.md at master · rust-lang/rfcs](https://github.com/rust-lang/rfcs/blob/master/text/0490-dst-syntax.md)
* [generics - What does the question mark mean in a type parameter bound? - St](https://stackoverflow.com/questions/30333607/what-does-the-question-mark-mean-in-a-type-parameter-bound)
* [Array lengths don't support generic type parameters. · Issue #43408 · rust-](https://github.com/rust-lang/rust/issues/43408)
* [Yet another approach for constrained declarations](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/p1141r1.html)
* [A Simple Timer in C - Fluent C](https://www.fluentcpp.com/2018/12/28/timer-cpp/)
* [Seeing Theory](https://seeing-theory.brown.edu/#firstPage)
* [Rust 2019 | Vorner’s random stuff](https://vorner.github.io/2018/12/27/rust-2019.html)
* [Easy Postgres extensions in Rust with pg-extend-rs](https://bluejekyll.github.io/blog/rust/2018/12/27/announcing-pg-extend.html)
* [Hello](https://alf.nu/)
* [游程编码 - 维基百科，自由的百科全书](https://zh.wikipedia.org/wiki/%E6%B8%B8%E7%A8%8B%E7%BC%96%E7%A0%81)
* [Asterisk 何德何能？ - V2EX](https://www.v2ex.com/t/521749#reply10)
* [How assignment works with python list slice - Stack Overflow](https://stackoverflow.com/questions/10623302/how-assignment-works-with-python-list-slice)
* [Constraints and concepts (since C 20) - cppreference.com](https://en.cppreference.com/w/cpp/language/constraints)
* [Concepts library (C 20) - cppreference.com](https://en.cppreference.com/w/cpp/concepts)
* [Consistency Models Explained Briefly - A Foo walks into a Bar... - blog by](http://coldattic.info/post/88/)
* [multithreading - If I use locks, can my algorithm still be lock-free? - Sof](https://softwareengineering.stackexchange.com/questions/141271/if-i-use-locks-can-my-algorithm-still-be-lock-free/307954)
* [无锁和无等待的定义和例子 | 并发编程网 – ifeve.com](http://ifeve.com/lock-free-and-wait-free/)
* [concurrency - Why is quiescent consistency compositional, but sequential co](https://cs.stackexchange.com/questions/54748/why-is-quiescent-consistency-compositional-but-sequential-consistency-is-not)
* [What are the differences between sequential consistency and quiescent consi](https://stackoverflow.com/questions/26089729/what-are-the-differences-between-sequential-consistency-and-quiescent-consistenc)
* [线性一致性(Linear consistency)，串行一致性(或顺序一致性Sequential consistency)，静态一致性(Quiesce](https://jnxnj.wordpress.com/2009/01/30/%E7%BA%BF%E6%80%A7%E4%B8%80%E8%87%B4%E6%80%A7linear-consistency%EF%BC%8C%E4%B8%B2%E8%A1%8C%E4%B8%80%E8%87%B4%E6%80%A7%E6%88%96%E9%A1%BA%E5%BA%8F%E4%B8%80%E8%87%B4%E6%80%A7sequential-consistency/)
* [炉石卡组代码解析 | 米米的博客](https://zhangshuqiao.org/2018-12/%E7%82%89%E7%9F%B3%E5%8D%A1%E7%BB%84%E4%BB%A3%E7%A0%81%E8%A7%A3%E6%9E%90/)
* [media.ccc.de - "The" Social Credit System](https://media.ccc.de/v/35c3-9904-the_social_credit_system)
* [Session types in programming languages---a collection of implementations. |](http://simonjf.com/2016/05/28/session-type-implementations.html)
* [Hacker News](http://hn.premii.com/#/comments/18772873)
* [cling/ClingTheLLVM-basedInterpreter.pdf at master · root-project/cling](https://github.com/root-project/cling/blob/master/www/docs/talks/ClingTheLLVM-basedInterpreter.pdf)
* [cling/www/docs/talks at master · root-project/cling](https://github.com/root-project/cling/tree/master/www/docs/talks)
* [The Complete List of Penetration Testing Tools](https://pentest-tools.com/alltools)
* [Document Metadata Extractor | Pentest-Tools.com](https://pentest-tools.com/information-gathering/metadata-extractor-online)
* [Data Science 面试准备笔记 资料【一亩三分地论坛数据科学版】 -](https://www.1point3acres.com/bbs/forum.php?mod=viewthread&tid=461877&extra=)
* [OpenWPM_1_million_site_tracking_measurement.pdf](http://randomwalker.info/publications/OpenWPM_1_million_site_tracking_measurement.pdf)
* [http://pgbovine.net/teaching-large-courses.htm](http://pgbovine.net/teaching-large-courses.htm)
* [Censys](https://censys.io/)
* [什么叫做“滚挂”？ - V2EX](https://www.v2ex.com/t/521402#reply32)
* [Thoughts on Rust in 2019](https://words.steveklabnik.com/thoughts-on-rust-in-2019)
* [Challenge your performance intuition with C operators](http://wordsandbuttons.online/challenge_your_performance_intuition_with_cpp_operators.html)
* [drujensen/fib: Performance Benchmark of top Github languages](https://github.com/drujensen/fib)
* [Chris's Wiki :: blog/sysadmin/TarFindingTruncateBug](https://utcc.utoronto.ca/~cks/space/blog/sysadmin/TarFindingTruncateBug)
* [Advent of Haskell – Martín Valdés de León – Medium](https://medium.com/@mvaldesdeleon/advent-of-haskell-950d6408a729)
* [Lisp机器 - 维基百科，自由的百科全书](https://zh.wikipedia.org/wiki/Lisp%E6%9C%BA%E5%99%A8)
* [Java processor - Wikipedia](https://en.wikipedia.org/wiki/Java_processor)
* [C and Beyond 2012: Herb Sutter - atomic Weapons 1 of 2 - YouTube](https://www.youtube.com/watch?v=A8eCGOqgvH4)
* [An Introduction to Lock-Free Programming](https://preshing.com/20120612/an-introduction-to-lock-free-programming/)
* [c - Can num be atomic for 'int num'? - Stack Overflow](https://stackoverflow.com/questions/39393850/can-num-be-atomic-for-int-num/39396999#39396999)
* [The as-if rule - cppreference.com](https://en.cppreference.com/w/cpp/language/as_if)
* [c - Does sequenced-before relation in C 11 prevent compiler/CPU reorderi](https://stackoverflow.com/questions/25287484/does-sequenced-before-relation-in-c11-prevent-compiler-cpu-reordering)
* [c - Can non-atomic-load be reordered after atomic-acquire-load? - Stack O](https://stackoverflow.com/questions/38677061/can-non-atomic-load-be-reordered-after-atomic-acquire-load)
* [CPU Reordering – What is actually being reordered? – Musing Mortoray](https://mortoray.com/2010/11/18/cpu-reordering-what-is-actually-being-reordered/)
* [c - Why don't compilers merge redundant std::atomic writes? - Stack Overf](https://stackoverflow.com/questions/45960387/why-dont-compilers-merge-redundant-stdatomic-writes)
* [P0062R1: When should compilers optimize atomics?](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2016/p0062r1.html)
* [c - Can and does the compiler optimize out two atomic loads? - Stack Over](https://stackoverflow.com/questions/41820539/can-and-does-the-compiler-optimize-out-two-atomic-loads)
* [WG21/N2338: Concurrency memory model compiler consequences](http://www.open-std.org/JTC1/SC22/WG21/docs/papers/2007/n2338.html)
* [c - May compiler optimizations be inhibited by multi-threading? - Stack O](https://stackoverflow.com/questions/16807766/may-compiler-optimizations-be-inhibited-by-multi-threading)
* [PDF - ForensicsWiki](https://www.forensicswiki.org/wiki/PDF)
* [purecpp - a cool open source modern c community](http://purecpp.org/detail?id=2068)
* [https://stackoverflow.com/a/45971285/8563711](https://stackoverflow.com/a/45971285/8563711)
* [Java提高篇——静态代码块、构造代码块、构造函数以及Java类初始化顺序 - 萌小Q - 博客园](https://www.cnblogs.com/Qian123/p/5713440.html)
* [Barry Revzin](https://brevzin.github.io/posts/)
* [Fluent Polymorphism with Visible Type Applications](https://blog.sumtypeofway.com/fluent-polymorphism-with-visible-type-applications/)
* [Generate automatically async/await code from sync code with Roslyn | xoofx](http://xoofx.com/blog/2018/12/26/generate-async-from-sync-code-with-roslyn/)
* [Ranges, Code Quality, and the future of C – Jason Meisel – Medium](https://medium.com/@jasonmeisel/ranges-code-quality-and-the-future-of-c-99adc6199608)
* [graydon2 | Rust 2019 and beyond: limits to (some) growth.](https://graydon2.dreamwidth.org/263429.html)
* [一种防机器识别的网页文字加密方法 - 简书](https://www.jianshu.com/p/1c65fcd30c4b)
* [On Rust — Bill de hÓra](https://dehora.net/journal/2018/12/23/on-rust)
* [Visualizing Crates.io](https://8-p.info/visualizing-crates-io/)
* [Fermat's Library | One-sentence proof of Fermat's theorem on sums of two sq](https://fermatslibrary.com/s/a-one-sentence-proof-of-fermats-theorem-on-sums-of-two-squares#email-newsletter)
* [EOS 回滚攻击手法分析之黑名单篇](https://paper.seebug.org/773/)
* [前端娱乐圈大事记](http://qianduanyule.club/)
* [(13 条消息)为什么有些前端一直用 div 当按钮，而不是用 button，难道他们不知道语义化吗？ - 知乎](https://www.zhihu.com/question/296706208)
* [What is accessibility? | MDN](https://developer.mozilla.org/zh-CN/docs/Learn/Accessibility/What_is_accessibility)
* [This Week in Rust 266 · This Week in Rust](https://this-week-in-rust.org/blog/2018/12/25/this-week-in-rust-266/)
* [purecpp - a cool open source modern c community](http://purecpp.org/detail?id=2067)
* [关于算法，那些你不知道的事 - 西代零零发 - CSDN博客](https://blog.csdn.net/dc_726/article/details/51724097)
* [Issue 45: Access to nested classes - WG21 CWG Issues](https://wg21.cmeerw.net/cwg/issue45)
* [c - Can inner classes access private variables? - Stack Overflow](https://stackoverflow.com/questions/486099/can-inner-classes-access-private-variables)
* [paper.dvi](http://erikdemaine.org/papers/BRICS2002/paper.pdf)
* [PowerPoint Presentation](http://cs.tju.edu.cn/faculty/zhangkl/aboutme/aboutcoa.pdf)
* [Cache-oblivious algorithm - Wikipedia](https://en.wikipedia.org/wiki/Cache-oblivious_algorithm)
* [Courses by Marc Moreno Maza](http://www.csd.uwo.ca/~moreno/teaching.html)
* [Implementing FFTs in Practice](https://cnx.org/contents/ulXtQbN7@15/Implementing-FFTs-in-Practice)
* [lambdaspeech :: zorg](http://lambdaway.free.fr/lambdaspeech/?view=zorg)
* [Bytecode Optimizations](http://wiki.luajit.org/Optimizations)
* [http://www.rdrop.com/users/paulmck/scalability/paper/whymb.2009.04.05a.pdf](http://www.rdrop.com/users/paulmck/scalability/paper/whymb.2009.04.05a.pdf)
* [HowTo: Find Out My Linux Distribution Name and Version - nixCraft](https://www.cyberciti.biz/faq/find-linux-distribution-name-version-number/)
* [Practical C value categories - It's compiling.](http://itscompiling.eu/2016/05/12/practical-cpp-value-categories/)
* [Chained Functions Break Reference Lifetime Extension](http://cpptruths.blogspot.com/2018/10/chained-functions-break-reference.html)
* [abseil / Tip of the Week #107: Reference Lifetime Extension](https://abseil.io/tips/107)
* [Issue 2012: Lifetime of references - WG21 CWG Issues](https://wg21.cmeerw.net/cwg/issue2012)
* [Lifetime - cppreference.com](https://en.cppreference.com/w/cpp/language/lifetime)
* [Value categories - cppreference.com](https://en.cppreference.com/w/cpp/language/value_category)
* [主页 -- 耻球学派・改三](https://www.chikyuuschool.com/)
* [compiler-rt/divdf3.c at master · llvm-mirror/compiler-rt](https://github.com/llvm-mirror/compiler-rt/blob/master/lib/builtins/divdf3.c#L92)
* [c_lang_cn](https://chikyuuschool.com/c_lang_cn/)
* [Real World CTF 2018 rwext5命題報告 | MaskRay](https://maskray.me/blog/2018-12-09-real-world-ctf-2018-rwext5)
* [c - What is a "Regular Type" in the context of move semantics? - Stack Ov](https://stackoverflow.com/questions/13998945/what-is-a-regular-type-in-the-context-of-move-semantics)
* [Technitium Blog: Configuring DNS-over-TLS and DNS-over-HTTPS with any DNS S](https://blog.technitium.com/2018/12/configuring-dns-over-tls-and-dns-over.html)
* [Blog — Inverse Palindrome](https://inversepalindrome.com/blog/)
* [Diggsey/aoc2018: Rust solutions to the Advent Of Code 2018](https://github.com/Diggsey/aoc2018)
* [capo/singleton.hpp at master · mutouyun/capo](https://github.com/mutouyun/capo/blob/master/capo/singleton.hpp)
* [Variable template(since C 14) - cppreference.com](https://en.cppreference.com/w/cpp/language/variable_template)
* [c - __attribute__((constructor)) equivalent in VC? - Stack Overflow](https://stackoverflow.com/questions/1113409/attribute-constructor-equivalent-in-vc)
* [(19 条消息)正则表达式如何匹配 3 的倍数？ - 知乎](https://www.zhihu.com/question/24824487)
* [Michael Fogleman](https://www.michaelfogleman.com/aoc18/)
* [Ruby 2.6](https://anamaria.martinezgomez.name/2018/12/21/ruby2_6.html)
* [Compiler Fuzzing through Deep Learning](http://homepages.inf.ed.ac.uk/hleather/publications/2018_deepfuzzing_issta.pdf)
* [LKML: Linus Torvalds: Linux 4.20 released..](https://lkml.org/lkml/2018/12/23/187)
* [How to Optimize Components to Improve React Performance | Toptal](https://www.toptal.com/react/optimizing-react-performance)
* [经过技术选型研究，我们放弃了 React，转向 Vue - V2EX](https://www.v2ex.com/t/519999?p=2)
* [(11 条消息)如何理解皮尔逊相关系数（Pearson Correlation Coefficient）？ - 知乎](https://www.zhihu.com/question/19734616)
* [Schneier on Security](https://www.schneier.com/)
* [The JRPG Startup Cost « Significant Bits](http://www.significant-bits.com/the-jrpg-startup-cost/)
* [吴小林直线算法 - 维基百科，自由的百科全书](https://zh.wikipedia.org/wiki/%E5%90%B4%E5%B0%8F%E6%9E%97%E7%9B%B4%E7%BA%BF%E7%AE%97%E6%B3%95)
* [Xiaolin Wu’s fast antialiased line drawing algorithm in Haskell](https://blog.rcook.org/blog/2018/xiaolin-wu-algorithm/)
* [Who are some good cppcon speakers especially for scientific computing? : cp](https://www.reddit.com/r/cpp/comments/a8ws6r/who_are_some_good_cppcon_speakers_especially_for/)
* [GTK Programming with Haskell | Haskell at Work](https://haskell-at-work.com/episodes/2018-11-13-gtk-programming-with-haskell.html)
* [Overloading · haskell-gi/haskell-gi Wiki](https://github.com/haskell-gi/haskell-gi/wiki/Overloading)
* [10.1\. Language options — Glasgow Haskell Compiler 8.6.2 User's Guide](https://downloads.haskell.org/~ghc/latest/docs/html/users_guide/glasgow_exts.html#extension-OverloadedLabels)
* [haskell - Is there a function to flatten a nested list of elements? - Stack](https://stackoverflow.com/questions/5994051/is-there-a-function-to-flatten-a-nested-list-of-elements)


### 2019-03-06 - 2019-05-17
* [https://www.usenix.org/conference/nsdi18/presentation/khalid](https://www.usenix.org/conference/nsdi18/presentation/khalid)
* [GCC 的编译流程及中间表示层 RTL 的初步探索](https://www.ibm.com/developerworks/cn/linux/l-gccrtl/index.html)
* [C links: Coroutines (WIP draft)](https://gist.github.com/MattPD/9b55db49537a90545a90447392ad3aeb#file-cpp-std-coroutines-draft-md)
* [optimization - What Every Programmer Should Know About Memory? - Stack Over](https://stackoverflow.com/questions/8126311/what-every-programmer-should-know-about-memory)
* [Minimizing Memory Usage for Creating Application Subprocesses](https://www.oracle.com/technetwork/server-storage/solaris10/subprocess-136439.html)
* [process - Faster forking of large processes on Linux? - Stack Overflow](https://stackoverflow.com/questions/2731531/faster-forking-of-large-processes-on-linux)
* [vrazdan.GitHub.io](https://vrazdan.github.io/final.html)
* [ZombieLoad/cacheutils.h at master · IAIK/ZombieLoad](https://github.com/IAIK/ZombieLoad/blob/master/attacker/variant1_linux/cacheutils.h)
* [CPU.fail](https://cpu.fail/)
* [multithreading - Threading in a PyQt application: Use Qt threads or Python](https://stackoverflow.com/questions/1595649/threading-in-a-pyqt-application-use-qt-threads-or-python-threads)
* [16\. Microarchitectural Data Sampling (MDS) mitigation — The Linux Kernel do](https://www.kernel.org/doc/html/latest/x86/mds.html#mds)
* [Cyberus Technology - ZombieLoad: Cross Privilege-Boundary Data Leakage](https://www.cyberus-technology.de/posts/2019-05-14-zombieload.html)
* [Introduce __builtin_expect_with_probability (PR target/83610). - Patchwork](https://patchwork.ozlabs.org/patch/948237/)
* [Security advisory for the standard library | Rust Blog](https://blog.rust-lang.org/2019/05/13/Security-advisory.html)
* [lettier/3d-game-shaders-for-beginners: ? A step-by-step guide on how to imp](https://github.com/lettier/3d-game-shaders-for-beginners)
* [go - Why does the memory mapped file ever need to be flushed when access is](https://stackoverflow.com/questions/20056099/why-does-the-memory-mapped-file-ever-need-to-be-flushed-when-access-is-rdwr)
* [(1 封私信 / 1 条消息) Windows 10 自带 WSL，那么 Linux 什么时候可以自带 Windows 子系统？ - 知乎](https://www.zhihu.com/question/323752449/answer/679873148)
* [magic_get/magic_get.hpp at pre_boost · apolukhin/magic_get](https://github.com/apolukhin/magic_get/blob/pre_boost/magic_get.hpp)
* [purecpp - a cool open source modern c community](http://purecpp.org/detail?id=2055)
* [f() vs f(void) in C vs C - Nick Desaulniers](http://nickdesaulniers.github.io/blog/2019/05/12/f-vs-f-void-in-c-vs-c-plus-plus/)
* [eBPF 简史](https://www.ibm.com/developerworks/cn/linux/l-lo-eBPF-history/index.html)
* [An eBPF overview, part 1: Introduction](https://www.collabora.com/news-and-blog/blog/2019/04/05/an-ebpf-overview-part-1-introduction/)
* [Learn to change history with git rebase!](https://git-rebase.io/)
* [From Redex Models to Programming Languages](https://docs.racket-lang.org/redex-to-lang@pcf/index.html)
* [(10) OS internals: Technical deep-dive into operating system innovations -](https://www.youtube.com/watch?reload=9&feature=youtu.be&v=tG8R5SQGPck&app=desktop)
* [Windows Subsystem for Linux Overview – Windows Subsystem for Linux](https://blogs.msdn.microsoft.com/wsl/2016/04/22/windows-subsystem-for-linux-overview/)
* [Introduction to High-Performance Scientific Computing](http://pages.tacc.utexas.edu/~eijkhout/istc/html/index.html)
* [go-perfbook/performance-zh.md at master · dgryski/go-perfbook](https://github.com/dgryski/go-perfbook/blob/master/performance-zh.md)
* [c - Why can't argument be forwarded inside lambda without mutable? - Stac](https://stackoverflow.com/questions/55992834/why-cant-argument-be-forwarded-inside-lambda-without-mutable/55993041#55993041)
* [Rust parallelism for non-C/C developers – NEAR Protocol – Medium](https://medium.com/nearprotocol/rust-parallelism-for-non-c-c-developers-ec23f48b7e56)
* [Dan Ghica's Blog: The essence of (im)pure computation](https://danghica.blogspot.com/2019/05/the-essence-of-impure-computation.html)
* [Precise timing of machine code with Linux perf. | Denis Bakhvalov | C com](https://easyperf.net/blog/2019/04/03/Precise-timing-of-machine-code-with-Linux-perf)
* [Unraveling The JPEG](https://parametric.press/issue-01/unraveling-the-jpeg/)
* [Fauna | Demystifying Database Systems: An Introduction to Transaction Isola](https://fauna.com/blog/introduction-to-transaction-isolation-levels)
* [Use mmap With Care - News - Sublime HQ](https://www.sublimetext.com/blog/articles/use-mmap-with-care)
* [Four tweaks to improve Haskell – DAML Driven – Medium](https://medium.com/daml-driven/four-tweaks-to-improve-haskell-b1de9c87f816)
* [Updates in April 2019 | Writing an OS in Rust](https://os.phil-opp.com/status-update/2019-05-01/)
* [Demystifying Type Classes](http://okmij.org/ftp/Computation/typeclass.html)
* [3.3.1 Cache一致性的基本概念_sailing_新浪博客](http://blog.sina.com.cn/s/blog_6472c4cc0100qxcd.html)
* [Stacked borrows 2 (alpha 1) by RalfJung · Pull Request #695 · rust-lang/mir](https://github.com/rust-lang/miri/pull/695)
* [Stacked Borrows 2](https://www.ralfj.de/blog/2019/04/30/stacked-borrows-2.html)
* [Life of a binary | Thoughts of a programmer](https://kishuagarwal.github.io/life-of-a-binary.html)
* [crawshaw - 2019-04-28](https://crawshaw.io/blog/xerrors)
* [Emoji, part 6c: to infinity…and beyond‽ – Shady Characters](https://shadycharacters.co.uk/2019/04/emoji-part-6c-to-infinity/)
* [Windows对象管理 - 维基百科，自由的百科全书](https://zh.wikipedia.org/wiki/Windows%E5%AF%B9%E8%B1%A1%E7%AE%A1%E7%90%86)
* [Project Zero: Windows Drivers are True’ly Tricky](https://googleprojectzero.blogspot.com/2015/10/windows-drivers-are-truely-tricky.html)
* [Boolean Circuits are Neural Networks – Thinking](https://constantinides.net/2019/04/26/boolean-circuits-are-neural-networks/)
* [C attribute: expects, ensures, assert (C 20) - cppreference.com](https://en.cppreference.com/w/cpp/language/attributes/contract)
* [This one weird trick for customization by class template (partial) speciali](https://quuxplusone.github.io/blog/2019/04/26/std-hash-should-take-another-template-parameter/)
* [Open-sourcing F14 for memory-efficient hash tables - Facebook Code](https://code.fb.com/developer-tools/f14/?r=1)
* [SlimTrie: 单机百亿文件的极致索引-实现篇 - OpenACID Blog](https://openacid.github.io/tech/algorithm/slimtrie-impl/#h-1ht031dqlxd8)
* [Rust cheat sheet](https://upsuper.github.io/rust-cheatsheet/)
* [Rust's 2019 roadmap | Rust Blog](https://blog.rust-lang.org/2019/04/23/roadmap.html)
* [The Rule of Zero in C - Fluent C](https://www.fluentcpp.com/2019/04/23/the-rule-of-zero-zero-constructor-zero-calorie/)
* [Generic returns in Rust – The If Works](https://blog.jcoglan.com/2019/04/22/generic-returns-in-rust/)
* [Revised proposal could solve longstanding C bugs | InfoWorld](https://www.infoworld.com/article/3307522/revised-proposal-could-solve-longstanding-c-bugs.html)
* [Compiler bug? Linker bug? Windows Kernel bug. | Random ASCII – tech blog of](https://randomascii.wordpress.com/2018/02/25/compiler-bug-linker-bug-windows-kernel-bug/)
* [Why OO Sucks](http://www.cs.otago.ac.nz/staffpriv/ok/Joe-Hates-OO.htm)
* [CSDN-maokelong95/GEM5 源码阅读：O3 处理器的访存流程与错误处理.pdf at master · maokelong/CSDN-](https://github.com/maokelong/CSDN-maokelong95/blob/master/%E5%85%B1%E4%BA%AB%E8%B5%84%E6%BA%90/GEM5%20%E6%BA%90%E7%A0%81%E9%98%85%E8%AF%BB%EF%BC%9AO3%20%E5%A4%84%E7%90%86%E5%99%A8%E7%9A%84%E8%AE%BF%E5%AD%98%E6%B5%81%E7%A8%8B%E4%B8%8E%E9%94%99%E8%AF%AF%E5%A4%84%E7%90%86.pdf)
* [内存模型系列（下）- 内存持久性模型（Memory Persistency） - 猫科龙 - CSDN博客](https://blog.csdn.net/maokelong95/article/details/81199226)
* [内存模型系列（上）- 内存一致性模型（Memory Consistency） - 猫科龙 - CSDN博客](https://blog.csdn.net/maokelong95/article/details/80727952)
* [Earth mover's distance - Wikipedia](https://en.wikipedia.org/wiki/Earth_mover%27s_distance)
* [Dynamic time warping - Wikipedia](https://en.wikipedia.org/wiki/Dynamic_time_warping)
* [The Web Developer's Guide to DNS | RJ Zaworski](https://rjzaworski.com/2019/04/the-web-developers-guide-to-dns)
* [Six issue when installing package · Issue #3165 · pypa/pip](https://github.com/pypa/pip/issues/3165)
* [Wesley Aptekar-Cassels | Languages I want to write](https://blog.wesleyac.com/posts/language-todos)
* [Professional, zero-cost setup for C projects (Part 1 of N) – awfulcode.io](https://awfulcode.io/2019/04/13/professional-zero-cost-setup-for-c-projects-part-1-of-n/)
* [rfcs/2627-raw-dylib-kind.md at master · rust-lang/rfcs](https://github.com/rust-lang/rfcs/blob/master/text/2627-raw-dylib-kind.md)
* [Understanding when not to std::move in C - Red Hat Developer Blog](https://developers.redhat.com/blog/2019/04/12/understanding-when-not-to-stdmove-in-c/)
* [Initial Hacking of GHC for GCC Link-time Optimization - Brandon.Si(mmons)](http://brandon.si/code/initial-hacking-of-ghc-for-gcc-link-time-optimization/)
* [CppQuiz.org - Question #250](http://cppquiz.org/quiz/question/250?result=OK&answer=AB&did_answer=Answer)
* [How `hana::type` "disables ADL" – Arthur O'Dwyer – Stuff mostly about C](https://quuxplusone.github.io/blog/2019/04/09/adl-insanity-round-2/)
* [谷雨解字 - 科学字体生成器](https://guyujiezi.com/)
* [How bad can it git? Characterizing secret leakage in public GitHub reposito](https://blog.acolyer.org/2019/04/08/how-bad-can-it-git-characterizing-secret-leakage-in-public-github-repositories/)
* [Clojure Concurrency Tutorial for Beginners with Code Examples](https://purelyfunctional.tv/guide/clojure-concurrency/)
* [From alert to driver vulnerability: Microsoft Defender ATP investigation un](https://www.microsoft.com/security/blog/2019/03/25/from-alert-to-driver-vulnerability-microsoft-defender-atp-investigation-unearths-privilege-escalation-flaw/)
* [Top-down Microarchitecture Analysis Method](https://software.intel.com/en-us/vtune-amplifier-cookbook-top-down-microarchitecture-analysis-method)
* [One Monad to Prove Them All](https://arxiv.org/ftp/arxiv/papers/1805/1805.08059.pdf)
* [ADL insanity – Arthur O'Dwyer – Stuff mostly about C](https://quuxplusone.github.io/blog/2019/04/08/adl-insanity/)
* [Web Design in 4 minutes](https://jgthms.com/web-design-in-4-minutes/#share)
* [Building a PostgreSQL load tester | Lawrence Jones](https://blog.lawrencejones.dev/building-a-postgresql-load-tester/)
* [JIT编译，动态编译与自适应动态编译 - 知乎](https://zhuanlan.zhihu.com/p/19977592)
* [CMSY9](https://www.cse.umich.edu/eecs/about/articles/2014/laurenzano2014_protean.pdf)
* [f089-luk.dvi](https://web.stanford.edu/class/cs343/resources/cs343-annot-pin.pdf)
* [SEI CERT C Coding Standard - SEI CERT C Coding Standard - Confluence](https://wiki.sei.cmu.edu/confluence/pages/viewpage.action?pageId=88046682)
* [Triage Procedure](https://forge.rust-lang.org/triage-procedure.html)
* [assembly - Far jump in gdt in bootloader - Stack Overflow](https://stackoverflow.com/questions/23978486/far-jump-in-gdt-in-bootloader)
* [driver - What are Ring 0 and Ring 3 in the context of operating systems? -](https://stackoverflow.com/questions/18717016/what-are-ring-0-and-ring-3-in-the-context-of-operating-systems/33244674)
* [Kernel mode VS User mode – Unravel It](https://unravelit.net/2017/12/12/kernel-mode-vs-user-mode/)
* [The BooSTL Algorithms: Boost Algorithms That Extend the STL (3/3) - Fluent](https://www.fluentcpp.com/2019/04/05/the-boostl-algorithms-boost-algorithms-that-extend-the-stl-3/)
* [Introduction - Computer Graphics from scratch - Gabriel Gambetta](http://www.gabrielgambetta.com/computer-graphics-from-scratch/introduction.html)
* [Precise timing of machine code with Linux perf. | Denis Bakhvalov | C com](https://dendibakh.github.io/blog/2019/04/03/Precise-timing-of-machine-code-with-Linux-perf)
* [Downtown Doug Brown » Adventures of putting 16 GB of RAM in a motherboard t](https://www.downtowndougbrown.com/2019/04/adventures-of-putting-16-gb-of-ram-in-a-motherboard-that-doesnt-support-it/)
* [缓存/内存Coherence模型 - 知乎](https://zhuanlan.zhihu.com/p/25876351)
* [缓存一致性协议 - stevenczp - 博客园](https://www.cnblogs.com/stevenczp/p/6770733.html)
* [CMUslides.pdf](https://www.andrew.cmu.edu/user/awodey/hott/CMUslides.pdf)
* [documentation - What's the command to pull up a package's manual? - TeX - L](https://tex.stackexchange.com/questions/294563/whats-the-command-to-pull-up-a-packages-manual)
* [rust-analyzer/rust-analyzer: An experimental Rust compiler front-end for ID](https://github.com/rust-analyzer/rust-analyzer)
* [dtolnay/syn: Parser for Rust source code](https://github.com/dtolnay/syn)
* [c - How to detect if the current process is being run by GDB? - Stack Overf](https://stackoverflow.com/questions/3596781/how-to-detect-if-the-current-process-is-being-run-by-gdb)
* [secfigo/Awesome-Fuzzing: A curated list of fuzzing resources ( Books, cours](https://github.com/secfigo/Awesome-Fuzzing)
* [纯线性同余随机数生成器 - Mr.Rico - 博客园](https://www.cnblogs.com/xkfz007/archive/2012/03/27/2420154.html)
* [pest-parser/pest: The Elegant Parser](https://github.com/pest-parser/pest)
* [DrinkingPhil.pdf](https://www.cs.utexas.edu/users/misra/scannedPdf.dir/DrinkingPhil.pdf)
* [哲学家就餐问题 - 九茶 - 博客园](https://www.cnblogs.com/Bone-ACE/p/4558872.html)
* [哲学家就餐问题 - 维基百科，自由的百科全书](https://zh.wikipedia.org/wiki/%E5%93%B2%E5%AD%A6%E5%AE%B6%E5%B0%B1%E9%A4%90%E9%97%AE%E9%A2%98#Chandy%2FMisra%E8%A7%A3%E6%B3%95)
* [Operating System | Banker's Algorithm - GeeksforGeeks](https://www.geeksforgeeks.org/operating-system-bankers-algorithm/)
* [Summary: What are the Allocation Rules? - speice.io](https://speice.io/2019/02/summary.html)
* [Guidelines on Benchmarking and Rust](https://nbsoftsolutions.com/blog/guidelines-on-benchmarking-and-rust)
* [1903.11397.pdf](https://arxiv.org/pdf/1903.11397.pdf)
* [data recovery - Can overwritten files be recovered? - Unix & Linux Stack Ex](https://unix.stackexchange.com/questions/149342/can-overwritten-files-be-recovered)
* [A Quick Guide to Go's Assembler - The Go Programming Language](https://golang.org/doc/asm)
* [Geohash in Golang Assembly: Lessons in absurd optimization:](https://mmcloughlin.com/posts/geohash-assembly)
* [Why is the I-cache designed as VIPT, while the D-cache as PIPT? - Cortex-A](https://community.arm.com/developer/ip-products/processors/f/cortex-a-forum/3608/why-is-the-i-cache-designed-as-vipt-while-the-d-cache-as-pipt)
* [CPU缓存实现方式：VIVT、VIPT和PIPT - bluespacezero - CSDN博客](https://blog.csdn.net/Q_AN1314/article/details/78980191)
* [Are we async yet?](https://areweasyncyet.rs/)
* [Explained: How does async work in Rust? - DEV Community ?‍??‍?](https://dev.to/gruberb/explained-how-does-async-work-in-rust-46f8)
* [Alphabet Soup: Type-level transformations – James Phillips – Medium](https://medium.com/@jdrphillips/alphabet-soup-type-level-transformations-eb60918af35d)
* [How to detect integer overflow in C? - Stack Overflow](https://stackoverflow.com/questions/55468823/how-to-detect-integer-overflow-in-c)
* [malware - Can a virus destroy the BIOS of a modern computer? - Information](https://security.stackexchange.com/questions/206606/can-a-virus-destroy-the-bios-of-a-modern-computer)
* [Computing_Without_Clocks.pdf](http://www.cs.virginia.edu/~robins/Computing_Without_Clocks.pdf)
* [编译器后端，寄存器分配算法 - fivedoumi的专栏 - CSDN博客](https://blog.csdn.net/fivedoumi/article/details/54613390)
* [Talks - The Go Programming Language](https://talks.golang.org/)
* [How to squash commits in git after they have been pushed? - Stack Overflow](https://stackoverflow.com/questions/5667884/how-to-squash-commits-in-git-after-they-have-been-pushed)
* [Memory access and alignment [LWN.net]](https://lwn.net/Articles/260832/)
* [https://www.kernel.org/doc/Documentation/unaligned-memory-access.txt](https://www.kernel.org/doc/Documentation/unaligned-memory-access.txt)
* [AI-Sys Sp19](https://ucbrise.github.io/cs294-ai-sys-sp19/)
* [七树归一 -- dramforever](https://dram.cf/p/seven-trees/)
* [Timestamps and Time Zones in PostgreSQL · Philipe Fatio](https://phili.pe/posts/timestamps-and-time-zones-in-postgresql/)
* [Litherum: Addition Font](https://litherum.blogspot.com/2019/03/addition-font.html?m=1)
* [Which Programming Languages Use the Least Electricity? - The New Stack](https://thenewstack.io/which-programming-languages-use-the-least-electricity)
* [Five Super Helpful Rust Things That Nobody Told You About* | five-rust-thin](https://saghm.github.io/five-rust-things/)
* [why GNU grep is fast](https://lists.freebsd.org/pipermail/freebsd-current/2010-August/019310.html)
* [How do you compute the midpoint of an interval?](https://hal.archives-ouvertes.fr/file/index/docid/576641/filename/computing-midpoint.pdf)
* [Coremark - Wikipedia](https://en.wikipedia.org/wiki/Coremark)
* [Modern Microprocessors - A 90-Minute Guide!](http://www.lighterra.com/papers/modernmicroprocessors/)
* [装机中需要了解的PCIe的标准与坑 - 哔哩哔哩](https://www.bilibili.com/read/cv2014415)
* [The Four Polymorphisms in C](https://catonmat.net/cpp-polymorphism)
* [Blazingly fast parsing, part 1: optimizing the scanner · V8](https://v8.dev/blog/scanner)
* [SecurityWorker： Javascript 核心算法全防护 - V2EX](https://www.v2ex.com/t/549319#reply22)
* [Using the GNU Compiler Collection (GCC): Labels as Values](https://gcc.gnu.org/onlinedocs/gcc/Labels-as-Values.html)
* [An Intel Programmer Jumps Over the Wall: First Impressions of ARM SIMD Prog](https://branchfree.org/2019/03/26/an-intel-programmer-jumps-over-the-wall-first-impressions-of-arm-simd-programming/)
* [Dxxxx draft 2 - Enhanced C memory and object model.pdf](https://dedi5.nedprod.com/static/files/other/Dxxxx%20draft%202%20-%20Enhanced%20C%2B%2B%20memory%20and%20object%20model.pdf)
* [Dr. Xu Zhongxing's speech: Fuchsia OS Introduction Complete Record and Slid](https://bzdww.com/article/163937/)
* [Microsoft PowerPoint - BME373electronics2cw3da](https://web.njit.edu/~joelsd/electronics/classwork/electronics2/BME373electronics2cw12.pdf)
* [BJT Transistor as a Switch, Saturation Calculator](https://daycounter.com/Calculators/Transistor-Bias/NPN-Transistor-Bias-Calculator.phtml)
* [c - #include directive: relative to where? - Stack Overflow](https://stackoverflow.com/questions/645165/include-directive-relative-to-where)
* [Abort makefile if variable not set - Stack Overflow](https://stackoverflow.com/questions/10858261/abort-makefile-if-variable-not-set)
* [A Julia interpreter and debugger](https://julialang.org/blog/2019/03/debuggers)
* [python - Can't quit PyQt5 application with embedded iPython Qtconsole - Sta](https://stackoverflow.com/questions/29421936/cant-quit-pyqt5-application-with-embedded-ipython-qtconsole)
* [python - Reading from unbuffered os.fdopen() file object doesn't behave lik](https://stackoverflow.com/questions/31113805/reading-from-unbuffered-os-fdopen-file-object-doesnt-behave-like-os-read)
* [using pipe() dup() and execlp to mock the | shell operator](https://gist.github.com/a-cordier/33211eda92b8084a9e7e)
* [c - How do I get the directory that a program is running from? - Stack Ov](https://stackoverflow.com/questions/143174/how-do-i-get-the-directory-that-a-program-is-running-from)
* [Why Hashbrown (Rust's new HashMap implementation) Does a Double-Lookup on I](https://www.reddit.com/r/rust/comments/b38cwz/why_hashbrown_rusts_new_hashmap_implementation/)
* [abseil / Swiss Tables and absl::Hash](https://abseil.io/blog/20180927-swisstables)
* [https://stackoverflow.com/a/12149008/8563711](https://stackoverflow.com/a/12149008/8563711)
* [Bartek's coding blog: Dark Corner of C Corner Cases](https://www.bfilipek.com/2019/03/darker-cpp.html#more)
* [Higher-order Type-level Programming in Haskell](https://www.microsoft.com/en-us/research/uploads/prod/2019/03/ho-haskell-5c8bb4918a4de.pdf)
* [Truths programmers should know about case](https://www.b-list.org/weblog/2018/nov/26/case/)
* [Propagate all arguments in a bash shell script - Stack Overflow](https://stackoverflow.com/questions/4824590/propagate-all-arguments-in-a-bash-shell-script)
* [cacheAdv-1.ppt](https://courses.cs.washington.edu/courses/cse548/06wi/slides/cacheAdv.pdf)
* [curve-matcher | curve-matcher](https://chanind.github.io/curve-matcher/)
* [RFC8482 - Saying goodbye to ANY](https://blog.cloudflare.com/rfc8482-saying-goodbye-to-any/)
* [More Agda Tips - Donnacha Oisín Kidney](https://doisinkidney.com/posts/2019-03-14-more-agda-tips.html)
* [c - Why does this memory address %fs:0x28 ( fs[0x28] ) have a random value?](https://stackoverflow.com/questions/10325713/why-does-this-memory-address-fs0x28-fs0x28-have-a-random-value)
* [SweRV - An Annotated Deep Dive | Electronics etc…](https://tomverbeure.github.io/2019/03/13/SweRV.html#swerv-core-complex)
* [unique_ptr - seven calls to dereference - why is this needed? : cpp](https://www.reddit.com/r/cpp/comments/b0sq6p/unique_ptr_seven_calls_to_dereference_why_is_this/)
* [c - Performance of resizing std::vector - Stack Overflow](https://stackoverflow.com/questions/45089049/performance-of-resizing-stdvectorstdunique-ptrt)
* [When "Zoë" !== "Zoë". Or why you need to normalize Unicode strings | With B](https://withblue.ink/2019/03/11/why-you-need-to-normalize-unicode-strings.html)
* [DTrace on Windows - Microsoft Tech Community - 362902](https://techcommunity.microsoft.com/t5/Windows-Kernel-Internals/DTrace-on-Windows/ba-p/362902)
* [Bartek's coding blog: Lambdas: From C 11 to C 20, Part 2](https://www.bfilipek.com/2019/03/lambdas-story-part2.html)
* [Dynamic Branch Prediction](http://web.engr.oregonstate.edu/~benl/Projects/branch_pred/)
* [MahjongWiki](https://lietxia.github.io/#index.md)
* [Unicode spaces](http://jkorpela.fi/chars/spaces.html)
* [2bcgskew-branch-predictor/2bcgskew.cpp at master · miladm/2bcgskew-branch-p](https://github.com/miladm/2bcgskew-branch-predictor/blob/master/2bcgskew.cpp)
* [The State of Caching in Go - Dgraph Blog](https://blog.dgraph.io/post/caching-in-go/)
* [contract assertions · Wiki · lock3 / gcc-new · GitLab](https://gitlab.com/lock3/gcc-new/wikis/contract-assertions)
* [Contract code gen](http://gummif.github.io/blog/contract_code_gen.html)
* [USTC-Course | :heart:中国科学技术大学课程资源(https://ustc-resource.github.io/USTC-Cour](https://ustc-resource.github.io/USTC-Course/)
* [A generalised solution to distributed consensus | the morning paper](https://blog.acolyer.org/2019/03/08/a-generalised-solution-to-distributed-consensus/)
* [The BTB in contemporary Intel chips — Matt Godbolt’s blog](https://xania.org/201602/bpu-part-three)
* [Scheduling in React | Philipp Spiess](https://philippspiess.com/scheduling-in-react/)
* [Stop Wasting Connections, Use HTTP Keep-Alive - Lob Blog](https://lob.com/blog/use-http-keep-alive)
* [17-468.pdf](http://www.jmlr.org/papers/volume18/17-468/17-468.pdf)
* [bloggable-thoughts/finally-tagless-not-quite-dead at master · ncreep/blogga](https://github.com/ncreep/bloggable-thoughts/tree/master/finally-tagless-not-quite-dead)
* [Ghidra: A quick overview for the curious | Shortjump!](http://0xeb.net/2019/03/ghidra-a-quick-overview/)
* [C Team Blog | Making C Exception Handling Smaller On x64](https://devblogs.microsoft.com/cppblog/making-cpp-exception-handling-smaller-x64/)
* [AI 繁荣下的隐忧——Google Tensorflow 安全风险剖析](https://paper.seebug.org/838/)
* [How the Spectre and Meltdown Hacks Really Worked  - IEEE Spectrum](https://spectrum.ieee.org/computing/hardware/how-the-spectre-and-meltdown-hacks-really-worked)
* [a.out - Wikipedia](https://en.wikipedia.org/wiki/A.out)
* [Reimplementing printk() [LWN.net]](https://lwn.net/SubscriberLink/780556/9033277f8328f060/)
* [Ghidra](https://www.nsa.gov/resources/everyone/ghidra/)
* [Oxide: The Essence of Rust](https://arxiv.org/pdf/1903.00982.pdf)
* [1903.00446.pdf](https://arxiv.org/pdf/1903.00446.pdf)
* [Be careful what you copy: Invisibly inserting usernames into text with Zero](https://medium.com/@umpox/be-careful-what-you-copy-invisibly-inserting-usernames-into-text-with-zero-width-characters-18b4e6f17b66)
* [深夜分享个小发现：无形地将信息插入到具有零宽度字符的文本中！ - V2EX](https://www.v2ex.com/t/444421#reply18)
* [Building fast interpreters in Rust](https://blog.cloudflare.com/building-fast-interpreters-in-rust/)
* [Advantages and Disadvantages of a Monolithic Repository](https://people.engr.ncsu.edu/ermurph3/papers/seip18.pdf)


### 2019-05-18 - 2019-07-11
* [A gentle introduction to Linux Kernel fuzzing](https://blog.cloudflare.com/a-gentle-introduction-to-linux-kernel-fuzzing/)
* [Catching use-after-move bugs with Clang's consumed annotations – Andreas Kl](https://awesomekling.github.io/Catching-use-after-move-bugs-with-Clang-consumed-annotations/)
* [c   - How do stackless coroutines differ from stackful coroutines? - Stack ](https://stackoverflow.com/questions/28977302/how-do-stackless-coroutines-differ-from-stackful-coroutines/28989543#28989543)
* [C  2a Coroutines and dangling references – Arthur O'Dwyer – Stuff mostly ab](https://quuxplusone.github.io/blog/2019/07/10/ways-to-get-dangling-references-with-coroutines/)
* [c  11 - Has C   standard changed with respect to the use of indeterminate v](https://stackoverflow.com/questions/23415661/has-c-standard-changed-with-respect-to-the-use-of-indeterminate-values-and-und/23415662#23415662)
* [c   - Does initialization entail lvalue-to-rvalue conversion? Is `int x = x](https://stackoverflow.com/questions/14935722/does-initialization-entail-lvalue-to-rvalue-conversion-is-int-x-x-ub)
* [x86 API Hooking Demystified | Development & Security](http://jbremer.org/x86-api-hooking-demystified/)
* [c   - Is a moved-from vector always empty? - Stack Overflow](https://stackoverflow.com/questions/17730689/is-a-moved-from-vector-always-empty/17735913#)
* [Why TAGE is the best | Rustam Miftakhutdinov](https://comparch.net/2013/06/30/why-tage-is-the-best/)
* [(1 封私信 / 5 条消息) 什么是序数分析（Ordinal Analysis）？ - 知乎](https://www.zhihu.com/question/281940170/answer/738911923)
* [(1 封私信 / 5 条消息) 如何理解大可数序数（如Church-Kleene Ordinal）？ - 知乎](https://www.zhihu.com/question/281665949/answer/736670193)
* [Lock elision in glibc | 01.org](https://01.org/zh/blogs/2014/lock-elision-glibc?langredirect=1)
* [TSX anti patterns in lock elision code | Intel® Software](https://software.intel.com/en-us/articles/tsx-anti-patterns-in-lock-elision-code)
* [(1 封私信 / 5 条消息) std::vector会在不同dll中传递修改时带来影响吗？ - 知乎](https://www.zhihu.com/question/48370644)
* [DLL中传递STL参数，vector对象作为dll参数传递等问题(转) - DoubleLi - 博客园](https://www.cnblogs.com/lidabo/archive/2013/09/04/3300327.html)
* [How Dat Works](https://datprotocol.github.io/how-dat-works/)
* [栈基础 & 栈溢出 & 栈溢出进阶 - 『软件调试区』 - 吾爱破解 - LCG - LSG |安卓破解|病毒分析|破解软件|www.52pojie.](https://www.52pojie.cn/thread-974510-1-1.html)
* [leetcode Single Number II - 位运算处理数组中的数 - 代金桥 - 博客园](https://www.cnblogs.com/daijinqiao/p/3352893.html)
* [《F1 Query: Declarative Querying at Scale》读后感 - 知乎](https://zhuanlan.zhihu.com/p/53299556)
* [It’s Time for a Modern Synthesis Kernel – Embedded in Academia](https://blog.regehr.org/archives/1676)
* [Peephole optimizations in C   and C# | Egor Bogatov — Developer at Microsof](https://egorbo.com/peephole-optimizations.html)
* [Understanding Closures in Rust. – The Startup – Medium](https://medium.com/swlh/understanding-closures-in-rust-21f286ed1759)
* [firefox - Tail Call Optimization implementation in Javascript Engines - Sta](https://stackoverflow.com/questions/54719548/tail-call-optimization-implementation-in-javascript-engines)
* [javascript - ES6 Tail Recursion Optimisation Stack Overflow](https://stackoverflow.com/questions/42788139/es6-tail-recursion-optimisation-stack-overflow/47207534)
* [Breaking News: Non-Lexical Lifetimes arrives for everyone - The {pnk}f(eli)](http://blog.pnkfx.org/blog/2019/06/26/breaking-news-non-lexical-lifetimes-arrives-for-everyone/)
* [In Transactional Memory, No One Can Hear You Scream | RET2 Systems Blog](http://blog.ret2.io/2019/06/26/attacking-intel-tsx/)
* [Rust type language – journey to rust – Medium](https://medium.com/journey-to-rust/rust-type-language-48e1c43b1ef4)
* [How macros make your Rust life easier and generally better](https://blog.x5ff.xyz/blog/easy-programming-with-rust-macros/)
* [c   - Lambda capturing rvalue reference by reference - Stack Overflow](https://stackoverflow.com/questions/55559308/lambda-capturing-rvalue-reference-by-reference)
* [Lock-free Rust: Crossbeam in 2019 | stjepang.github.io](https://stjepang.github.io/2019/01/29/lock-free-rust-crossbeam-in-2019.html)
* [关于 Meltdown 与 Spectre 对龙芯影响的初步看法 - 龙芯问答社区](http://ask.loongnix.org/?/article/108)
* [MIPS: response on speculative execution and side channel vulnerabilities – ](https://www.mips.com/blog/mips-response-on-speculative-execution-and-side-channel-vulnerabilities/)
* [Free and Forgetful Functors](https://chrispenner.ca/posts/free-forgetful-functors)
* [Adjunctions and Battleship](https://chrispenner.ca/posts/adjunction-battleship)
* [Free Algebra | 何幻](https://thzt.github.io/2017/07/04/free-algebra/)
* [Gregory Szorc's Digital Home | Building Standalone Python Applications with](https://gregoryszorc.com/blog/2019/06/24/building-standalone-python-applications-with-pyoxidizer/)
* [nom 5 is here · Unhandled Expression](http://unhandledexpression.com/general/2019/06/17/nom-5-is-here.html)
* [download](http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.29.4871&rep=rep1&type=pdf)
* [Compiler basics (5): LLVM system calls | notes.eatonphil.com](http://notes.eatonphil.com/compiler-basics-llvm-system-calls.html)
* [Adrian Sampson: FPGAs Have the Wrong Abstraction](https://www.cs.cornell.edu/~asampson/blog/fpgaabstraction.html)
* [P1705R0: Enumerating Core Undefined Behavior](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2019/p1705r0.html)
* [LLVM每日谈之三十九 浅谈LLVM的异常处理 - 知乎](https://zhuanlan.zhihu.com/p/51915789)
* [LLVM里的异常处理 - wuhui_gdnt的专栏 - CSDN博客](https://blog.csdn.net/wuhui_gdnt/article/details/51859729)
* [kcp/README.en.md at master · skywind3000/kcp](https://github.com/skywind3000/kcp/blob/master/README.en.md)
* [关于目前 GFW(墙) 的封锁方式TCP封锁(阻断)猜想 | 逗比根据地](https://doubibackup.com/wkcjzpyd-2.html)
* [networking - Why does SOCKS5 require to relay UDP over UDP? - Stack Overflo](https://stackoverflow.com/questions/41967217/why-does-socks5-require-to-relay-udp-over-udp)
* [ICFP Programming Contest 2019 | Hacker News](https://news.ycombinator.com/item?id=20242272)
* [hashsuper.pdf](http://programming.sirrida.de/hashsuper.pdf)
* [Branch and Loop Reorganization to Prevent Mispredicts | Intel® Software](https://software.intel.com/en-us/articles/branch-and-loop-reorganization-to-prevent-mispredicts/)
* [c   - What is the purpose and usage of `memory_resource`? - Stack Overflow](https://stackoverflow.com/questions/44799321/what-is-the-purpose-and-usage-of-memory-resource)
* [how-web-works/README.md at master · vasanthk/how-web-works](https://github.com/vasanthk/how-web-works/blob/master/README.md)
* [USENIX - How (and How Not) to Write a Good Systems Paper](https://www.usenix.org/legacy/publications/library/proceedings/dsl97/good_paper.html)
* [GADTs: A primer - Sketch.sh](https://sketch.sh/s/yH0MJiujNSiofDWOU85loX/)
* [Threads in rust](https://chilimatic.hashnode.dev/threads-in-rust-cjwmbxw9e003pzjs19n7pa0bt)
* [The Typestate Pattern in Rust - Cliffle](http://cliffle.com/blog/rust-typestate/)
* [Comparing the Same Project in Rust, Haskell, C  , Python, Scala and OCaml -](http://thume.ca/2019/04/29/comparing-compilers-in-rust-haskell-c-and-python/)
* [RedLeaf: Towards An Operating System for Safe and Verified Firmware](https://www.ics.uci.edu/~aburtsev/doc/redleaf-hotos19.pdf)
* [Exploring C  20 - Designated Initializers : cpp](https://www.reddit.com/r/cpp/comments/a15ops/exploring_c20_designated_initializers/)
* [SerCe's blog: The matter of time()](http://serce.me/posts/16-05-2019-the-matter-of-time/)
* [Systems, Spring 2018 | Emery Berger](https://emeryberger.com/teaching/grad-systems/)
* [CRC算法的硬件电路实现：串行电路和并行电路 - 知乎](https://zhuanlan.zhihu.com/p/59666086)
* [Some History of Functional Programming Languages - 知乎](https://zhuanlan.zhihu.com/p/68623348)
* [tfp12.pdf](https://www.cs.kent.ac.uk/people/staff/dat/tfp12/tfp12.pdf)
* [MATLAB–Python–Julia cheatsheet — Cheatsheets by QuantEcon documentation](https://cheatsheets.quantecon.org/)
* [（译）UEFI 启动：实际工作原理 | woodelf@Gentoo](https://blog.woodelf.org/2014/05/28/uefi-boot-how-it-works.html)
* [actix_web - Rust](https://docs.rs/actix-web/1.0.0/actix_web/)
* [c   - Detect same class inheritance with SFINAE - Stack Overflow](https://stackoverflow.com/questions/24053998/detect-same-class-inheritance-with-sfinae)
* [online judge sandbox 设计思路（1） – Tools Matter](https://tech.liuchao.me/2016/05/online-judge-sandbox-design-1/)
* [(1 封私信 / 19 条消息) 从CPU架构的角度看，用为什么AMD相对Intel的CPU表现高分低能？ - 知乎](https://www.zhihu.com/question/303489757)
* [The design and implementation of a lock-free ring-buffer with contiguous re](https://ferrous-systems.com/blog/lock-free-ring-buffer/)
* [Project Zero: Windows Exploitation Tricks: Abusing the User-Mode Debugger](https://googleprojectzero.blogspot.com/2019/04/windows-exploitation-tricks-abusing.html)
* [semantic/why-haskell.md at master · github/semantic](https://github.com/github/semantic/blob/master/docs/why-haskell.md)
* [RustCon Asia 实录 | Rust 在国内某视频网站的应用 - 知乎](https://zhuanlan.zhihu.com/p/67941332?utm_source=qq&utm_medium=social&utm_oi=62559474417664)
* [boring-monoid-category](https://k-bx.github.io/articles/boring-monoid-category.html)
* [Use const generics for array impls · Issue #61415 · rust-lang/rust](https://github.com/rust-lang/rust/issues/61415)
* [UEFI/BIOS/MBR/GPT启动过程详解与常见系统启动问题 - 哔哩哔哩](https://www.bilibili.com/read/cv2753623)
* [[PSA] New Rust Symbol Mangling is now in nightly! : rust](https://www.reddit.com/r/rust/comments/bvifst/psa_new_rust_symbol_mangling_is_now_in_nightly/)
* [github/semantic: Parsing, analyzing, and comparing source code across many ](https://github.com/github/semantic)
* [Raft](http://thesecretlivesofdata.com/raft/)
* [20 Years of PLDI (1979-1999):  A Selection ](http://www.cs.utexas.edu/users/mckinley/20-years.html)
* [Update on await syntax](https://boats.gitlab.io/blog/post/await-decision-ii/)
* [Unification in Chalk, part 2](http://smallcultfollowing.com/babysteps/blog/2017/04/23/unification-in-chalk-part-2/)
* [Unification in Chalk, part 1](http://smallcultfollowing.com/babysteps/blog/2017/03/25/unification-in-chalk-part-1/)
* [Lowering Rust traits to logic](http://smallcultfollowing.com/babysteps/blog/2017/01/26/lowering-rust-traits-to-logic/)
* [Structural rule - Wikipedia](https://en.wikipedia.org/wiki/Structural_rule)
* [Substructural type system - Wikipedia](https://en.wikipedia.org/wiki/Substructural_type_system)
* [Why Intel Processors Draw More Power Than Expected: TDP and Turbo Explained](https://www.anandtech.com/show/13544/why-intel-processors-draw-more-power-than-expected-tdp-turbo)
* [Leetcode Top 100 Liked Problems Solution 82/100 | Hobo Chen](http://192217.space/2019/03/19/oi-icpc-leetcode/sc-leetcode_100like/)
* [Project Zero: The Definitive Guide on Win32 to NT Path Conversion](https://googleprojectzero.blogspot.com/2016/02/the-definitive-guide-on-win32-to-nt.html)
* [Scala Exercises](https://www.scala-exercises.org/)
* [www.mathcs.emory.edu/~cheung/Courses/561/Syllabus/3-C/sparse.html](http://www.mathcs.emory.edu/~cheung/Courses/561/Syllabus/3-C/sparse.html)
* [c - Multiplication of a sparse matrix in compressed column storage with a c](https://stackoverflow.com/questions/12265698/multiplication-of-a-sparse-matrix-in-compressed-column-storage-with-a-column-vec)
* [稀疏矩阵的定义（COO、CSC、CSR） - 简书](https://www.jianshu.com/p/9671c568096d)
* [Atomic File Writes on Windows · antonymale.co.uk](https://antonymale.co.uk/windows-atomic-file-writes.html)
* [calm: consistency as logical monotonicity | Bloom Programming Language](http://bloom-lang.net/calm/)
* [The CALM Conjecture: Reasoning about Consistency | Data Beta](https://databeta.wordpress.com/2010/10/28/the-calm-conjecture-reasoning-about-consistency/)
* [H.264 is magic: a technical walkthrough of a remarkable technology.](https://sidbala.com/h-264-is-magic/)
* [Irene Y. Zhang: The Case for a High-level Kernel-Bypass I/O Abstraction](http://irenezhang.net/blog/2019/05/21/demikernel.html)
* [The internals of Python string interning](http://guilload.com/python-string-interning/)
* [What’s New In Python 3.0 — Python v3.0.1 documentation](https://docs.python.org/3.0/whatsnew/3.0.html)
* [Announcing Rust 1.35.0 | Rust Blog](https://blog.rust-lang.org/2019/05/23/Rust-1.35.0.html)
* [Cache Missing For Fun And Profit [2005] aka Spectre should not have been th](https://www.reddit.com/r/programming/comments/7o6i47/cache_missing_for_fun_and_profit_2005_aka_spectre/)
* [An MDS reading list [LWN.net]](https://lwn.net/Articles/788522/)
* [ARM SoC漫谈 - 知乎专栏](https://web.archive.org/web/20170327062451/https://zhuanlan.zhihu.com/p/24878742)
* [Here's My Type, So Initialize Me Maybe (mem::uninitialized is deprecated)](https://gankro.github.io/blah/initialize-me-maybe/)
* [SliceTricks · golang/go Wiki](https://github.com/golang/go/wiki/SliceTricks)
* [Unicode programming, with examples](https://begriffs.com/posts/2019-05-23-unicode-icu.html)
* [LKML: Gao Xiang: [NOMERGE] [RFC PATCH 00/12] erofs: introduce erofs file sy](https://lkml.org/lkml/2018/5/31/306)
* [Recursion Schemes, Part II: A Mob of Morphisms](https://blog.sumtypeofway.com/recursion-schemes-part-2/#fnref5)
* [An Introduction to Recursion Schemes](https://blog.sumtypeofway.com/an-introduction-to-recursion-schemes/)
* [Algebra of Programming - initial algebra - 知乎](https://zhuanlan.zhihu.com/p/24161398)
* [F-Algebras |   Bartosz Milewski's Programming Cafe](https://bartoszmilewski.com/2017/02/28/f-algebras/)
* [【译】【图文】标准化中的 WASI：在 web 之外运行 WebAssembly 的系统接口 - 知乎](https://zhuanlan.zhihu.com/p/61423010)
* [PEP 594 -- Removing dead batteries from the standard library | Python.org](https://www.python.org/dev/peps/pep-0594/)
* [Atomic Commit In SQLite](https://www.sqlite.org/atomiccommit.html)
* [The SQLite OS Interface or "VFS"](https://www.sqlite.org/vfs.html)
* [Architecture of SQLite](https://www.sqlite.org/arch.html)
* [c   - Covariant virtual functions and smart pointers - Stack Overflow](https://stackoverflow.com/questions/1115891/covariant-virtual-functions-and-smart-pointers)
* [超市买菜 - 知乎](https://zhuanlan.zhihu.com/p/66349646)
* [c   - Why is std::ssize() introduced in C  20 - Stack Overflow](https://stackoverflow.com/questions/56217283/why-is-stdssize-introduced-in-c20)
* [phil-opp/blog_os: Writing an OS in Rust](https://github.com/phil-opp/blog_os)
* [Rust kernel modules [LWN.net]](https://lwn.net/Articles/644681/)
* [少女前线Live2D解密 | Perfare's Blog](https://www.perfare.net/1162.html)
* [多线程渲染 - 知乎](https://zhuanlan.zhihu.com/p/44116722)
* [(1 封私信 / 3 条消息) 萧井陌斧头班的学员们，谁写了操作系统浏览器编译器？ - 知乎](https://www.zhihu.com/question/325175114)
* [Modern SAT solvers: fast, neat and underused (part 3 of N) — The Coding Nes](https://codingnest.com/modern-sat-solvers-fast-neat-and-underused-part-3-of-n/)
* [Modern SAT solvers: fast, neat and underused (part 2 of N) — The Coding Nes](https://codingnest.com/modern-sat-solvers-fast-neat-and-underused-part-2-of-n/)
* [Has the Python GIL been slain? – Hacker Noon](https://hackernoon.com/has-the-python-gil-been-slain-9440d28fa93d)
* [GHC's Specializer: Much More Than You Wanted to Know :: Reasonably Polymorp](https://reasonablypolymorphic.com/blog/specialization/)
* [WSL File System Support – Windows Subsystem for Linux](https://blogs.msdn.microsoft.com/wsl/2016/06/15/wsl-file-system-support/)
* [Pico Process Overview – Windows Subsystem for Linux](https://blogs.msdn.microsoft.com/wsl/2016/05/23/pico-process-overview/)
* [Windows Subsystem for Linux Overview – Windows Subsystem for Linux](https://blogs.msdn.microsoft.com/wsl/2016/04/22/windows-subsystem-for-linux-overview/)
* [用Rust写脚本语言（零）：目录 - 知乎](https://zhuanlan.zhihu.com/p/65376093)
* [(1 封私信 / 11 条消息) 研究编程语言的人们研究哪些方面？ - 知乎](https://www.zhihu.com/question/20383055)
* [Intel官方对5月15号曝出的CPU侧信道漏洞“ZombieLoad”的详细技术分析（下） - 嘶吼 RoarTalk – 回归最本质的信息安全,互](https://www.4hou.com/vulnerable/18061.html)
* [Intel官方对5月15号曝出的CPU侧信道漏洞“ZombieLoad”的详细技术分析（上） - 嘶吼 RoarTalk – 回归最本质的信息安全,互](https://www.4hou.com/vulnerable/18059.html)
* [Deep Dive: CPUID Enumeration and Architectural MSRs](https://software.intel.com/security-software-guidance/insights/deep-dive-cpuid-enumeration-and-architectural-msrs#MDS-CPUID)
* [python - Why can't generators be pickled? - Stack Overflow](https://stackoverflow.com/questions/7180212/why-cant-generators-be-pickled?tdsourcetag=s_pctim_aiomsg)
* [python - deep copy nested iterable (or improved itertools.tee for iterable ](https://stackoverflow.com/questions/53785260/deep-copy-nested-iterable-or-improved-itertools-tee-for-iterable-of-iterables?tdsourcetag=s_pctim_aiomsg)
* [ATL Thunk机制深入分析 - 爱程序网](http://m.aichengxu.com/other/4379313.htm)


### 2019-07-12 - 2019-08-27
* [Incrementing vectors | Performance Matters](https://travisdowns.github.io/blog/2019/08/26/vector-inc.html)
* [知乎问答：如何看待 Google 的新操作系统 Fuchsia？](https://www.zhihu.com/question/49535135/answer/803528949?utm_source=com.ideashower.readitlater.pro&utm_medium=social&utm_oi=831107418380447744)
* [面向分布式系统工程师的分布式系统理论（译）](http://blog.xiayf.cn/2014/08/10/Distributed-systems-theory-for-the-distributed-systems-engineer/)
* [How do I forward an exported function to an ordinal in another DLL? | The O](https://devblogs.microsoft.com/oldnewthing/?p=6073)
* [dllhook/GenerateCode.cpp at master · jilinxiaohuo/dllhook](https://github.com/jilinxiaohuo/dllhook/blob/master/GenerateCode.cpp)
* [求组合数的算法 - Cppowboy's Blog - SegmentFault 思否](https://segmentfault.com/a/1190000005072018)
* [求组合数（取模）的两种方法 - 作业部落 Cmd Markdown 编辑阅读器](https://www.zybuluo.com/ArrowLLL/note/713749)
* [Catalan数——卡特兰数 - 邀月独斟 - 博客园](https://www.cnblogs.com/yaoyueduzhen/p/5456490.html)
* [My summary of clflush and clflushopt.](https://software.intel.com/en-us/forums/software-tuning-performance-optimization-platform-monitoring/topic/712498)
* [How-To-Write-An-LLVM-Register-Allocator/HowToWriteAnLLVMRegisterAllocator.r](https://github.com/nael8r/How-To-Write-An-LLVM-Register-Allocator/blob/master/HowToWriteAnLLVMRegisterAllocator.rst)
* [Bit Twiddling Hacks](http://graphics.stanford.edu/~seander/bithacks.html)
* [世界级难题：把不同物品装进箱子，如何使箱子表面积最小？](https://mp.weixin.qq.com/s?__biz=MzIzOTU0NTQ0MA==&mid=2247485651&idx=1&sn=a9d566876250b7cf46ca0a05b8b6f6d4&scene=21#wechat_redirect)
* [阿里全球调度算法大赛 GSAC 2018 总结 - 1 | Ying的博客](https://ying-zhang.github.io/cloud/2018/gsac18a/)
* [assembly - How are the fs/gs registers used in Linux AMD64? - Stack Overflo](https://stackoverflow.com/questions/6611346/how-are-the-fs-gs-registers-used-in-linux-amd64)
* [issue 17441: Do not cache re.compile - Python tracker](https://bugs.python.org/issue17441)
* [OCC和MVCC的区别是什么？ - 知乎](https://www.zhihu.com/question/60278698)
* [Enhance performance analysis with Intel Processor Trace. | Easyperf](https://easyperf.net/blog/2019/08/23/Intel-Processor-Trace)
* [https://stackoverflow.com/a/36789779/8563711](https://stackoverflow.com/a/36789779/8563711)
* [WebAssembly Interface Types: Interoperate with All the Things! - Mozilla Ha](https://hacks.mozilla.org/2019/08/webassembly-interface-types/)
* [std::memory_order - cppreference.com](https://zh.cppreference.com/w/cpp/atomic/memory_order)
* [std::memory_order - cppreference.com](https://en.cppreference.com/w/cpp/atomic/memory_order)
* [腾讯云李海翔：数据库的并发控制技术深度探索-DOIT](https://www.doit.com.cn/p/274122.html)
* [腾讯云李海翔：数据库的并发控制技术深度探索-DOIT](https://www.doit.com.cn/p/274122.html)
* [arm GIC介绍之一 - sunsissy的专栏 - CSDN博客](https://blog.csdn.net/sunsissy/article/details/73791470)
* [(1) 主页 / Twitter](https://twitter.com/Gankra_/status/1164229887055601665/photo/1)
* [Gif格式简要介绍 - 格物致知 - CSDN博客](https://blog.csdn.net/shiroh_ms08/article/details/53347873)
* [Hazard Pointer - Kongfy's Blog](http://blog.kongfy.com/2017/02/hazard-pointer/)
* [锁无关的数据结构与Hazard指针——操纵有限的资源 - 刘未鹏|C  的罗浮宫 - CSDN博客](https://blog.csdn.net/pongba/article/details/589864)
* [再谈Linux内核中的RCU机制-MagicBoy2010-ChinaUnix博客](http://blog.chinaunix.net/uid-23769728-id-3080134.html)
* [事务的四个特性 - 知乎专栏·「分布式理论与技术」](https://zhuanlan.zhihu.com/p/55806606?utm_source=com.ideashower.readitlater.pro&utm_medium=social&utm_oi=831107418380447744)
* [algorithm - What is the difference between LR, SLR, and LALR parsers? - Sta](https://stackoverflow.com/questions/2676144/what-is-the-difference-between-lr-slr-and-lalr-parsers)
* [视图、存储函数、存储过程、触发器：MySQL系列之五 - 生生不息.连绵不绝 - 博客园](https://www.cnblogs.com/L-dongf/p/9150659.html)
* [SQL Server User-Defined Functions - Simple Talk](https://www.red-gate.com/simple-talk/sql/t-sql-programming/sql-server-user-defined-functions/)
* [LRU cache 算法的实现 - renwotao2009的专栏 - CSDN博客](https://blog.csdn.net/renwotao2009/article/details/52814322)
* [(5 条消息) 用 C   写线程池是怎样一种体验？ - 知乎](https://www.zhihu.com/question/27908489)
* [[算法]树上倍增求LCA - 阿波罗2003 - 博客园](https://www.cnblogs.com/yyf0309/p/5972701.html)
* [后缀数组详解 - 自为风月马前卒 - 博客园](https://www.cnblogs.com/zwfymqz/p/8413523.html)
* [后缀数组 最详细讲解 - ~victorique~ - 博客园](https://www.cnblogs.com/victorique/p/8480093.html)
* [multithreading - Why Was Python Written with the GIL? - Software Engineerin](https://softwareengineering.stackexchange.com/questions/186889/why-was-python-written-with-the-gil)
* [python 3.x - __new__, __init__, and metaclasses (and superclasses) - Stack ](https://stackoverflow.com/questions/50635635/new-init-and-metaclasses-and-superclasses)
* [python 3.x - __new__, __init__, and metaclasses (and superclasses) - Stack ](https://stackoverflow.com/questions/50635635/new-init-and-metaclasses-and-superclasses)
* [IaaS，PaaS，SaaS 的区别 - 阮一峰的网络日志](http://www.ruanyifeng.com/blog/2017/07/iaas-paas-saas.html)
* [`[[trivial_abi]]` 101 – Arthur O'Dwyer – Stuff mostly about C  ](https://quuxplusone.github.io/blog/2018/05/02/trivial-abi-101/)
* [从B树、B 树、B*树谈到R 树 - 结构之法 算法之道 - CSDN博客](https://blog.csdn.net/v_JULY_v/article/details/6530142)
* [algorithm - Replacement Selection Sort v. Selection Sort - Stack Overflow](https://stackoverflow.com/questions/16326689/replacement-selection-sort-v-selection-sort)
* [集群服务器Session同步 - moonandstar08 - 博客园](https://www.cnblogs.com/moonandstar08/p/5582281.html)
* [如何设计一个秒杀系统？ - 憧憬美好生活的boy - CSDN博客](https://blog.csdn.net/libra_ts/article/details/85198469)
* [使用 UNIX System V IPC 机制共享应用程序数据](https://www.ibm.com/developerworks/cn/aix/library/au-ipc/index.html)
* [集群、分布式、负载均衡区别 - 何必等明天 - 博客园](https://www.cnblogs.com/xzwblog/p/7255364.html)
* [【杨氏定理 钩子公式】初步 - nimphy - 博客园](https://www.cnblogs.com/hua-dong/p/8454215.html)
* [同步与异步，阻塞与非阻塞的区别,以及select,poll和epoll - 简书](https://www.jianshu.com/p/48391e7d8810)
* [MySQL中的锁（表锁、行锁） - 雪山飞猪 - 博客园](https://www.cnblogs.com/chenqionghe/p/4845693.html)
* [Linux中动态内存的分配与回收(heap, buddy system, stab) - 见贤思齐 - CSDN博客](https://blog.csdn.net/yyf_it/article/details/52203620)
* [Why is there a large performance impact when looping over an array with 240](https://stackoverflow.com/questions/57458460/why-is-there-a-large-performance-impact-when-looping-over-an-array-with-240-or-m)
* [dfs序和欧拉序 - Styx-ferryman - 博客园](https://www.cnblogs.com/stxy-ferryman/p/7741970.html)
* [数据库索引数据结构总结 | 硬核技术](https://zhewuzhou.github.io/2018/10/18/Database-Indexes/)
* [(5 条消息) pthread_cond_wait 为什么需要传递 mutex 参数？ - 知乎](https://www.zhihu.com/question/24116967)
* [PostgreSQL Indexes](http://leopard.in.ua/2015/04/13/postgresql-indexes)
* [Enumerating All Cycles in an Undirected Graph - CodeProject](https://www.codeproject.com/Articles/1158232/Enumerating-All-Cycles-in-an-Undirected-Graph)
* [Improving std::vector : cpp](https://www.reddit.com/r/cpp/comments/cno9ep/improving_stdvector/)
* [folly/UninitializedMemoryHacks.h at master · facebook/folly](https://github.com/facebook/folly/blob/master/folly/memory/UninitializedMemoryHacks.h#L81)
* [Consistency Models](http://jepsen.io/consistency)
* [assembly - What is the stack engine in the Sandybridge microarchitecture? -](https://stackoverflow.com/questions/36631576/what-is-the-stack-engine-in-the-sandybridge-microarchitecture)
* [Bartek's coding blog: 17 Smaller but Handy C  17 Features](https://www.bfilipek.com/2019/08/17smallercpp17features.html)
* [Linux 死锁检测模块 Lockdep 简介 - 魅族内核团队](http://kernel.meizu.com/linux-dead-lock-detect-lockdep.html)
* [Conservative GC Algorithmic Overview](https://www.hboehm.info/gc/gcdescr.html)
* [Compilers for Free](https://codon.com/compilers-for-free#partial-evaluation)
* [[资料合集] RednaxelaFX写的文章/回答的导航帖（work in progress） - 知乎](https://zhuanlan.zhihu.com/p/25042028)
* [Visualizing PEG Parsing - Guido van Rossum - Medium](https://medium.com/@gvanrossum_83706/visualizing-peg-parsing-93a36f259423)
* [The Problem with Friendly C – Embedded in Academia](https://blog.regehr.org/archives/1287)
* [Proposal for a Friendly Dialect of C – Embedded in Academia](https://blog.regehr.org/archives/1180)
* [课程目录 - 知乎](https://zhuanlan.zhihu.com/p/24393775?refer=hinus)
* [type theory - Strict positivity - Computer Science Stack Exchange](https://cs.stackexchange.com/questions/55646/strict-positivity)
* [有趣的线段树模板合集（线段树，最短/长路，单调栈，线段树合并，线段树分裂，树上差分，Tarjan-LCA，势能线段树，李超线段树） - Flash_H](https://www.cnblogs.com/flashhu/p/9651161.html)
* [Sparse: a look under the hood [LWN.net]](https://lwn.net/Articles/689907/)
* [Introduction to variant analysis with QL and LGTM (part 2) | Semmle Blog](https://blog.semmle.com/introduction-to-variant-analysis-part-2/)
* [Case study: Searching for a vulnerability pattern in the Linux kernel | Ale](https://a13xp0p0v.github.io/2019/08/10/cfu.html)
* [Parallelism in PostgreSQL - Percona Database Performance Blog](https://www.percona.com/blog/2019/07/30/parallelism-in-postgresql/)
* [OI树上问题 简单学习笔记 - 风浔凌 - 博客园](https://www.cnblogs.com/fengxunling/p/10227189.html)
* [[动态规划] 《背包九讲》阅读笔记 - OI - IceCab - CSDN博客](https://blog.csdn.net/icecab/article/details/81116418)
* [[动态规划] 《背包九讲》阅读笔记 - OI - IceCab - CSDN博客](https://blog.csdn.net/icecab/article/details/81116418)
* [背包九讲 - 莫道青天真无道，能逍遥时且逍遥！ - CSDN博客](https://blog.csdn.net/ling_du/article/details/41594767)
* [followup_hkt_emu.md](https://gist.github.com/edmundsmith/e09d5f473172066c0023ef84ee830cad)
* [Method for Emulating Higher-Kinded Types in Rust](https://gist.github.com/edmundsmith/855fcf0cb35dd467c29a9350481f0ecf)
* [Artifact Evaluation: Tips for Authors – Primordial Loop](https://rohanpadhye.github.io/Artifact-Evaluation-Tips-for-Authors/)
* [Bitdefender SWAPGS Attack Mitigation Solutions](https://www.bitdefender.com/business/swapgs-attack.html#how)
* [CGEN: 1. Introduction to CGEN](https://sourceware.org/cgen/docs/cgen_1.html)
* [https://sourceware.org/binutils/binutils-porting-guide.txt](https://sourceware.org/binutils/binutils-porting-guide.txt)
* [看Google如何实现Wide & Deep模型(1) - 知乎](https://zhuanlan.zhihu.com/p/47293765)
* [以太网学习笔记-tonywam1036-ChinaUnix博客](http://blog.chinaunix.net/uid-20592805-id-1918684.html)
* [卷积神经网络优化算法 | 黎明灰烬 博客](https://jackwish.net/convolution-neural-networks-optimization.html)
* [从winograd原理到实现及汇编优化 - 简书](https://www.jianshu.com/p/4907e6c93452)
* [Winograd 方法快速计算卷积 | Memo](http://shuokay.com/2018/02/21/winograd/)
* [NCNN winograd详解（一） - 知乎](https://zhuanlan.zhihu.com/p/72149270)
* [SuperV1234 comments on What Happened to C  20 Contracts?](https://old.reddit.com/r/cpp/comments/cmk7ek/what_happened_to_c20_contracts/ew3s43u/)
* [What Happened to C  20 Contracts? : cpp](https://www.reddit.com/r/cpp/comments/cmk7ek/what_happened_to_c20_contracts/)
* ["Assume" clause in gcc](https://stackoverflow.com/q/25667901/8563711)
* [Rust Language Cheat Sheet](https://cheats.rs/)
* [arrays - How to sort in-place using the merge sort algorithm? - Stack Overf](https://stackoverflow.com/questions/2571049/how-to-sort-in-place-using-the-merge-sort-algorithm)
* [awesome-tech-papers/后端资料整理.md at master · hiddenzzh/awesome-tech-papers](https://github.com/hiddenzzh/awesome-tech-papers/blob/master/%E5%90%8E%E7%AB%AF%E8%B5%84%E6%96%99%E6%95%B4%E7%90%86.md)
* [FLP and CAP aren't the same thing](https://www.the-paper-trail.org/post/2012-03-25-flp-and-cap-arent-the-same-thing/)
* [How to get consistent results when benchmarking on Linux? | Easyperf](https://easyperf.net/blog/2019/08/02/Perf-measurement-environment-on-Linux)
* [A C   acronym glossary – Arthur O'Dwyer – Stuff mostly about C  ](https://quuxplusone.github.io/blog/2019/08/02/the-tough-guide-to-cpp-acronyms/)
* [Attributes in Clang — Clang 10 documentation](https://clang.llvm.org/docs/AttributeReference.html#require-constant-initialization-clang-require-constant-initialization)
* [Accelerating Compute-Intensive Workloads with Intel® AVX-512 | C   Team Blo](https://devblogs.microsoft.com/cppblog/accelerating-compute-intensive-workloads-with-intel-avx-512/)
* [LKML: Gabriel Krisman Bertazi: [PATCH RFC 2/2] futex: Implement mechanism t](https://lkml.org/lkml/2019/7/30/1399)
* [Asynchronous API in C   and the Continuation Monad](https://www.fpcomplete.com/blog/2012/06/asynchronous-api-in-c-and-the-continuation-monad)
* [Why does the Rust compiler not optimize code assuming that two mutable refe](https://stackoverflow.com/questions/57259126/why-does-the-rust-compiler-not-optimize-code-assuming-that-two-mutable-reference)
* [数据库索引B 树 - Entropy_lxl - 博客园](https://www.cnblogs.com/lixiaolun/p/5058304.html)
* [喜刷刷: [LeetCode] Longest Valid Parentheses](http://bangbingsyb.blogspot.com/2014/11/leetcode-longest-valid-parentheses.html)
* [TVM Codebase Walkthrough by Example — tvm 0.6.dev documentation](https://docs.tvm.ai/dev/codebase_walkthrough.html?utm_source=qq&utm_medium=social&utm_oi=831107418380447744)
* [如何利用TVM快速实现超越Numpy(MKL)的GEMM - 知乎](https://zhuanlan.zhihu.com/p/75203171)
* [How to optimize GEMM on CPU — tvm 0.6.dev documentation](https://docs.tvm.ai/tutorials/optimize/opt_gemm.html#sphx-glr-tutorials-optimize-opt-gemm-py)
* [ISSTA 2019见闻 - 知乎](https://zhuanlan.zhihu.com/p/75163958?utm_source=qq&utm_medium=social&utm_oi=831107418380447744)
* [高级语言编写kernel，鱼和熊掌不可兼得 - 知乎](https://zhuanlan.zhihu.com/p/73210995?utm_source=qq&utm_medium=social&utm_oi=831107418380447744)
* [TCP的seq和ack号计算方法 - HappyRocking的专栏 - CSDN博客](https://blog.csdn.net/HappyRocking/article/details/78198776)
* [“三次握手，四次挥手”你真的懂吗？ - 知乎](https://zhuanlan.zhihu.com/p/53374516)
* [RISC Is Fundamentally Unscalable](https://blackhole12.com/blog/risc-is-fundamentally-unscalable/)
* [Malicious code in the purescript npm installer - Harry Garrood](https://harry.garrood.me/blog/malicious-code-in-purescript-npm-installer/)
* [Comparisons in C  20](https://brevzin.github.io/c++/2019/07/28/comparisons-cpp20/)
* [everdox/InfinityHook: Hook system calls, context switches, page faults and ](https://github.com/everdox/InfinityHook)
* [Rust: safe and unsafe as theorems and axioms](https://iandouglasscott.com/2019/07/26/rust-safe-and-unsafe-as-theorems-and-axioms/)
* [Swisstable, a Quick and Dirty Description](https://gankro.github.io/blah/hashbrown-tldr/)
* [TCP快速重传与快速恢复原理分析 - zhangskd的专栏 - CSDN博客](https://blog.csdn.net/zhangskd/article/details/7174682)
* [C   协程的近况、设计与实现中的细节和决策 - OSC开源社区 - 简书](https://www.jianshu.com/p/837bb161793a)
* [Coroutines in LLVM — LLVM 8 documentation](http://releases.llvm.org/8.0.0/docs/Coroutines.html)
* [Who's afraid of a big bad optimizing compiler? [LWN.net]](https://lwn.net/Articles/793253/)
* [浮点峰值那些事儿 - 知乎专栏·「并行计算漫谈」](https://zhuanlan.zhihu.com/p/28226956?utm_source=com.ideashower.readitlater.pro&utm_medium=social&utm_oi=831107418380447744)
* [如何利用TVM快速实现超越Numpy(MKL)的GEMM - 知乎专栏·「蓝色的味道」](https://zhuanlan.zhihu.com/p/75203171?utm_source=com.ideashower.readitlater.pro&utm_medium=social&utm_oi=831107418380447744)
* [正则表达式, NFA, DFA, AC多模匹配算法 - 安子自语 - CSDN博客](https://blog.csdn.net/an_zhenwei/article/details/8668120)
* [正则表达式所引发的DoS攻击（Redos） - 安全客，安全资讯平台](https://www.anquanke.com/post/id/177100)
* [ER随机图模型 - 集智百科](http://wiki.swarma.net/index.php/ER%E9%9A%8F%E6%9C%BA%E5%9B%BE%E6%A8%A1%E5%9E%8B#section_1)
* [https://stackoverflow.com/a/14229152/8563711](https://stackoverflow.com/a/14229152/8563711)
* [Efficiently Generating Python Hash Collisions | Precision Computing](https://www.leeholmes.com/blog/2019/07/23/efficiently-generating-python-hash-collisions/)
* [std::format in C  20](http://www.zverovich.net/2019/07/23/std-format-cpp20.html)
* [Modern text rendering with Linux: Part 1 | Home](https://mrandri19.github.io/2019/07/18/modern-text-rendering-linux-ep1.html)
* [ISO/IEC JTC1 Procedures : Standard C  ](https://isocpp.org/std/iso-iec-jtc1-procedures)
* [2019-07 Cologne ISO C   Committee Trip Report — ? The C  20 Eagle has Lande](https://www.reddit.com/r/cpp/comments/cfk9de/201907_cologne_iso_c_committee_trip_report_the/)
* [Trip report: Summer ISO C   standards meeting (Cologne) – Sutter’s Mill](https://herbsutter.com/2019/07/20/trip-report-summer-iso-c-standards-meeting-cologne/)
* [Text Formatting](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2019/p0645r9.html)
* [assembly - Why does the x86-64 GCC function prologue allocate less stack th](https://stackoverflow.com/questions/13201644/why-does-the-x86-64-gcc-function-prologue-allocate-less-stack-than-the-local-var)
* [深入理解动态选路协议——RIP、OSPF和BGP协议 - 夜苍山 - CSDN博客](https://blog.csdn.net/liao152/article/details/44919673)
* [What's coming in Python 3.8 [LWN.net]](https://lwn.net/SubscriberLink/793818/0c6f9dd271021cd4/)
* [C   Coroutines Ts generator with co_await](https://gist.github.com/Serikov/b28115e3b13a7c0ec45ab76468ddb0bd)
* [Exploring MSVC Coroutine | luncliff.github.io](https://luncliff.github.io/posts/Exploring-MSVC-Coroutine.html)
* [c  20协程入门 - 知乎](https://zhuanlan.zhihu.com/p/59178345)
* [LEETCODE上买卖stock问题汇总解 - ChessC的博客 - CSDN博客](https://blog.csdn.net/qq_26896213/article/details/81908240)
* [How to speed up the Rust compiler in 2019 | Nicholas Nethercote](https://blog.mozilla.org/nnethercote/2019/07/17/how-to-speed-up-the-rust-compiler-in-2019/)
* [Resource.rs - 旨在提供一站式的 Rust 学习资源](https://resource.rs/)
* [Cover Page · GitBook](http://www.cs.cornell.edu/courses/cs3110/2019sp/textbook/)
* [assembly - Where exactly is the red zone on x86-64? - Stack Overflow](https://stackoverflow.com/questions/38042188/where-exactly-is-the-red-zone-on-x86-64)
* [assembly - What is the purpose of red zone? - Software Engineering Stack Ex](https://softwareengineering.stackexchange.com/questions/230089/what-is-the-purpose-of-red-zone)
* [Bartek's coding blog: Five Awesome C   Papers for Cologne ISO Meeting](https://www.bfilipek.com/2019/07/cologne.html)
* [c   - initializer_list and template type deduction - Stack Overflow](https://stackoverflow.com/questions/12431495/initializer-list-and-template-type-deduction)
* [x86 calling conventions - Wikipedia](https://en.wikipedia.org/wiki/X86_calling_conventions#x86-64_calling_conventions)
* [X86调用约定 - 维基百科，自由的百科全书](https://zh.wikipedia.org/zh-hans/X86%E8%B0%83%E7%94%A8%E7%BA%A6%E5%AE%9A#fastcall)
* [what happens in the background from the time you press the Power button unt](https://leetcode.com/discuss/interview-question/operating-system/124638/what-happens-in-the-background-from-the-time-you-press-the-Power-button-until-the-Linux-login-prompt-appears)
* [What Is Rust's unsafe? | Nora Codes](https://nora.codes/post/what-is-rusts-unsafe/)



### 2019-08-27 - 2019-09-11

- [Taskbar Latency and Kernel Calls | Random ASCII – tech blog of Bruce Dawson](https://randomascii.wordpress.com/2019/09/08/taskbar-latency-and-kernel-calls/)
- [You Won’t Believe This One Weird CPU Instruction! - Vaibhav Sagar](https://vaibhavsagar.com/blog/2019/09/08/popcount/)
- https://www.ryanfrantz.com/posts/systems-thinking-in-practice.html
- [简单易懂的博弈论讲解(巴什博弈、尼姆博弈、威佐夫博弈、斐波那契博弈、SG定理) - The_Virtuoso - 博客园](https://www.cnblogs.com/Khada-Jhin/p/9609561.html)
- [It’s not wrong that "??‍♂️".length == 7](https://hsivonen.fi/string-length/)
- [Compiler Explorer](https://godbolt.org/)
- [c - Why can we use `std::move` on a `const` object? - Stack Overflow](https://stackoverflow.com/questions/28595117/why-can-we-use-stdmove-on-a-const-object)
- [记一次 TCMalloc Debug 经历 #2 - 知乎专栏·「SmartX 技术博客」](https://zhuanlan.zhihu.com/p/81683409?utm_source=com.ideashower.readitlater.pro&utm_medium=social&utm_oi=831107418380447744)
- [局部敏感哈希(Locality-Sensitive Hashing, LSH) - 夕月一弯 - 博客园](https://www.cnblogs.com/wt869054461/p/8148940.html)
- [UUID 做主键有什么优势和劣势？ - V2EX](https://v2ex.com/t/598593#reply59)
- [laisky-blog: Python 之路](https://laisky.com/p/python-road/)
- [laisky-blog: Golang 性能分析笔记](https://laisky.com/p/go-perf/)
- [Lenky个人站点 » Triple Fault的捕获与处理](http://www.lenky.info/archives/2012/04/1507)
- [c - When is CUDA's __shared__ memory useful? - Stack Overflow](https://stackoverflow.com/questions/8011376/when-is-cudas-shared-memory-useful)
- [解密TTY - 李秋豪 - 博客园](https://www.cnblogs.com/liqiuhao/p/9031803.html)
- [How Rust optimizes async/await I - Tyler Mandry](https://tmandry.gitlab.io/blog/posts/optimizing-await-1/)
- [is it valid to use standard library function name as identifier in C ? - S](https://stackoverflow.com/questions/33856187/is-it-valid-to-use-standard-library-function-name-as-identifier-in-c)
- [LSM树（Log-Structured Merge Tree）存储引擎 - 远方的专栏 - CSDN博客](https://blog.csdn.net/u014774781/article/details/52105708)
- [关于函数式语言的pointfree和SKI的一点我的想法 - 知乎](https://zhuanlan.zhihu.com/p/81218667)
- [Combining Coverage-Guided and Generation-Based Fuzzing](http://fitzgeraldnick.com/2019/09/04/combining-coverage-guided-and-generation-based-fuzzing.html)
- [File locking in Linux](https://gavv.github.io/articles/file-locks/)
- [int 8量化 - 知乎](https://zhuanlan.zhihu.com/p/42688598)
- [GCC内联汇编入门 - 吴遥的专栏 - CSDN博客](https://blog.csdn.net/wuyao721/article/details/3573598#_Toc200964859)
- [Main Page - Competitive Programming Algorithms](https://cp-algorithms.com/)
- [基于贪心算法的几类区间覆盖问题 - 可笑痴狂 - 博客园](https://www.cnblogs.com/dongsheng/archive/2013/04/19/3030444.html)
- [内存模型系列（上）- 内存一致性模型（Memory Consistency） - 猫科龙 - CSDN博客](https://blog.csdn.net/maokelong95/article/details/80727952#Memory_Models_Series__Memory_Consistency_Slides__Talk_3)
- [DDR内存 时序指南 - ghostyu的专栏 - CSDN博客](https://blog.csdn.net/ghostyu/article/details/7728106)
- [如何动态调用 C 函数 | WeRead团队博客](https://wereadteam.github.io/2016/07/05/CFunction/?utm_source=com.ideashower.readitlater.pro&utm_medium=social&utm_oi=831107418380447744)
- [从Intel Optane SSD和DIMM谈全闪存性能优化 - Hardy - CSDN博客](https://blog.csdn.net/swingwang/article/details/77279366)
- [JVM中方法调用的实现机制 - Java译站](http://it.deepinmind.com/jvm/2019/07/19/jvm-method-invocation.html)
- [(8 条消息) DDR3和DDR4内存的区别是什么，都有哪些提高？ - 知乎](https://www.zhihu.com/question/57270200)
- [内存系列二：深入理解硬件原理 - 知乎](https://zhuanlan.zhihu.com/p/26327347)
- [SSD(固态硬盘)简介 [金步国\]](http://www.jinbuguo.com/storage/ssd_intro.html)
- [Windows的四种链接方式 | Binary Think](https://binarythink.net/2013/06/windows-link/)
- [12 块 6T， raid50 还是 raid10 还是软 raid？ - V2EX](https://www.v2ex.com/t/597017)
- [知乎问答：raid5 磁盘阵列真的不安全么？](https://www.zhihu.com/question/20164654/answer/348274179?utm_source=com.ideashower.readitlater.pro&utm_medium=social&utm_oi=831107418380447744)
- [Intel RDT - lvmxh - 博客园](https://www.cnblogs.com/shaohef/p/6636526.html)
- [Home · intel/intel-cmt-cat Wiki](https://github.com/intel/intel-cmt-cat/wiki)
- [Windows Registry](https://www.dfir.training/resources/downloads/windows-registry)
- [Thread by @Foone: "So sometime between 1987 and whenever DVI/HDMI/DisplayPo](https://threadreaderapp.com/thread/1156392702725902336.html)
- [abseil / B-tree Ordered Containers](https://abseil.io/blog/20190812-btree)
- [Barnes-Hut算法（quad-tree的一个应用） - 算法网](http://ddrv.cn/a/79385/?tdsourcetag=s_pctim_aiomsg)
- [用 Kleene 递归定理构造输出自己的 Python 程序](https://zhuanlan.zhihu.com/p/25098306?utm_source=com.ideashower.readitlater.pro&utm_medium=social&utm_oi=831107418380447744)
- [Linux内核内存管理算法Buddy和Slab - 知乎](https://zhuanlan.zhihu.com/p/36140017)
- [Linux slab 分配器剖析](https://www.ibm.com/developerworks/cn/linux/l-linux-slab-allocator/index.html)
- [kimwalisch/primecount: ? Fast prime counting function implementation](https://github.com/kimwalisch/primecount)
- [HKTs via type classes](https://gist.github.com/thautwarm/f136174be60cbf1bf0861cce76888ee0)
- [sorting - Python: how does the functools cmp_to_key function works? - Stack](https://stackoverflow.com/questions/32752739/python-how-does-the-functools-cmp-to-key-function-works)
- [tcp建立连接为什么需要三次握手 - 简书](https://www.jianshu.com/p/e7f45779008a)
- [关于上的主定理（Master Theorem）的证明 - young7的个人空间 - OSCHINA](https://my.oschina.net/u/240275/blog/232763)
- [Linux syscall过程分析（万字长文） - 云 社区 - 腾讯云](https://cloud.tencent.com/developer/article/1492374)
- [Sushi Roll: A CPU research kernel with minimal noise for cycle-by-cycle mic](https://gamozolabs.github.io/metrology/2019/08/19/sushi_roll.html)
- [Anti-hash test. - Codeforces](https://codeforces.com/blog/entry/4898?tdsourcetag=s_pctim_aiomsg)
- [干货！KCon 2019 议题 PPT 公开](https://paper.seebug.org/1023/)
- [Tengine_gemm_tutorial/readme_cn.md at master · lyuchuny3/Tengine_gemm_tutor](https://github.com/lyuchuny3/Tengine_gemm_tutorial/blob/master/readme_cn.md?utm_source=qq&utm_medium=social&utm_oi=831107418380447744&tdsourcetag=s_pctim_aiomsg)
- [linux在多核处理器上的负载均衡原理 - 华的专栏 - CSDN博客](https://blog.csdn.net/wh8_2011/article/details/52089438)
- [SMP多核启动 - 云 社区 - 腾讯云](https://cloud.tencent.com/developer/article/1169513)
- [ARM多核引导过程 - 走向星辰大海 - CSDN博客](https://blog.csdn.net/cs0301lm/article/details/41078599)
- https://stackoverflow.com/a/33651438/8563711
- [辗转相除法(GCD)求左旋转字符串 - hhwyt - 博客园](https://www.cnblogs.com/hhwyt/p/10353359.html)
- [Async Stack Traces in Rust](http://fitzgeraldnick.com/2019/08/27/async-stacks-in-rust.html)
- [c - Why does sizeof(x ) not increment x? - Stack Overflow](https://stackoverflow.com/questions/8225776/why-does-sizeofx-not-increment-x/21995718#21995718)
- [在没有 https 的情况下，如何确保用户登录安全 - V2EX](https://v2ex.com/t/595470?p=1)









## Tools
* [Repl.it](https://repl.it/)
* [Coliru-Cpp](http://coliru.stacked-crooked.com/)
* [Wandbox](http://melpon.org/wandbox)
* [pastebin](http://paste.ubuntu.com/)
* [Graph-Visualize](https://csacademy.com/app/graph_editor/)
* [Archive.org](http://archive.org/web/)
* [CoderPad](https://coderpad.io/)
* [Woboq](https://woboq.com/codebrowser.html)
* [Cling](https://rawgit.com/vgvassilev/cling/master/www/index.html))
* [ideone](http://ideone.com/)
* [Octave-Online](http://octave-online.net/)
* [Geordi](http://www.eelis.net/geordi/)
* [Godbolt](https://godbolt.org/)  (also cppx.godbolt)
* [loopy](http://ncase.me/loopy/)
* [factordb](http://factordb.com/)
* [pointfree-io](http://pointfree.io/)
* [Cpp-shell](http://cpp.sh/)
* [Cpp-formatter](http://codebeautify.org/cpp-formatter-beautifier)
* [RegExr](http://regexr.com/)
* [regex-online](http://tool.oschina.net/regex/#)
* [Linux-kernel-cross-reference](http://lxr.free-electrons.com/)
* [Haskell-tools](http://haskelltools.org/)
* [Pinboard](https://pinboard.in/)
* [DPaste](https://dpaste.dzfl.pl/new)
* [Verilog-online](http://www.tutorialspoint.com/compile_verilog_online.php)
* [Search-cppr](http://coudier.com/tk?entry=cppref)
* [TryHaskell](http://www.tryhaskell.org/)
* [webcompiler-VC++](http://webcompiler.cloudapp.net/)
* [TryKotlin](https://try.kotlinlang.org/)
* [RexTester](http://rextester.com/l/cpp_online_compiler_visual)
* [VirusTotal](https://www.virustotal.com/zh-cn/)
* [KeyBase](https://keybase.io/)
* [codeelf](https://unbug.github.io/codelf)
* [TIO](https://tio.run/#)
* [weavesilk](http://weavesilk.com/)
* [XSS'OR](http://xssor.io/)
* [VirusTotal](https://www.virustotal.com/en/)
* [CloudConvert](https://cloudconvert.com)
* [Discover-tech-stack-sitestack](https://sitestacks.com/?ref=nyc)
* [Quick-Bench-Cpp](http://quick-bench.com/)
* [高匿IP](https://proxy.coderbusy.com/zh-cn/classical/anonymous-type/highanonymous.aspx)
* [PythonTutor](http://pythontutor.com/)
* [ODA](https://www.onlinedisassembler.com/odaweb/)
* [tidr_](https://tldr.ostera.io)
* [matrix-calculus](http://www.matrixcalculus.org/)
* [MD5HashingNet](https://md5hashing.net/)
* [Explainshell](https://explainshell.com/)