# Awesome Sites

<!-- TOC -->

- [Awesome Sites](#awesome-sites)
    - [Blog](#blog)
        - [OI/Alg](#oialg)
    - [Book/Booklist](#bookbooklist)
    - [Community/Maillist](#communitymaillist)
    - [Conference](#conference)
    - [Criteria/Documentation/Reference/Wiki](#criteriadocumentationreferencewiki)
    - [Github](#github)
    - [Guide/Tutorial](#guidetutorial)
    - [Intellectual Breath](#intellectual-breath)
    - [Jokes/DDD/misc](#jokesdddmisc)
    - [MOOC/Class](#moocclass)
    - [Papers](#papers)
    - [Quiz](#quiz)
        - [Security](#security)
    - [Serenpity](#serenpity)
        - [2017-3-13](#2017-3-13)
        - [2017-3-14](#2017-3-14)
        - [2017-3-15](#2017-3-15)
        - [2017-3-16](#2017-3-16)
        - [2017-3-19](#2017-3-19)
        - [2017-3-20](#2017-3-20)
        - [2017-3-22](#2017-3-22)
        - [2017-3-23](#2017-3-23)
        - [2017-3-24](#2017-3-24)
        - [2017-3-25](#2017-3-25)
        - [2017-3-26](#2017-3-26)
        - [2017-3-27](#2017-3-27)
        - [2017-3-28](#2017-3-28)
        - [2017-3-29](#2017-3-29)
        - [2017-3-30](#2017-3-30)
        - [2017-4-3](#2017-4-3)
        - [2017-4-4](#2017-4-4)
        - [2017-4-5](#2017-4-5)
        - [2017-4-6](#2017-4-6)
        - [2017-4-8](#2017-4-8)
        - [2017-4-9](#2017-4-9)
        - [2017-4-10](#2017-4-10)
        - [2017-4-11](#2017-4-11)
        - [2017-4-12](#2017-4-12)
        - [2017-4-13](#2017-4-13)
        - [2017-4-14](#2017-4-14)
        - [2017-4-15](#2017-4-15)
        - [2017-4-16](#2017-4-16)
        - [2017-4-18](#2017-4-18)
        - [2017-4-19](#2017-4-19)
        - [2017-4-22](#2017-4-22)
        - [2017-4-23](#2017-4-23)
        - [2017-4-24](#2017-4-24)
        - [2017-4-25](#2017-4-25)
        - [2017-4-26](#2017-4-26)
        - [2017-4-27](#2017-4-27)
        - [2017-4-28](#2017-4-28)
        - [2017-4-29](#2017-4-29)
        - [2017-4-30](#2017-4-30)
        - [2017-5-1](#2017-5-1)
        - [2017-5-2](#2017-5-2)
        - [2017-5-3](#2017-5-3)
        - [2017-5-4](#2017-5-4)
        - [2017-5-5](#2017-5-5)
        - [2017-5-6](#2017-5-6)
        - [2017-5-7](#2017-5-7)
        - [2017-5-8](#2017-5-8)
        - [2017-5-9](#2017-5-9)
        - [2017-5-10](#2017-5-10)
        - [2017-5-11](#2017-5-11)
        - [2017-5-12](#2017-5-12)
        - [2017-5-13](#2017-5-13)
        - [2017-5-14](#2017-5-14)
        - [2017-5-15](#2017-5-15)
        - [2017-5-16](#2017-5-16)
        - [2017-5-17](#2017-5-17)
        - [2017-5-18](#2017-5-18)
        - [2017-5-19](#2017-5-19)
        - [2017-5-20](#2017-5-20)
        - [2017-5-21](#2017-5-21)
        - [2017-5-22](#2017-5-22)
        - [2017-5-23](#2017-5-23)
        - [2017-5-24](#2017-5-24)
        - [2017-5-25](#2017-5-25)
        - [2017-5-26](#2017-5-26)
        - [2017-5-27](#2017-5-27)
        - [2017-5-28](#2017-5-28)
        - [2017-5-29](#2017-5-29)
        - [2017-5-30](#2017-5-30)
        - [2017-5-31](#2017-5-31)
        - [2017-6-1](#2017-6-1)
        - [2017-6-2](#2017-6-2)
        - [2017-6-3](#2017-6-3)
        - [2017-6-4](#2017-6-4)
        - [2017-6-5](#2017-6-5)
        - [2017-6-6](#2017-6-6)
        - [2017-6-7](#2017-6-7)
        - [2017-6-8](#2017-6-8)
        - [2017-6-9](#2017-6-9)
        - [2017-6-10](#2017-6-10)
        - [2017-6-11](#2017-6-11)
        - [2017-6-12](#2017-6-12)
        - [2017-6-13](#2017-6-13)
        - [2017-6-14](#2017-6-14)
        - [2017-6-15](#2017-6-15)
        - [2017-6-16](#2017-6-16)
        - [2017-6-17](#2017-6-17)
        - [2017-6-19](#2017-6-19)
        - [2017-6-20](#2017-6-20)
        - [2017-6-21](#2017-6-21)
        - [2017-6-22](#2017-6-22)
        - [2017-6-23](#2017-6-23)
        - [2017-6-24](#2017-6-24)
        - [2017-6-25](#2017-6-25)
        - [2017-6-26](#2017-6-26)
        - [2017-6-27](#2017-6-27)
        - [2017-6-28](#2017-6-28)
        - [2017-6-29](#2017-6-29)
        - [2017-6-30](#2017-6-30)
        - [2017-7-1](#2017-7-1)
        - [2017-7-2](#2017-7-2)
        - [2017-7-3](#2017-7-3)
        - [2017-7-4](#2017-7-4)
        - [2017-7-5](#2017-7-5)
        - [2017-7-6](#2017-7-6)
        - [2017-7-7](#2017-7-7)
        - [2017-7-8](#2017-7-8)
        - [2017-7-9](#2017-7-9)
        - [2017-7-10](#2017-7-10)
        - [2017-7-11](#2017-7-11)
        - [2017-7-12](#2017-7-12)
        - [2017-7-13](#2017-7-13)
        - [2017-7-14](#2017-7-14)
        - [2017-7-15](#2017-7-15)
        - [2017-7-16](#2017-7-16)
        - [2017-7-17](#2017-7-17)
        - [2017-7-18](#2017-7-18)
        - [2017-7-19](#2017-7-19)
        - [2017-7-20](#2017-7-20)
        - [2017-7-21](#2017-7-21)
        - [2017-7-22](#2017-7-22)
        - [2017-7-23](#2017-7-23)
        - [2017-7-23](#2017-7-23)
        - [2017-7-25](#2017-7-25)
        - [2017-7-26](#2017-7-26)
        - [2017-7-29](#2017-7-29)
        - [2017-7-30](#2017-7-30)
        - [2017-7-31](#2017-7-31)
        - [2017-8-1](#2017-8-1)
        - [2017-8-2](#2017-8-2)
        - [2017-8-3](#2017-8-3)
        - [2017-8-4](#2017-8-4)
        - [2017-8-5](#2017-8-5)
        - [2017-8-6](#2017-8-6)
        - [2017-8-7](#2017-8-7)
        - [2017-8-8](#2017-8-8)
        - [2017-8-9](#2017-8-9)
        - [2017-8-10](#2017-8-10)
        - [2017-8-11](#2017-8-11)
        - [2017-8-12 - 2017-8-14](#2017-8-12---2017-8-14)
        - [2017-8-15 - 2017-8-21](#2017-8-15---2017-8-21)
        - [2017-8-22](#2017-8-22)
        - [2017-8-23](#2017-8-23)
        - [2017-8-24](#2017-8-24)
        - [2017-8-25](#2017-8-25)
        - [2017-8-29](#2017-8-29)
        - [2017-8-30](#2017-8-30)
        - [2017-8-31](#2017-8-31)
        - [2017-9-1](#2017-9-1)
        - [2017-9-2](#2017-9-2)
        - [2017-9-3](#2017-9-3)
        - [2017-9-4](#2017-9-4)
        - [2017-9-6](#2017-9-6)
        - [2017-9-7](#2017-9-7)
        - [2017-9-8](#2017-9-8)
        - [2017-9-9](#2017-9-9)
        - [2017-9-10](#2017-9-10)
        - [2017-9-11](#2017-9-11)
        - [2017-9-12](#2017-9-12)
        - [2017-9-13](#2017-9-13)
        - [2017-9-14](#2017-9-14)
        - [2017-9-15-2017-9-17](#2017-9-15-2017-9-17)
        - [2017-9-18](#2017-9-18)
        - [2017-9-19](#2017-9-19)
        - [2017-9-20](#2017-9-20)
        - [2017-9-21](#2017-9-21)
        - [2017-9-22](#2017-9-22)
            - [2017-9-23](#2017-9-23)
            - [2017-9-24](#2017-9-24)
            - [2017-9-24](#2017-9-24)
            - [2017-9-25](#2017-9-25)
            - [2017-9-26](#2017-9-26)
            - [2017-9-27](#2017-9-27)
            - [2017-9-28](#2017-9-28)
            - [2017-9-29](#2017-9-29)
            - [2017-9-30](#2017-9-30)
            - [2017-10-1](#2017-10-1)
            - [2017-10-2](#2017-10-2)
            - [2017-10-3](#2017-10-3)
            - [2017-10-4](#2017-10-4)
            - [2017-10-5](#2017-10-5)
            - [2017-10-6 - 2017-10-8](#2017-10-6---2017-10-8)
            - [2017-10-9 - 2017-10-10](#2017-10-9---2017-10-10)
            - [2017-10-11](#2017-10-11)
            - [2017-10-12](#2017-10-12)
            - [2017-10-13](#2017-10-13)
            - [2017-10-14](#2017-10-14)
            - [2017-10-15](#2017-10-15)
            - [2017-10-16](#2017-10-16)
            - [2017-10-17](#2017-10-17)
            - [2017-10-18](#2017-10-18)
            - [2017-10-19](#2017-10-19)
            - [2017-10-20](#2017-10-20)
            - [2017-10-20](#2017-10-20)
            - [2017-10-22](#2017-10-22)
            - [2017-10-23](#2017-10-23)
            - [2017-10-24](#2017-10-24)
            - [2017-10-25](#2017-10-25)
            - [2017-10-26](#2017-10-26)
            - [2017-10-27](#2017-10-27)
            - [2017-10-28](#2017-10-28)
            - [2017-10-29](#2017-10-29)
            - [2017-10-30](#2017-10-30)
            - [2017-10-31](#2017-10-31)
            - [2017-11-1](#2017-11-1)
            - [2017-11-2](#2017-11-2)
            - [2017-11-3](#2017-11-3)
            - [2017-11-4](#2017-11-4)
            - [2017-11-5](#2017-11-5)
            - [2017-11-6](#2017-11-6)
            - [2017-11-7](#2017-11-7)
            - [2017-11-8 - 2017-11-9](#2017-11-8---2017-11-9)
            - [2017-11-10](#2017-11-10)
            - [2017-11-11](#2017-11-11)
            - [2017-11-12](#2017-11-12)
            - [2017-11-13](#2017-11-13)
            - [2017-11-14](#2017-11-14)
            - [2017-11-15](#2017-11-15)
            - [2017-11-16](#2017-11-16)
            - [2017-11-17](#2017-11-17)
            - [2017-11-18](#2017-11-18)
            - [2017-11-19](#2017-11-19)
            - [2017-11-20](#2017-11-20)
            - [2017-11-21](#2017-11-21)
            - [2017-11-22](#2017-11-22)
            - [2017-11-23](#2017-11-23)
            - [2017-11-24](#2017-11-24)
            - [2017-11-25](#2017-11-25)
            - [2017-11-26](#2017-11-26)
            - [2017-11-27](#2017-11-27)
            - [2017-11-28](#2017-11-28)
            - [2017-11-29](#2017-11-29)
            - [2017-11-30](#2017-11-30)
            - [2017-12-1](#2017-12-1)
            - [2017-12-2](#2017-12-2)
            - [2017-12-3](#2017-12-3)
            - [2017-12-4](#2017-12-4)
            - [2017-12-5](#2017-12-5)
            - [2017-12-6](#2017-12-6)
            - [2017-12-7](#2017-12-7)
            - [2017-12-08](#2017-12-08)
            - [2017-12-09](#2017-12-09)
            - [2017-12-10](#2017-12-10)
            - [2017-12-11](#2017-12-11)
            - [2017-12-12](#2017-12-12)
            - [2017-12-13](#2017-12-13)
            - [2017-12-14](#2017-12-14)
            - [2017-12-15](#2017-12-15)
            - [2017-12-16](#2017-12-16)
            - [2017-12-17](#2017-12-17)
            - [2017-12-18](#2017-12-18)
            - [2017-12-19](#2017-12-19)
            - [2017-12-20](#2017-12-20)
            - [2017-12-21](#2017-12-21)
            - [2017-12-22](#2017-12-22)
            - [2017-12-23](#2017-12-23)
            - [2017-12-24](#2017-12-24)
            - [2017-12-25](#2017-12-25)
            - [2017-12-26](#2017-12-26)
            - [2017-12-27](#2017-12-27)
    - [Tools](#tools)

<!-- /TOC -->

Order of items is just based on Nothing :: Maybe.

## Blog
* [lali3344/os](http://blog.csdn.net/melody_lu123)
* [Unixwiz](http://unixwiz.net/)
* [Diting0x/cppconcurrency](http://www.chongh.wiki/archives/)
* [Herb-Sutter/c++](https://herbsutter.com/)
* [Preshing on Programming/c++](http://preshing.com/)
* [BS/c++](http://www.stroustrup.com/)
* [MSDN-Blogs](https://blogs.msdn.microsoft.com/)
* [Cheukyin/Cpp-FP](http://www.cnblogs.com/cheukyin/)
* [Techdelight/Alg](http://www.techiedelight.com/)
* [Armin-Ronacher/Python](http://lucumr.pocoo.org/)
* [HN-Blog](https://www.diffur.com/which-programming-blogs-do-you-follow)
* [jjhou/cpp](http://jjhou.boolan.com/)
* [youxu](https://blog.youxu.info/)
* [Carlos-Schults/C#](http://carlosschults.net/)
* [UnitUniverse/Cpp](http://blog.csdn.net/unituniverse2)
* [��ΰ��/Cpp](http://blog.csdn.net/pongba)
* [lockless/Cpp](http://locklessinc.com/articles/)
* [VBird/Linux](http://linux.vbird.org/)
* [Leavesong/Reverse](https://www.leavesongs.com/)
* [Bracha/PLT](http://bracha.org/Site/Home.html)
* [Chris-Taylor/PLT](http://chris-taylor.github.io/)
* [Lambda-Startup/FP](http://lambda-startup.com/)
* [Beej/Network](http://beej.us/blog/)
* [Chenshuo/csdn](http://blog.csdn.net/solstice/article/)
* [CrazyCpp](https://crazycpp.wordpress.com/)
* [Vczh](http://www.cppblog.com/vczh/)
* [Damotou/Haskell](https://zhuanlan.zhihu.com/damotou)
* [Matt-might/PLT](http://matt.might.net/articles/)
* [Sighingnow](http://sighingnow.github.io/)
* [Nark.cc](http://nark.cc/)
* [ds.laboratory/PLT](http://dmitrysoshnikov.com/)
* [yinyang/PLT](http://www.yinwang.org/)
* [Cpptruth](http://cpptruths.blogspot.jp/)
* [i11r](http://www.is-programmer.com/)
* [Alastair-Reid/ARM](https://alastairreid.github.io/alastairreid.github.io/)
* [Typelevel/Scala](http://typelevel.org/blog/)
* [Oleg/PLT](http://okmij.org/ftp/)
* [oleksandr-manzyuk/PLT](https://oleksandrmanzyuk.wordpress.com/)
* [SunnyElf/CTF](https://www.hackfun.org/)
* [RainerGrimm/Cpp](https://www.patreon.com/rainer_grimm/posts)
* [贺师俊/JS/FP](http://johnhax.net/)
* [sigfpe/Haskell](http://blog.sigfpe.com/)
* [LogicMatters/Logic](http://www.logicmatters.net/)
* [Bartosz Milewski/C++/Haskell/Category-Theory](https://bartoszmilewski.com/)
* [ice1000/Kotlin/Java](http://ice1000.org/)
* [Nadeau/C/Cpp](http://nadeausoftware.com/articles/c_c)
* [Baiy/Cpp](http://baiy.cn/)
* [SuperV1234/Cpp](https://vittorioromeo.info/index.html)
* [agner/Cpp/Assembly/CPU](http://www.agner.org/optimize/blog/)
* [ProjectZero](https://googleprojectzero.blogspot.com/)
* [Regehr/Embedded](https://blog.regehr.org)
* [PPP/CTF](http://dttw.tech/)
* [Well-Typed/Haskell](http://www.well-typed.com/blog/)
* [OldNewThings](https://blogs.msdn.microsoft.com/oldnewthing/)
* [RFX/VM](http://rednaxelafx.iteye.com/blog/492667)
* [lihaoyi/Scala](http://www.lihaoyi.com/)
* [ReWolf/Security](http://blog.rewolf.pl/blog/)
* [Stupid-Python-Ideas](http://stupidpythonideas.blogspot.com/)
* [preshing/Cpp](http://preshing.com/archives/)
* [GeoffChappel/SoftwareAnalysis](http://www.geoffchappell.com/index.htm)
* [Pointer/Smq/C++](http://www.cnblogs.com/pointer-smq/)


### OI/Alg
* [Riteme](https://riteme.github.io)
* [Menci](https://oi.men.ci/#blog)
* [CreationAugust](http://blog.csdn.net/creationaugust)
* [Claris](http://www.cnblogs.com/clrs97/)
* [tangjz](http://blog.csdn.net/skywalkert)
* [miskcoo](http://blog.miskcoo.com/about)
* [hzwer](http://hzwer.com/)
* [ctzsm](http://www.ctzsm.com/)
* [TDL-wiki](https://wiki-tdl.icpc-camp.org/)


## Book/Booklist
* [Beautiful-SICP](http://sarabander.github.io/sicp/html/index.xhtml)
* [SICP-answer](http://sicp.readthedocs.io/en/latest/)
* The little schemer -] EOPL -] TAPL -] PFPL
* [Real-world-haskell](http://book.realworldhaskell.org/)
* [Real-world-haskell-cn](http://cnhaskell.com/)
* [PLAI/PLT](https://zhuanlan.zhihu.com/lotuc)
* [FreeBSD-handbook](https://www.freebsd.org/doc/zh_CN.UTF-8/books/handbook/)
* [The-Little-Book-of-Rust-Macros](https://danielkeep.github.io/tlborm/book/index.html)
* [From NAND to Tetris](http://www.nand2tetris.org/)
* [Probabilistic-Programming-and-Bayesian=Methods](http://camdavidsonpilon.github.io/Probabilistic-Programming-and-Bayesian-Methods-for-Hackers/)
* [Hrbust-acm-book](https://hrbust-acm-team.gitbooks.io/acm-book/content/)
* [Stonybrook-alg](http://www3.cs.stonybrook.edu/~algorith/video-lectures/)
* [UnlambdaPL/PLT/Combinator](http://www.madore.org/~david/programs/unlambda/)
* [Programming-in-D](http://ddili.org/ders/d.en/index.html)
* [Deep-Learning-MIT](http://www.deeplearningbook.org/)
* [MarisaKirisame-bookmarks](https://github.com/MarisaKirisame/bookmarks)
* [PLT-steshaw](http://steshaw.org/plt/)
* [Build-your-own-lisp-en](http://www.buildyourownlisp.com/contents)
* [Build-your-own-lisp-cn](https://ksco.gitbooks.io/build-your-own-lisp/)
* [Effective-Scala](http://twitter.github.io/effectivescala/index.html)
* [Communicating-Sequential-Processes](http://www.usingcsp.com/cspbook.pdf)
* [Competitive-Programming-Book](https://cses.fi/book.html)
* [Graphical-Linear-Algebra/PLT](https://graphicallinearalgebra.net/)
* [PLT-ama](https://zhuanlan.zhihu.com/p/19917853?)
* [Tagless-Cookbook](http://okmij.org/ftp/tagless-final/cookbook.html)
* [PersonalWiki/C++/C#/JS](https://www.gitbook.com/book/aleen42/personalwiki/details)
* [Haskell-GHC](https://zhuanlan.zhihu.com/p/26375722)
* [How to make a computer operating system](https://samypesse.gitbooks.io/how-to-create-an-operating-system/)
* [Cpp-draft](http://eel.is/c++draft/)
* [Mathematical-Components](https://github.com/math-comp/mcb)
* [How-to-Learn-Haskell](https://www.zhihu.com/question/20193745)
* [Python-for-Scientists=and-Engineers](http://pythonforengineers.com/python-for-scientists-and-engineers/)
* [Windows-SysInternals](https://technet.microsoft.com/en-us/sysinternals/)
* [Rust-Cookbook](https://brson.github.io/rust-cookbook/)
* [Mostly-Adequate-Guide-to-FP/js](https://drboolean.gitbooks.io/mostly-adequate-guide/content/)
* [Kotlin-primer](https://kymjs.com/code/2017/02/03/01/)
* [Functional-Design-and-Architecture](https://drive.google.com/drive/folders/0B1Rdr1fbS6M9SjlKUk1zMVNjOVU)
* [CONSTRAINT PROGRAMMING](http://ktiml.mff.cuni.cz/~bartak/constraints/index.html)
* [The Algorithm Design Manual](http://www8.cs.umu.se/kurser/TDBA77/VT06/algorithms/BOOK/BOOK/BOOK.HTM)
* [O'Relly-Free](http://www.oreilly.com/programming/free/?cmp=li-business-free-info-onboarding_li_freereport_programming_ac)
* [Growing-Compiler](http://www.cs.dartmouth.edu/~mckeeman/cs48/mxcom/gem/html/GrowingCompiler.html)
* [Underscore/Scala](http://underscore.io/books/)
* [The-Book-of-Shaders](https://thebookofshaders.com/)
* [Common-Lisp-Cookbook](https://lispcookbook.github.io/cl-cookbook/)
* [Parallel and Concurrent Programming in Haskell](http://chimera.labs.oreilly.com/books/1230000000929/index.html)
* [How-to-Design-Programs](http://www.ccs.neu.edu/home/matthias/HtDP2e/index.html)
* [SIMPLY-FPU](http://www.ray.masmcode.com/tutorial/)


## Community/Maillist
* [IBM-developerworks](https://www.ibm.com/developerworks/)
* [Qita](https://qiita.com/)
* [C-FAQ/comp.lang.c](http://c-faq.com/)
* [ISOCPP](https://isocpp.org/)
* [pediy](http://bbs.pediy.com/)
* [schoolofhaskell](https://www.schoolofhaskell.com/)
* [ali-yq](https://yq.aliyun.com/articles)
* [MeetingCpp](http://meetingcpp.com/)
* [Lambda-the-Ultimate](http://lambda-the-ultimate.org/)
* [CERT](https://www.cert.org/)
* [ghc-trac](https://ghc.haskell.org/trac/ghc)
* [KDE](https://community.kde.org/Policies)
* [Blackhat](http://www.blackhat.com/)
* [Dlang](https://dlang.org/)
* [Comonod](http://comonad.com/reader/)
* [BleepingComputer/Security](https://www.bleepingcomputer.com/)
* [Freebuf](http://www.freebuf.com/)
* [seebug](http://paper.seebug.org/)
* [National-Cyber-Security-Centre](https://www.ncsc.gov.uk/)
* [Haskell-Cafe](https://mail.haskell.org/pipermail/haskell-cafe/)
* [VS-feedback](https://connect.microsoft.com/VisualStudio/feedback/)
* [LLVM-project-blog](http://blog.llvm.org/)
* [VCBlog](https://blogs.msdn.microsoft.com/vcblog)
* [Usenet-Archive](http://yarchive.net/home.html)
* [WG21](https://wg21.cmeerw.net/)




## Conference
* [BoB/PLT](https://www.youtube.com/playlist?list=PLHvf3gk-RdgU8CUcxpFA-aq1nTeJ0njhF)
* [Summer-Haskell](summer.haskell.org)
* [Topconf](https://www.topconf.com/)
* [code.haskell.org](http://code.haskell.org/)
* [SIGBOVIK](http://sigbovik.org/)
* [ACCUConf/Cpp](https://conference.accu.org/site/index.html)
* [DConf/Dlang](http://dconf.org/)
* [ICFP](http://www.icfpconference.org/)
* [ACL](https://www.aclweb.org/portal/acl)
* [CppCon/Cpp](https://cppcon.org/)
* [CppNow/Cpp](http://cppnow.org/)
* [ZuriHac/Haskell](https://zurihac.info/)
* [China-Theory-Week](http://itcs.shufe.edu.cn/ctw2017/)
* [LambdaConf/PLT](http://lambdaconf.us/)
* [GopherCon](https://www.gophercon.com/)
* [OPLSS](https://www.cs.uoregon.edu/research/summerschool/summer17/)
* [DSSS](https://deepspec.org/main)
* [DefCon](https://media.defcon.org/)
* [USENIX-Security](https://www.usenix.org/conference/usenixsecurity17)


## Criteria/Documentation/Reference/Wiki
* [POSIX](http://pubs.opengroup.org/onlinepubs/9699919799/)
* [WG21-Cpp](http://open-std.org/JTC1/SC22/WG21/)
* [Itanium-Cpp-ABI](http://itanium-cxx-abi.github.io/cxx-abi/)
* [ARM-ABI](http://infocenter.arm.com/help/index.jsp?topic=/com.arm.doc.subset.swdev.abi/index.html)
* [Linux Manual](http://man7.org/)
* [Linux man-pages](https://www.kernel.org/doc/man-pages/)
* [RFC](http://www.rfc-editor.org/rfc/)
* [Python-PEP](https://www.python.org/dev/peps/)
* [Unicode](http://www.unicode.org/versions/Unicode9.0.0/)
* [Unicode-draft](http://www.unicode.org/versions/Unicode10.0.0/)
* [SSS/Collection](https://zhuanlan.zhihu.com/p/25644695)
* [Intel-IA](https://software.intel.com/en-us/articles/intel-sdm)
* [AMD-doc](http://developer.amd.com/resources/developer-guides-manuals/)
* [Intel-doc](https://software.intel.com/en-us/search/site/article)
* [OpenSceneGraph](http://camlosg.sourceforge.net/osg/index.html)
* [MSDN](https://msdn.microsoft.com/library)
* [GCC](https://gcc.gnu.org/onlinedocs/index.html)
* [Clang](http://clang.llvm.org/docs/index.html)
* [LLVM-project](https://llvm.org/svn/llvm-project/)
* [FHS](http://www.pathname.com/fhs/)
* [FreeBSD](https://www.freebsd.org/doc/)
* [Lua](https://www.lua.org/manual/5.3/)
* [Dlang-wiki](https://wiki.dlang.org/The_D_Programming_Language)
* [Cppreference](http://en.cppreference.com/w/)
* [Scholarpedia](http://www.scholarpedia.org/article/Main_Page)
* [Hoogle](https://www.haskell.org/hoogle/)
* [Esolang](https://esolangs.org/wiki/Main_Page)
* [Stanford-Encyclopedia-of-Philosopy](https://plato.stanford.edu/entries/goedel-incompleteness/)
* [ECMA](http://www.ecma-international.org/publications/)
* [Rust-lang](https://doc.rust-lang.org/)
* [Dlang](http://wiki.dlang.org/)
* [Deitel-Resource-Center-C](http://www.deitel.com/Default.aspx?tabid=204)
* [Haskell-2010-Report](https://www.haskell.org/onlinereport/haskell2010/)
* [avrgcc](http://www.arduino.cn/avrgcc/modules.html)
* [ReferenceSource](http://referencesource.microsoft.com/)
* [Racket](http://docs.racket-lang.org/reference/index.html)
* [Symbols/ObjC](http://www.cpp01.com/)
* [Typeclassopedia](https://wiki.haskell.org/Typeclassopedia)
* [OWASP/Security](https://www.owasp.org/index.php/Main_Page)
* [nLab](https://ncatlab.org/nlab/show/HomePage)
* [C/C++-Platform-Macro](http://nadeausoftware.com/articles/2012/01/c_c_tip_how_use_compiler_predefined_macros_detect_operating_system)
* [gcc-SVN](https://gcc.gnu.org/viewcvs/gcc/trunk/libstdc%2B%2B-v3/include/)
* [GNU-FTP](http://ftp.gnu.org/)
* [NT-Status-Code](https://msdn.microsoft.com/en-us/library/cc704588.aspx)
* [MSDN-Library](https://msdn.microsoft.com/en-us/library/ms123401.aspx)
* [MSDN-Open-Spec](https://msdn.microsoft.com/en-us/library/dd208104.aspx)
* [Visual-Cpp-Language-Reference(C++/CX)](https://docs.microsoft.com/zh-cn/cpp/cppcx/visual-c-language-reference-c-cx)
* [Stackage](https://www.stackage.org/)
* [PyTorch-CN](http://pytorch-cn.readthedocs.io/zh/latest/)
* [LLVM](http://llvm.org/docs/index.html)
* [W3C](https://www.w3.org/TR/)
* [CSS](https://www.w3.org/TR/CSS)
* [Bugs-ProjectZero](https://bugs.chromium.org/p/project-zero/issues/list)
* [Memory-management](http://www.memorymanagement.org/index.html)
* [Program-Transformation](http://www.program-transformation.org/Transform/WebHome)
* [STABS-debug-symbol](https://sourceware.org/gdb/current/onlinedocs/stabs/index.html)
* [Linux-Standard-Base](http://refspecs.linuxfoundation.org/lsb.shtml)
* [Undocumented-Functions-in-NT](https://undocumented.ntinternals.net/)
* [CTF-wiki](https://ctf-wiki.github.io/ctf-wiki/#/)


## Github
* [Kivy-CN](https://github.com/cycleuser/Kivy-CN)
* [awesome](https://github.com/sindresorhus/awesome)
* [csharplang](https://github.com/dotnet/csharplang)
* [dotnet-standard](https://github.com/dotnet/standard)
* [haskell-ghc](https://github.com/ghc/ghc)
* [CppCoreGuideline](https://github.com/isocpp/CppCoreGuidelines)
* [Cpp1z-qqgroup](http://git.oschina.net/mongodb_client/cpp1z-group-awesome)
* [YSlib](https://github.com/FrankHB/YSlib)
* [pl-docs](https://github.com/FrankHB/pl-docs)
* [MCF](https://github.com/lhmouse/MCF)
* [AES-GCM-SIV](https://github.com/Shay-Gueron/AES-GCM-SIV)
* [Stanford-ACM](https://github.com/jaehyunp/stanfordacm)
* [Anyrainel-ACM](https://github.com/Anyrainel)
* [awesome-cpp](https://github.com/fffaraz/awesome-cpp)
* [awesome-dotnet](https://github.com/quozd/awesome-dotnet)
* [Pi-forall-PLV](https://github.com/sweirich/pi-forall)
* [System-Design-Interview](https://github.com/checkcheckzz/system-design-interview)
* [System-Design-Primer](https://github.com/donnemartin/system-design-primer)
* [what-happen-when-CN](https://github.com/skyline75489/what-happens-when-zh_CN)
* [SLAMBook](https://github.com/gaoxiang12/slambook)
* [FuckGalEngine](https://github.com/Inori/FuckGalEngine)
* [Syscall-Monitor](https://github.com/hzqst/Syscall-Monitor)
* [Mostly-adequate-guide-FP](https://github.com/MostlyAdequate/mostly-adequate-guide)
* [Implementations-DL](https://github.com/tdeboissiere/DeepLearningImplementations)
* [Cheukyin/Cpp](https://github.com/Cheukyin)
* [Vlpp/Cpp](https://github.com/vczh-libraries/Vlpp)
* [Reflection++/Cpp](https://github.com/hczhcz/reflectionpp)
* [Tensorflow](https://github.com/tensorflow/tensorflow)
* [LFS8-CN](https://github.com/LinuxStory/lfs-8.0-Chinese)
* [Docker-Programming-Language](https://github.com/nacyot/docker-programming-languages)
* [Snippets/Cpp](https://github.com/mclow/snippets)
* [Book-notes](https://github.com/mgp/book-notes)
* [Swift-Alg-Club](https://github.com/raywenderlich/swift-algorithm-club)
* [Interactive-Latency](https://github.com/colin-scott/interactive_latencies)
* [Loki](https://github.com/dutor/loki)
* [Continuable](https://github.com/Naios/continuable)
* [Cpp1z-Change](https://github.com/tvaneerd/cpp17_in_TTs)
* [call-in-stack/coroutine-cpp](https://github.com/yuanzhubi/call_in_stack)
* [syntax-suger-python](https://github.com/czheo/syntax_sugar_python)
* [dev-awesomeness/cppcon+gdc17](https://github.com/mc-gulu/dev-awesomenesses)
* [pycparser](https://github.com/eliben/pycparser)
* [compilingTheory](https://github.com/netcan/compilingTheory)
* [500lines/Python](https://github.com/aosabook/500lines)
* [PyTricks](https://github.com/brennerm/PyTricks)
* [macropy](https://github.com/lihaoyi/macropy)
* [q/python](https://github.com/zestyping/q)
* [cosmos/cpp](https://github.com/qicosmos/cosmos)
* [RTCCpp](https://github.com/RuntimeCompiledCPlusPlus/RuntimeCompiledCPlusPlus)
* [Interview](https://github.com/kdn251/interviews)
* [CSDI/Notes](https://github.com/SJTU-SE/CSDI)
* [pytorch-tutorial](https://github.com/yunjey/pytorch-tutorial)
* [qicosmos](https://github.com/qicosmos/cosmos)
* [Windows-hack](https://github.com/LazoCoder/Windows-Hacks)
* [Effective-Modern-Cpp-CN](https://github.com/Ricardo666666/Effective-Modern-Cpp-Zh)
* [JASEL/Cpp-proposals](https://github.com/viboes/std-make)
* [Value-category-cheatsheet/Cpp](https://github.com/jeaye/value-category-cheatsheet)
* [WASM-Lua](https://github.com/vvanders/wasm_lua)
* [Web-Developer-Roadmap](https://github.com/kamranahmedse/developer-roadmap)
* [C4](https://github.com/rswier/c4)
* [dyweb-course](https://github.com/dyweb/course)
* [Write-you-a-haskell](https://github.com/sdiehl/write-you-a-haskell)
* [Pretty-RFC](http://pretty-rfc.herokuapp.com/)
* [Swapview](https://github.com/lilydjwg/swapview)
* [algo4j/jni](https://github.com/ice1000/algo4j)
* [boost.outcome/cpp](https://github.com/ned14/boost.outcome/tree/master/include/boost/outcome)
* [range-v3/cpp](https://github.com/ericniebler/range-v3)
* [match3/cpp](https://github.com/modern-cpp-examples/match3)
* [boost.sml/cpp](https://github.com/boost-experimental/sml/tree/278efceb553eba357518d2889066102156ce4d5f)
* [algorithm-data-structure/cpp](https://github.com/xtaci/algorithms)
* [coding-questions](https://github.com/checkcheckzz/coding-questions)
* [tinyrenderer/cpp](https://github.com/ssloy/tinyrenderer)
* [bhuztez/cpp](https://github.com/bhuztez)
* [july-taocp](https://github.com/julycoding/The-Art-Of-Programming-By-July)
* [CS-offer](https://github.com/xuelangZF/CS_Offer)
* [fp-course](https://github.com/tonymorris/course)
* [MiniOS](https://github.com/bajdcc/MiniOS)
* [coodtransform](https://github.com/wandergis/coordtransform)
* [Probabilistic-Programming-and-Bayesian=Methods](https://github.com/CamDavidsonPilon/Probabilistic-Programming-and-Bayesian-Methods-for-Hackers)
* [rust-lang-nursery/reference](https://github.com/rust-lang-nursery/reference)
* [state-of-Haskell-ecosystem](https://github.com/Gabriel439/post-rfc)
* [FormalSystem](https://github.com/alexprengere/FormalSystems)
* [go-is-not-good](https://github.com/ksimka/go-is-not-good)
* [LookupTable](https://github.com/Const-me/LookupTables)
* [Sample-Prothon-Project](https://github.com/pypa/sampleproject)
* [Local-hook/Cpp](https://github.com/yuanzhubi/local_hook)
* [Write-you-a-Haskell](https://github.com/sdiehl/write-you-a-haskell)
* [Bash-guide](https://github.com/Idnan/bash-guide)
* [Lambda-Calculus/Haskell](https://github.com/txyyss/Lambda-Calculus)
* [AlgoDS](https://github.com/sherxon/AlgoDS/blob/master/README.md)
* [Programming-in-D](https://github.com/DlangRen/Programming-in-D)
* [Google-re2](https://github.com/google/re2/)
* [arrayfire/GPU](https://github.com/arrayfire/arrayfire)
* [job-hunting/OOP](https://github.com/yaobinwen/job_hunting)
* [ChihuahuaLang/PLT](https://github.com/molikto/ChihuahuaLang)
* [pysmt/Satisfiability/PLT](https://github.com/pysmt/pysmt)
* [awesome-rust](https://github.com/kud1ing/awesome-rust)
* [awesome-d](https://github.com/zhaopuming/awesome-d)
* [awesome-dotnet](https://github.com/quozd/awesome-dotnet)
* [awesome-dotnot-core](https://github.com/thangchung/awesome-dotnet-core)
* [awesome-haskell](https://github.com/krispo/awesome-haskell)
* [Bigint-toybi/Cpp](https://github.com/iamstupid/toybi)
* [instaparse/Clojure](https://github.com/Engelberg/instaparse)
* [Tars/rpc/cpp](https://github.com/Tencent/Tars)
* [Simple-FP/PLT](https://github.com/psygnisfive/SimpleFP)
* [Simple-FP-v2/PLT](https://github.com/psygnisfive/SimpleFP-v2)
* [CTF-pwn-tips](https://github.com/Naetw/CTF-pwn-tips)
* [Thrill/Distributed/Cpp](https://github.com/thrill/thrill)
* [libuid/Dlang](https://github.com/mogud/libuid)
* [yu/Dlang](https://github.com/dushibaiyu/yu)
* [S2-geometric-lib/Cpp](https://github.com/yjwong/s2-geometry-library)
* [pifs/code](https://github.com/philipl/pifs)
* [dale/C/Lisp](https://github.com/tomhrr/dale)
* [Build-your-own-lisp](https://github.com/orangeduck/BuildYourOwnLisp)
* [Computer-science-ranking](https://github.com/emeryberger/CSrankings)
* [Interviews](https://github.com/kdn251/interviews)
* [Coq-tactics](https://github.com/JasonGross/coq-tactics)
* [fiat/PLV](https://github.com/mit-plv/fiat)
* [StanfordPL](https://github.com/StanfordPL)
* [coding-interview-university](https://github.com/jwasham/coding-interview-university)
* [Low-Level-Programming-University](https://github.com/gurugio/lowlevelprogramming-university)
* [WindowsUIDevLabs](https://github.com/Microsoft/WindowsUIDevLabs)
* [FLRC/FP](https://github.com/IntelLabs/flrc)
* [AILab-NN-For-Beginner](https://github.com/AILabUSiena/NeuralNetworksForBeginners)
* [Learn-you-a-lambda/PLT](https://github.com/ninegua/lambda-viewer)
* [else-lambda-calculus/PLT](https://github.com/ucsd-progsys/elsa)
* [nbind-cpp-js](https://github.com/charto/nbind)
* [Jamesbound/PI-calculus/PLT](https://github.com/bordaigorl/jamesbound)
* [winetricks-CN](https://github.com/hillwoodroc/winetricks-zh)
* [What-I-Wish-I-Knew-When-Learning-Haskell](https://github.com/sdiehl/wiwinwlh)
* [Shadowbroker/Security](https://github.com/misterch0c/shadowbroker)
* [Neural-Complete](https://github.com/kootenpv/neural_complete)
* [totalscript/PLT](https://github.com/totalscript/totalscript)
* [kqr-gists](https://github.com/kqr/gists)
* [learnhaskell](https://github.com/bitemyapp/learnhaskell)
* [gopherchina-conference](https://github.com/gopherchina/conference)
* [jos](https://github.com/Clann24/jos)
* [awesome-windows](https://github.com/Awesome-Windows/Awesome)
* [awesome-uwp](https://github.com/tomzorz/awesome-uwp)
* [awesome-programmer](https://github.com/rekihattori/awesome-programmers)
* [cpp_exception_handling_abi](https://github.com/nicolasbrailo/cpp_exception_handling_abi)
* [CompCert/C/PLT](https://github.com/AbsInt/CompCert)
* [Notes-python](https://github.com/lijin-THU/notes-python)
* [tensor-ops/Haskell/ML](https://github.com/mstksg/tensor-ops)
* [json/Modern-Cpp](https://github.com/nlohmann/json)
* [Flex-bison-cpp-example](https://github.com/bingmann/flex-bison-cpp-example)
* [network-ts-impl/Cpp](https://github.com/chriskohlhoff/networking-ts-impl)
* [VisualCPU](https://github.com/IntelOrca/VisualCPU)
* [Executors/Cpp](https://github.com/chriskohlhoff/executors)
* [panicparse](https://github.com/maruel/panicparse)
* [cppast](https://github.com/foonathan/cppast)
* [Klee/LLVM/OS](https://github.com/klee/klee)
* [STP/PLV](https://github.com/stp/stp)
* [Annah/FP](https://github.com/Gabriel439/Haskell-Annah-Library)
* [API-Guideline/REST](https://github.com/Microsoft/api-guidelines)
* [lld/LLVM](https://github.com/llvm-mirror/lld)
* [DMOJ/OJ](https://github.com/DMOJ/judge)
* [Compatibility/Cpp](https://github.com/foonathan/compatibility)
* [lightsaber/Scheme](https://github.com/happlebao/lightsabers)
* [type checking by evaluation](https://github.com/AndrasKovacs/tcbe)
* [VK9/D3D/Vulkan/Graphics](https://github.com/disks86/VK9)
* [Continuable/Cpp](https://github.com/Naios/continuable)
* [Cppstddb](https://github.com/cruisercoder/cppstddb)
* [learning-cmake](https://github.com/Akagi201/learning-cmake)
* [Church/JS/Haskell/PLT](https://github.com/benji6/church)
* [Py-backwards](https://github.com/nvbn/py-backwards)
* [acl2/PLV](https://github.com/acl2/acl2)
* [Mathematical-Components](https://github.com/math-comp/math-comp)
* [Gitpitch/Markdown/Git](https://github.com/gitpitch/gitpitch)
* [argagg/Cpp](https://github.com/vietjtnguyen/argagg)
* [VC-LTL/Cpp/MSVCAPI](https://github.com/Chuyu-Team/VC-LTL)
* [NativeLib/Cpp/WindowsAPI](https://github.com/Chuyu-Team/NativeLib)
* [Dragon-Book-Answer](https://github.com/fool2fish/dragon-book-exercise-answers)
* [clang-user-manual-CN](https://github.com/oxnz/clang-user-manual)
* [x64asm](https://github.com/StanfordPL/x64asm)
* [changelog](https://github.com/mh-cbon/changelog)
* [ctai/Cpp/TMP](https://github.com/stryku/ctai)
* [db-readings/DB](https://github.com/rxin/db-readings)
* [pbrt-v3/Graphics](https://github.com/mmp/pbrt-v3)
* [LinearML/PLT](https://github.com/pikatchu/LinearML)
* [C++ Language Interface Foundation](https://github.com/google/clif)
* [Simple-OS-Book](https://github.com/chyyuu/simple_os_book)
* [Odin-Holmes-talks/Cpp](https://github.com/odinthenerd/talks)
* [TLisp](https://github.com/raviqqe/tisp)
* [计算机网络－自顶向下方法-Notes](https://github.com/moranzcw/Computer-Networking-A-Top-Down-Approach-NOTES)
* [HaskSymb](https://github.com/colah/HaskSymb)
* [Dafny/PLV](https://github.com/Microsoft/dafny)
* [Boogie/PLV](https://github.com/boogie-org/boogie)
* [xv6-Chinese/OS](https://github.com/ranxian/xv6-chinese)
* [Haacks/Security](https://github.com/Haacked/CodeHaacks)
* [qq-tg-irc](https://github.com/vjudge1/qq-tg-irc)
* [llvm-pass](https://github.com/foreverbell/llvm-pass)
* [schnorr/Dlang/Crypto](https://github.com/deadalnix/schnorr)
* [ig-visual-cpp-call-graph](https://github.com/goldsborough/ig)
* [Knowledge-Map](https://github.com/nikitavoloboev/knowledge-map)
* [JNI.hpp/Cpp](https://github.com/mapbox/jni.hpp)
* [XAML-standard](https://github.com/Microsoft/xaml-standard)
* [Modular-Windows.h/Cpp](https://github.com/Leandros/WindowsHModular)
* [Quchen's-Articles/Haskell](https://github.com/quchen/articles)
* [BeRoot/Security/Win](https://github.com/AlessandroZ/BeRoot)
* [RSAM/PLT](https://github.com/renll/RSAM)
* [awesome-compiler/Compiler](https://github.com/aalhour/awesome-compilers)
* [Write-a-C-Interpreter/Compiler](https://github.com/lotabout/write-a-C-interpreter)
* [dnsmasq-china-list](https://github.com/felixonmars/dnsmasq-china-list)
* [Dotty/Scala](https://github.com/lampepfl/dotty)
* [ghc-proposals/Haskell](https://github.com/ghc-proposals/ghc-proposals)
* [Kubernetes-handbook/Dis](https://github.com/rootsongjc/kubernetes-handbook)
* [searx/Security](https://github.com/asciimoo/searx)
* [SOC-Programs/Internship](https://github.com/tapasweni-pathak/SOC-Programs)
* [tbvaccine-pretty-traceback/Python](https://github.com/skorokithakis/tbvaccine/)
* [Rust-cookbook](https://github.com/brson/rust-cookbook)
* [Mostly-Adequate-Guide-to-FP/js](https://github.com/MostlyAdequate/mostly-adequate-guide)
* [Boostache-text-generator/Cpp](https://github.com/cierelabs/boostache)
* [ProofGeneral/Coq/Emacs](https://proofgeneral.github.io/)
* [awesome-Kotlin](https://github.com/KotlinBy/awesome-kotlin)
* [Ammonite/Scala](https://github.com/lihaoyi/Ammonite)
* [Boost.PolyCollection/Cpp](https://github.com/joaquintides/poly_collection)
* [Contiki/OS](https://github.com/contiki-os/contiki)
* [loadlibrary/Win/Linux](https://github.com/taviso/loadlibrary)
* [HelloGCC](https://github.com/hellogcc)
* [Wizard Zhang/Security](https://github.com/wizardforcel)
* [Learning-SICP](https://github.com/DeathKing/Learning-SICP)
* [Linux](https://github.com/torvalds/linux)
* [articles/PLT](https://github.com/Dobiasd/articles)
* [awesome-android-security](https://github.com/ashishb/android-security-awesome)
* [CTFS-write-up](https://github.com/ctfs)
* [Student-resources](https://github.com/ivmm/Student-resources)
* [EasyHook/Windows](https://github.com/EasyHook/EasyHook)
* [NSA-open-source](https://nationalsecurityagency.github.io/)
* [Competitive-Programming-Lib](https://github.com/AhmadElsagheer/Competitive-programming-library)
* [make-a-lisp](https://github.com/kanaka/mal)
* [science-based-games-list](https://github.com/stared/science-based-games-list)
* [Templight](https://github.com/mikael-s-persson/templight)
* [copy-elision-NRVO](https://stackoverflow.com/questions/12953127/what-are-copy-elision-and-return-value-optimization)
* [Iota-Jot-Zot](https://en.wikipedia.org/wiki/Iota_and_Jot)
* [Hard-coded-hardware-address-in-C/Cpp](https://kristerw.blogspot.com/2017/07/hard-coded-hardware-addresses-in-cc.html)
* [Thoughts-on-VC++-AST](https://blogs.msdn.microsoft.com/vcblog/2006/08/16/thoughts-on-the-visual-c-abstract-syntax-tree-ast/)
* [Rejuvenating the Microsoft C/C++ Compiler](https://blogs.msdn.microsoft.com/vcblog/2015/09/25/rejuvenating-the-microsoft-cc-compiler/)
* [static-print](https://github.com/saarraz/static-print)
* [chezscheme](https://github.com/cisco/ChezScheme)
* [minhook/win](https://github.com/TsudaKageyu/minhook)
* [API-Security-Checklist]((https://github.com/shieldfy/API-Security-Checklist)
* [List-of-games-with-source-on-Github](https://github.com/leereilly/games)
* [unconstexpr/Cpp](https://github.com/DaemonSnake/unconstexpr)
* [awesome-hack](https://github.com/Hack-with-Github/Awesome-Hacking/blob/master/README.md)
* [master-plan](https://github.com/rodrigosetti/master-plan)




## Guide/Tutorial
* [Apple Security Coding Guide](https://developer.apple.com/library/content/documentation/Security/Conceptual/SecureCodingGuide/Introduction.html#//apple_ref/doc/uid/TP40002477-SW1)
* [Category Theory for Programmer](https://bartoszmilewski.com/2014/10/28/category-theory-for-programmers-the-preface/)
* [CppCoreGuideline](http://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines)
* [Google Coding Style](https://google.github.io/styleguide/cppguide.html)
* [LLVM-Tutorial](http://llvm.org/docs/tutorial/)
* [Amit��s Game Programming Information](http://www-cs-students.stanford.edu/~amitp/gameprog.html)
* [LFS](http://www.linuxfromscratch.org/)
* [Wykobi-Computer-Geometry-Tutorial](http://wykobi.com/tutorial.html)
* [ANTLR-Mega-Tutorial](https://tomassetti.me/antlr-mega-tutorial/)
* [Undergraduate-Programming-Languages](http://www.eecs.ucf.edu/~leavens/teaching-prog-lang/Undergraduate.html)
* [Graduate-Programming-Languages](http://www.eecs.ucf.edu/~leavens/teaching-prog-lang/Graduate.html)
* [Soimort-wiki/PL](https://wiki.soimort.org/)
* [Algorithm-DS/python](http://interactivepython.org/runestone/static/pythonds/index.html)
* [Annotated-Computer-Vision-Bibliography/CV](http://www.visionbib.com/bibliography/contents.html)
* [Rust](https://doc.rust-lang.org/book/README.html)
* [Teach-yourself-cs](https://teachyourselfcs.com/)
* [OpenGL](http://ogldev.atspace.co.uk/)
* [BeautifulRacket](http://beautifulracket.com/)
* [Stanford-CS-Edu-Lib](http://cslibrary.stanford.edu/)
* [ScratchPixel/Graphics](http://www.scratchapixel.com/)
* [Animista/CSS](http://animista.net/)
* [Stanford-CS188/AI](http://ai.berkeley.edu/home.html)
* [Google-code-style-CN](http://zh-google-styleguide.readthedocs.io/en/latest/google-cpp-styleguide/)
* [US-Web-Design](https://standards.usa.gov/whats-new/releases/)
* [30-day-VR](https://risonsimon.com/days-in-vr/)
* [RFC-Chinese](http://man.chinaunix.net/develop/rfc/default.htm)
* [How-to-write-Common-Lisp](http://articulate-lisp.com/)
* [Graphics](https://www.zhihu.com/question/27544895/answer/99021929)
* [Interactive-code-challenge](https://github.com/donnemartin/interactive-coding-challenges)
* [Write-you-a-Haskell](http://dev.stephendiehl.com/fun/)
* [FP-Compiler-Optimization](https://zhuanlan.zhihu.com/p/19994962)
* [The-power-of-Prolog](https://www.metalevel.at/prolog)
* [Regex-Russ-Cox](https://swtch.com/~rsc/regexp/)
* [D-idioms](https://p0nce.github.io/d-idioms/)
* [D-Dlps](https://github.com/dlang/DIPs/tree/master/DIPs)
* [Incompatibilities Between ISO C99 and ISO C++98](http://david.tribble.com/text/cdiffs.htm) (See N4660 Appendix A)
* [Cpp-Project](https://www.zhihu.com/question/28341521)
* [Hacker-list/Security](https://zhuanlan.zhihu.com/p/26227423)
* [CppCodingStandard-CMU](https://users.ece.cmu.edu/~eno/coding/CppCodingStandard.html)
* [ES7-in-7-days](https://getgood.at/js/es7-in-7-days)
* [Learn-you-a-lambda](https://github.com/ninegua/lambda-viewer)
* [Python3-Module-of-the-Week](https://pymotw.com/3/)
* [Python3-Module-of-the-Week-CN](http://www.pandacademy.com/pymotw-3-%E4%BB%8B%E7%BB%8D/)
* [The-Mechanization-of-Standard-ML](https://github.com/SMLFamily/The-Mechanization-of-Standard-ML)
* [WHAT-I-WISH-I-KNEW-WHEN-LEARNING-HASKELL](http://dev.stephendiehl.com/hask/)
* [500-Data-structures-and-algorithms-interview-questions-and-their-solutions](https://techiedelight.quora.com/500-Data-structures-and-algorithms-interview-questions-and-their-solutions)
* [this-week-in-rust](https://www.reddit.com/domain/this-week-in-rust.org/)
* [shadertoy](https://www.shadertoy.com/)
* [CERT-Coding-Standard](https://www.securecoding.cert.org/confluence/display/cplusplus/1+Front+Matter)
* [Try-Git](https://try.github.io/levels/1/challenges/1)
* [APFS/OS](https://blog.cugu.eu/post/apfs/)
* [Advance-project/C](http://stackoverflow.com/questions/4583746/what-open-source-c-projects-are-worth-studying-for-learning-good-design)
* [CppSamples](http://www.cppsamples.com/)
* [Cppr-libs](http://en.cppreference.com/w/cpp/links/libs)
* [HS-GotW/Cpp](https://herbsutter.com/gotw/)
* [Haskell-Report-98](https://www.haskell.org/onlinereport/)
* [Haskell-Report-10](https://www.haskell.org/onlinereport/haskell2010/)
* [Haskell-src](http://hackage.haskell.org/package/base-4.9.1.0/docs/src/)
* [pbrt-v3](https://github.com/mmp/pbrt-v3)
* [Calling-Convention-MSVC](https://msdn.microsoft.com/en-us/library/9b372w95(v=vs.140).aspx)
* [Haskell-Idioms](https://wiki.haskell.org/Category:Idioms)
* [C++-Super-FAQ](https://isocpp.org/wiki/faq)
* [Codewars-Haskell](https://zhuanlan.zhihu.com/p/20528665)
* [24-Days-of-GHC-Extension](https://ocharles.org.uk/blog/pages/2014-12-01-24-days-of-ghc-extensions.html)
* [.Net-Coding-Guideline](https://github.com/dotnet/corefx/tree/master/Documentation/coding-guidelines)
* [Cpp-Document-Stackoverflow](http://stackoverflow.com/documentation/c%2b%2b)
* [手把手教你构建 C 语言编译器](http://lotabout.me/2015/write-a-C-interpreter-0/)
* [How-to-learn-Haskell](https://github.com/bitemyapp/learnhaskell/blob/master/guide-zh_CN.md)
* [Categories from scratch](http://science.raphael.poss.name/categories-from-scratch.html)
* [AI-playbook](http://aiplaybook.a16z.com/)
* [SOC-Programs/Internship](https://github.com/tapasweni-pathak/SOC-Programs)
* [ELF-Hello-World](http://www.cirosantilli.com/elf-hello-world/)
* [Learn-X-in-Y-minutes](https://learnxinyminutes.com/)
* [Python-tutorials](https://bento.io/topic/python/tutorials)
* [Writing-a-Lisp-Haskell](http://reinvanderwoerd.nl/index.html)
* [LearnOpenGL](https://learnopengl.com/)
* [scratchpixel](http://www.scratchapixel.com/)
* [LearnOpenGLp-CN](http://bullteacher.com/category/zh_learnopengl_com)
* [MurrayC-compiler-experiments](https://github.com/murraycu/murrayc-compiler-experiments)
* [Cpp17](https://github.com/cpprefjp/site/wiki/cpp17)
* [ftmalloc](https://github.com/sudokuhk/ftmalloc)
* [windows-driver-doc](https://github.com/MicrosoftDocs/windows-driver-docs)
* [Human-Interface-Guidelines](https://developer.apple.com/design/)
* [Write-a-Linux-Cpp-Debugger](https://blog.tartanllama.xyz/c++/2017/03/21/writing-a-linux-debugger-setup/)
* [深入浅出-Java-Concurrency](http://www.blogjava.net/xylz/archive/2010/07/08/325587.html)
* [LinuxCommand](http://linuxcommand.org/)
* [Let's-code-a-TCP/IP-stack](http://www.saminiir.com/lets-code-tcp-ip-stack-1-ethernet-arp/)
* [Ethereum from scratch](https://ocalog.com/post/10/)
* [Regular-expression.info](http://www.regular-expressions.info/)
* [Security-Tools](https://zhuanlan.zhihu.com/p/28048495)
* [Writing-a-GCC-backend](https://kristerw.blogspot.se/2017/08/writing-gcc-backend_4.html)
* [Write-a-CPU-in-VHDL](http://labs.domipheus.com/blog/designing-a-cpu-in-vhdl-part-1-rationale-tools-method/)
* [Beautiful-concurrency/Haskell](https://www.schoolofhaskell.com/school/advanced-haskell/beautiful-concurrency)
* [render-papers/Graphics](https://zhuanlan.zhihu.com/p/28407938)
* [Request-for-RFC-explanation](https://request-for-explanation.github.io/podcast/)
* [Build-a-Simple-Database](https://cstack.github.io/db_tutorial/)


## Intellectual Breath
* [Openquestions](http://www.openquestions.com/oq-main.htm)
* [Number-Theory-Web](http://www.numbertheory.org/)
* [Interactive-Linear-Algebra](http://immersivemath.com/ila/index.html)
* [Companion-to-Lang-Algebra](https://math.berkeley.edu/~gbergman/.C.to.L/)

## Jokes/DDD/misc
* [Git-commit-message](https://chris.beams.io/posts/git-commit/)
* [Hack-escape-VM](http://hn.premii.com/#/article/13898968)
* [BSD-Family-tree](https://github.com/freebsd/freebsd/blob/master/share/misc/bsd-family-tree)
* [IOCCC](http://www.ioccc.org/years.html)
* [C++-FQA](http://yosefk.com/c++fqa/)
* [Typical-code-comment](https://www.reddit.com/r/ProgrammerHumor/comments/60adxr/typical_code_comments/)
* [Consolia-comic](https://consolia-comic.com/)
* [xkcd](https://xkcd.com)
* [Explain-xkcd](http://www.explainxkcd.com/wiki/index.php/Main_Page)
* [turnoff.us](http://turnoff.us/geek)
* [Emojipedia](https://emojipedia.org/)

## MOOC/Class
* [MIT-OCW](https://ocw.mit.edu/courses/electrical-engineering-and-computer-science/)
* [UCB](http://webcast.berkeley.edu/series.html#c,d,Computer_Science)
* [�ε�Haskell](http://www.iqiyi.com/u/1355304922)
* [CIS194-Intro-Haskell](http://www.seas.upenn.edu/~cis194/fall16/index.html)
* [UCB-MOOC-Archive](https://archive.is/D1Ail)
* [Advanced-compilers](http://matt.might.net/teaching/advanced-compilers/2013-fall/)
* [CSAPP-LAB](http://csapp.cs.cmu.edu/3e/labs.html)
* [ParsingBeyondCFG](https://user.phil.hhu.de/~kallmeyer/ParsingBeyondCFG/)
* [Compilers-PLT](http://web.cs.wpi.edu/~kal/courses/cs4533/)
* [BCPierce/PLT](http://www.cis.upenn.edu/~bcpierce/)
* [FrankPfenning/PLT](https://www.cs.cmu.edu/~fp/courses.html)
* [Parallel and Sequential Data Structures and Algorithms](http://www.cs.cmu.edu/~15210/index.html)
* [Typed-tagless-final](http://okmij.org/ftp/tagless-final/course/#lecture)
* [Oregon Programming Languages Summer School](https://www.cs.uoregon.edu/research/summerschool/summer15/curriculum.html)
* [CS228-probabilistic graphical models](https://ermongroup.github.io/cs228-notes/)
* [15883-Computational-Models-of-Neural-System](http://www.cs.cmu.edu/afs/cs/academic/class/15883-f15/)
* [Linux Assembly HOWTO](http://tldp.org/HOWTO/Assembly-HOWTO/)
* [CSCI5828-Foundations-of-Software-Engineering](https://www.cs.colorado.edu/~kena/classes/5828/f14/lectures/)
* [Robert-Harper](https://scs.hosted.panopto.com/Panopto/Pages/Sessions/List.aspx?#folderID=%2207756bb0-b872-4a4a-95b1-b77ad206dab3%22)
* [Data Structures and Functional Programming](http://www.cs.cornell.edu/courses/cs3110/2017sp/lecture_notes.php)
* [Computer System](http://www.cs.cornell.edu/courses/cs3410/2017sp/)
* [TeachYourselfLogic](http://www.logicmatters.net/tyl/)
* [Category-Theory](https://www.youtube.com/user/TheCatsters#p/u/68/xqLgGB7Hv7g)
* [Theory of Language Translation](http://www.cs.umd.edu/~mvz/cmsc430-s07/)
* [COS-326-Functional-Programming](http://www.cs.princeton.edu/courses/archive/fall16/cos326/)
* [CMU-15-317-Constructive Logic](http://symbolaris.com/course/constlog15-schedule.html)
* [CMU-15-816-Linear Logic](https://www.cs.cmu.edu/~fp/courses/15816-s12/)
* [MIT-18.783-Elliptic Curves](https://math.mit.edu/classes/18.783/2015/lectures.html)
* [Foundations-of-Software/PLT](https://fos2016.github.io/staff.html)
* [Practical-Deep-Learning](http://course.fast.ai/)
* [MIT-6.035-Compiler](http://6.035.scripts.mit.edu/sp16/schedule.html)
* [Reasoning about Action and High-Level Programs](http://www.cse.yorku.ca/~lesperan/Roma09PhDcourse/)
* [CSE-231-LLVM](https://cseweb.ucsd.edu/classes/fa15/cse231-a/part1.html)


## Papers
* [JMLR](http://jmlr.org/proceedings/)
* [ACM-Sigplan](http://www.sigplan.org/)
* [The-morning-paper](https://blog.acolyer.org/)
* [CMU-repo](http://repository.cmu.edu/compsci/)
* [ICFP](https://github.com/gasche)
* [render-time-rendering/Graphics](http://kesen.realtimerendering.com/)

## Quiz
* [Regex Golf](https://alf.nu/RegexGolf)
* [Cpp Quiz](http://cppquiz.org/)
* [Project-Euler](https://projecteuler.net/)
* [Project-Euler-CN](http://pe-cn.github.io/)
* [Deadlock-Empire](https://deadlockempire.github.io/)

### Security
* [pwnable.tw](https://pwnable.tw/)
* [exploit-exercises](https://exploit-exercises.com/)
* [liveoverflow](http://liveoverflow.com/)
* 


## Serenpity
### 2017-3-13
* [正则表达式如何匹配 3 的倍数/DFA](https://www.zhihu.com/question/24824487)
* [状态机](https://www.zhihu.com/question/21090429)
* [TD-List-of-All](http://www.techiedelight.com/list-of-problems/)
* [Hashing=in=DS](http://www.techiedelight.com/hashing-in-data-structure/)
* [Recursion-quiz](http://www.techiedelight.com/recursion-practice-problems-with-solutions/)
* [STL-question](http://www.techiedelight.com/data-structures-and-algorithms-interview-questions-stl/)
* [unique_ptr-with-incomplete](http://stackoverflow.com/questions/9954518/stdunique-ptr-with-an-incomplete-type-wont-compile)
* [Top-10-Cpp-Bugs](https://www.viva64.com/en/b/0483/)
* [Whats-new-in-Cpp17](https://jfbastien.github.io/what-is-cpp17/)
* [gcc-builtin-function](http://stackoverflow.com/questions/23930588/how-gcc-handles-built-in-function)
* [���������鵥](https://zhuanlan.zhihu.com/p/20130808)
* [PLT�鵥](https://zhuanlan.zhihu.com/p/19917853?columnSlug=forallplt)
* [Type](https://www.zhihu.com/question/19918532)
* [Coroutine](http://www.cnblogs.com/xybaby/p/6406191.html)
* [Сparser](https://zhuanlan.zhihu.com/p/20178871?columnSlug=prattle)
* [not-inheritance-from-std::string](http://stackoverflow.com/questions/6006860/why-should-one-not-derive-from-c-std-string-class)

### 2017-3-14
* [universal-reference](https://isocpp.org/blog/2012/11/universal-references-in-c11-scott-meyers)
* [2016-most-popular-js](https://risingstars2016.js.org/zh/)
* [lvalue-rvalue-move-forward](http://blog.csdn.net/unituniverse2/article/details/6580733)
* [esp-ebp](http://blog.csdn.net/yang_yulei/article/details/45795591)

### 2017-3-15
* [BCNF/3NF/DB](http://www.cnblogs.com/ybwang/archive/2010/06/04/1751279.html)

### 2017-3-16
* [RCL-ROL/Assembly](http://www.myexception.cn/assembly-language/802293.html)
* [FSG-shell](http://www.2cto.com/os/201507/416726.html)
* [Python-topic-mining](http://ahmedbesbes.com/how-to-mine-newsfeed-data-and-extract-interactive-insights-in-python.html)
* [Python-change-opcode](https://zhuanlan.zhihu.com/p/25850970)
* [simple-fork/Linux](http://blog.csdn.net/jason314/article/details/5640969)

### 2017-3-19
* [Magic-get/Cpp](http://purecpp.org/?p=1074)
* [200M-LFS](https://l-lfsp200.rhcloud.com/)
* [Quake-square-root](https://www.zhihu.com/question/26287650/answer/32552231)
* [Python-code-confusing](https://www.v2ex.com/t/348602#reply21)
* [Good-vimrc](https://dougblack.io/words/a-good-vimrc.html)

### 2017-3-20
* [descent-parser](http://www.craftinginterpreters.com/parsing-expressions.html)
* [self-hosting-c-compiler-40-days](http://www.sigbus.info/how-i-wrote-a-self-hosting-c-compiler-in-40-days.html)
* [Cpp17-new-property-2](https://zhuanlan.zhihu.com/p/25855097)

### 2017-3-22
* [paxos-in-25-lines](http://nil.csail.mit.edu/6.824/2015/notes/paxos-code.html)

### 2017-3-23
* [curry-vs-partial](https://www.zhihu.com/question/20459948)
* [Modern-cpp-vs-lisp](https://chriskohlhepp.wordpress.com/advanced-c-lisp/convergence-of-modern-cplusplus-and-lisp/)
* [SAM-complexity](https://zhuanlan.zhihu.com/p/25948077)
* [SAM-general-intro](https://huntzhan.org/suffix-automaton-tutorial/)
* [SAM-general-intro-2](http://blog.csdn.net/wmdcstdio/article/details/44780707)
* [n4661](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2017/n4661.html)

### 2017-3-24
* [Cpp-Now-17](http://purecpp.org/?p=1228)
* [Copy-memory-quickly](http://nadeausoftware.com/articles/2012/05/c_c_tip_how_copy_memory_quickly)

### 2017-3-25
* [Cpp-status](https://isocpp.org/std/status)
* [python-annotation-hack](https://www.v2ex.com/t/350274#;)

### 2017-3-26
* [iOS10-security-guide](https://www.apple.com/business/docs/iOS_Security_Guide.pdf)
* [programmer-competency-matrix](http://sijinjoseph.com/programmer-competency-matrix/)
* [Cpp-check-constexpr-variable](https://www.zhihu.com/question/57644416)

### 2017-3-27
* [17-Gauss](https://www.zhihu.com/question/26096850/answer/153666091)

### 2017-3-28
* [linux-aio](http://www.wzxue.com/linux-kernel-aio%E8%BF%99%E4%B8%AA%E5%A5%87%E8%91%A9/)
* [deep-dive-into-APL](http://hn.premii.com/#/article/13973812)
* [circle-to-julia](http://hn.premii.com/#/article/13976354)
* [PyFunctionObject](http://www.jianshu.com/p/d00108741a18)
* [template-keywords/cpp](http://www.aerialmantis.co.uk/blog/2017/03/17/template-keywords/)
* [python-metaclass](http://blog.jobbole.com/21351/)
* [python-__new__](http://www.cnblogs.com/dotxxx/p/4191620.html)

### 2017-3-29
* [traversing-tree-tail-recursively](http://lambda-startup.com/traversing-trees-tail-recursively/)
* [FFT](http://negiizhao.blog.uoj.ac/blog/2423)
* [Learn-redis-the-hard-way](http://tech.trivago.com/2017/01/25/learn-redis-the-hard-way-in-production/?)

### 2017-3-30
* [iostream-WTF](http://stackoverflow.com/questions/2753060/who-architected-designed-cs-iostreams-and-wouldit-still-be-considered-well)

### 2017-4-3
* [Parallel-vs-Sequential](http://s1l3n0.blogspot.jp/2013/04/serial-vs-parallel-sequential-vs.html)
* [Algorithm-W](https://zhuanlan.zhihu.com/p/26076902)
* [Schemeless-RPC](https://zhuanlan.zhihu.com/p/26140674)

### 2017-4-4
* [One-hole-Contexts](http://zhihu.com/question/49249958/answer/116474414)
* [Polymorphism_cast](http://tieba.baidu.com/p/962647505)
* [Godel's-Incomplete-Theorem](https://plato.stanford.edu/entries/goedel-incompleteness/)
* [Python-project-file](https://www.v2ex.com/t/352474)
* [GBA-by-example](http://kylehalladay.com/blog/tutorial/2017/04/04/GBA-By-Example-2.html)

### 2017-4-5
* [GADT](https://en.wikibooks.org/wiki/Haskell/GADT)
* [ADT](https://codewords.recurse.com/issues/three/algebra-and-calculus-of-algebraic-data-types)
* [Rust-optimization](http://robert.ocallahan.org/2017/04/rust-optimizations-that-c-cant-do.html?m=1)
* [Return-type-deduction](http://gulu-dev.com/post/2014-08-04-type-deduction)
* [First-website](http://info.cern.ch/)

### 2017-4-6
* [Devirtualization/gcc](https://zhuanlan.zhihu.com/p/23233548)
* [Devirtualization/c](http://hubicka.blogspot.jp/2014/01/devirtualization-in-c-part-1.html)
* [Fast-a+b](http://uoj.ac/submission/15232)
* [gcc-hash-sign](http://stackoverflow.com/questions/5370539/what-is-the-meaning-of-lines-starting-with-a-hash-sign-and-number-like-1-a-c)
* [Preprocessor-output](https://gcc.gnu.org/onlinedocs/cpp/Preprocessor-Output.html)
* [Inside-memory-management](https://www.ibm.com/developerworks/linux/library/l-memory/)
* [Python-decorator-closure](https://www.quora.com/What-is-the-difference-between-closures-and-decorators-in-Python)
* [HIDWORD](http://bbs.csdn.net/topics/380035824)
* [WebGL-water](http://madebyevan.com/webgl-water/)
* [Fun-with-Linux-terminal](http://blog.regehr.org/archives/1483)

### 2017-4-8
* [Reinvent-YCombinator](http://picasso250.github.io/2015/03/31/reinvent-y.html)
* [Ycombinator-origin](https://www.zhihu.com/question/21099081)
* [Dmd-boost-license](http://hn.premii.com/#/article/14060846)
* [enable_shared_from_this](http://www.tuicool.com/articles/NJVjIv)
* [Brzozowski-derivative](https://en.wikipedia.org/wiki/Brzozowski_derivative)
* [Brzozowski-derivative-general](http://cstheory.stackexchange.com/questions/3280/generalizations-of-brzozowskis-method-of-derivatives-of-regular-expressions-to)
* [Dependent-types-in-half-of-D](http://www.infognition.com/blog/2015/dependent_types_in_d.html)
* [OOP-Alan-Kay](http://lists.squeakfoundation.org/pipermail/squeak-dev/1998-October/017019.html)
* [Alan-Kay-Definition-of-OOP](http://wiki.c2.com/?AlanKaysDefinitionOfObjectOriented)

### 2017-4-9
* [Call/cc-discussion](https://www.zhihu.com/question/21954238)
* [Coroutine-call-cc](http://www.tuicool.com/articles/BjyYrqI)
* [NFA-DFA-FA](http://www.cnblogs.com/Ninputer/archive/2011/06/12/2078671.html)
* [Alg-cheatsheet](http://snailya.org/posts/02-algorithm-cheatsheet.html)
* [pxls.space](http://pxls.space/)
* [The-New-C](http://www.drdobbs.com/the-new-c-integers-in-c99-part-1/184401323)
* [Understand-dynamic-loading/Cpp](http://edoren.me/blog/dynamic_library_loading_cpp/)
* [Two-phase-lookup-and-MSVC/Cpp](http://stackoverflow.com/questions/6273176/what-exactly-is-broken-with-microsoft-visual-cs-two-phase-template-instanti)
* [k-CFA/PLT](http://matt.might.net/articles/implementation-of-kcfa-and-0cfa/)
* [Max-product-in-N](http://www.techiedelight.com/maximum-product-rod-cutting/)
* [Torch/LuaJIT](http://torch.ch/)

### 2017-4-10
* [De-Brujin](http://blog.163.com/qiukl1987@126/blog/static/9809584920121125101249199/)
* [Any-no-move-only](https://www.reddit.com/r/cpp/comments/4fyt3v/why_doesnt_stdany_support_move_only_types/)
* [Nonstandard-Behavior](https://msdn.microsoft.com/en-us/library/x84h5b78.aspx)
* [CPS-Coroutine](https://zhuanlan.zhihu.com/p/25964339)
* [CPS](https://zhuanlan.zhihu.com/p/22721931)
* [Call/cc-fork/C](http://mainisusuallyafunction.blogspot.jp/2012/02/continuations-in-c-with-fork.html)
* [call/cc-proposal/Cpp](http://open-std.org/JTC1/SC22/WG21/docs/papers/2017/p0534r0.pdf)
* [Yinyang-puzzle](https://www.zhihu.com/question/27683900)
* [Yinyang-puzzle-clearer](http://www.jianshu.com/p/b5d0c72ab1cc)

### 2017-4-11
* [Output-without-stdio](http://zuoxinyu.xyz/C-C/Output-whithout-stdio/)
* [boxing-unboxing-java](http://www.cnblogs.com/danne823/archive/2011/04/22/2025332.html)
* [Dotty/scala](http://dotty.epfl.ch/)
* [list-of-languages-compile-to-JS](https://github.com/jashkenas/coffeescript/wiki/List-of-languages-that-compile-to-JS)
* [O(1)-stack=min](http://blog.csdn.net/x_y_r129/article/details/50854931)

### 2017-4-12
* [pi-calculus](https://golem.ph.utexas.edu/category/2009/08/the_pi_calculus.html)
* [pi-calculus-ii](https://golem.ph.utexas.edu/category/2009/09/the_pi_calculus_ii.html)
* [pi-diagram](http://bhuztez.github.io/pi-diagram/)
* [Haskell-lifting](http://stackoverflow.com/questions/2395697/haskell-what-is-lifting)

### 2017-4-13
* [point-free](https://eiriktsarpalis.wordpress.com/2017/04/02/programming-in-the-point-free-style/)
* [Four-color-alg](http://www.cnblogs.com/moondark/p/3594188.html)

### 2017-4-14
* [How-we-build-r/place](https://redditblog.com/2017/04/13/how-we-built-rplace/)
* [curry-vs-partial](https://gist.github.com/ukari/6b8997d5a5dba4df9358cfb09496d5c5)
* [binary-gcd](http://chaishushan.blog.163.com/blog/static/13019289720091154384779/)

### 2017-4-15
* [What pure functional programming is all about: Part 1](https://www.fpcomplete.com/blog/2017/04/pure-functional-programming)

### 2017-4-16
* [eq-eqv-equal](http://stackoverflow.com/questions/16299246/what-is-the-difference-between-eq-eqv-equal-and-in-scheme)
* [Minimal-CRT](https://msdn.microsoft.com/en-us/library/bb985746.aspx)
* [Makefile-hacks](https://blog.melski.net/2010/11/30/makefile-hacks-print-the-value-of-any-variable/)
* [UB-and-optimization](https://www.slideshare.net/linaroorg/bkk16503-undefined-behavior-and-compiler-optimizations-why-your-program-stopped-working-with-a-newer-compiler)
* [ÿ��C����ԱӦ��֪����δ������Ϊ](http://blog.csdn.net/monkey07118124/article/details/50588336)
* [Chrome-firefox-unicode-phishing](https://www.wordfence.com/blog/2017/04/chrome-firefox-unicode-phishing/)

### 2017-4-18
* [C++ exception handling internals](https://monoinfinito.wordpress.com/series/exception-handling-in-c/)
* [working va_arg implementation](https://forum.dlang.org/post/c72nnp$vr6$1@digitaldaemon.com)
* [std::move with std::shared_ptr in lambda](http://stackoverflow.com/questions/43319352/stdmove-with-stdshared-ptr-in-lambda)
* [Modify-Python-in-7mins](https://hackernoon.com/modifying-the-python-language-in-7-minutes-b94b0a99ce14)

### 2017-4-19
* [C#-DSL](https://msdn.microsoft.com/en-us/library/ee943825.aspx)
* [tail-call](https://en.wikipedia.org/wiki/Tail_call)
* [MMA-pattern-match](http://www.guokr.com/post/579176/)
* [Book-list](https://zhuanlan.zhihu.com/p/24752590)
* [what-programming-language-used-late-night](https://stackoverflow.blog/2017/04/19/programming-languages-used-late-night/)
* [restore-glibc](https://zhuanlan.zhihu.com/p/20062978)

### 2017-4-22
* [Fold-Church-Encoding-CPS](http://stackoverflow.com/questions/13575894/why-do-we-use-folds-to-encode-datatypes-as-functions)
* [Church-encoded datatypes in Haskell](http://www.cbdumas.com/posts/church_encoding.html)
* [Church-encoded datatypes in Haskell, part 2](http://www.cbdumas.com/posts/church_encoding2.html)
* [fold-function](https://en.wikipedia.org/wiki/Fold_(higher-order_function))
* [Metaprogramming-less-fun-D](https://epi.github.io/2017/03/18/less_fun.html)
* [Why-MIT-Scheme-To-Python](https://www.wisdomandwonder.com/link/2110/why-mit-switched-from-scheme-to-python)
* [Lambda Calculus Live Tutorial with Klipse: Boolean Algebra](http://blog.klipse.tech/lambda/2016/07/24/lambda-calculus-2.html)
* [Replacing Disqus with GitHub Comments](http://donw.io/post/github-comments/)
* [Haskell-forall](http://stackoverflow.com/questions/3071136/what-does-the-forall-keyword-in-haskell-ghc-do)
* [Haskell-newtype](http://www.jianshu.com/p/bf6c9dbe7346)
* [Neural Networks, Types, and Functional Programming](http://colah.github.io/posts/2015-09-NN-Types-FP/)


### 2017-4-23
* [The oldest temporary hack in the Linux kernel](http://kazet.co/2016/04/29/temporary-hacks.html)

### 2017-4-24
* [Evolution-of-a-Haskell-Programmer](http://www.willamette.edu/~fruehr/haskell/evolution.html)

### 2017-4-25
* [EDSL](https://wiki.haskell.org/Embedded_domain_specific_language)
* [overcommit-OOM](http://www.win.tue.nl/~aeb/linux/lk/lk-9.html#ss9.6)
* [Coroutines and Reference Parameters](https://toby-allsopp.github.io/2017/04/22/coroutines-reference-params.html)
* [free-monads-in-cpp](https://toby-allsopp.github.io/2016/10/12/free-monads-in-cpp.html)

### 2017-4-26
* [VSC-2017-4](https://blogs.msdn.microsoft.com/vcblog/2017/04/25/visual-studio-code-cc-extension-april-2017-update/)

### 2017-4-27
* [Animated-Bezier](https://www.jasondavies.com/animated-bezier/)
* [Category-Theory-Syntactically](http://www.hedonisticlearning.com/posts/category-theory-syntactically.html)
* [Visual-lexicon-LINQ](https://www.simple-talk.com/dotnet/net-development/visual-lexicon-linq/)
* [linux-programming-signals-the-easy-way](https://www.stev.org/post/linuxprogrammingsignalstheeasyway)

### 2017-4-28
* [pygit](http://benhoyt.com/writings/pygit/)
* [adventures-in-parsec](http://panicsonic.blogspot.jp/2009/12/adventures-in-parsec.html)
* [foldl->foldr](https://zhuanlan.zhihu.com/p/26573107)
* [A-serious-bug-in-GCC](https://akrzemi1.wordpress.com/2017/04/27/a-serious-bug-in-gcc/)
* [Church-Encoding-lists](http://benji6.github.io/church/docs/lists.html)
* [2017-PyData](https://medium.com/@srdjan.santic/interesting-talks-from-pydata-amsterdam-2017-db009ca7c832)
* [Catalan-number](http://blog.csdn.net/u010582082/article/details/69569237)
* [UTF-9](https://github.com/enricobacis/utf9)
* [Monads-in-Cpp](https://bartoszmilewski.com/2011/07/11/monads-in-c/)
* [Free-monads-in-cpp](https://toby-allsopp.github.io/2016/10/12/free-monads-in-cpp.html)
* [If Linux kernel were exposed as COM interfaces Raw](https://gist.github.com/chenshuo/867174)
* [aliasing-constructor-shared-ptr](http://codesynthesis.com/~boris/blog/2012/04/25/shared-ptr-aliasing-constructor/)
* [state-machine-impl](http://wisol.ch/w/articles/2015-03-27-state-machine-impl/)

### 2017-4-29
* [some stupid security](https://www.troyhunt.com/reckon-youve-seen-some-stupid-security-things-here-hold-my-beer/)
* [Haskell-Num-Type-Convert](http://www.jianshu.com/p/1c326391f077)

### 2017-4-30
* [GCC fails to optimize aligned std::array like C array](http://stackoverflow.com/questions/43651923/gcc-fails-to-optimize-aligned-stdarray-like-c-array#comment74352188_43651923)
* [Z80-godbolt](http://8bitworkshop.com/viz.html?redir=1&platform=base_z80&file=prng.c)
* [STL-for_each-return-function](http://stackoverflow.com/questions/2048967/why-does-stdfor-eachfrom-to-function-return-function)

### 2017-5-1
* [C++-Template-Haskell=TypeClass](http://stackoverflow.com/questions/4411279/haskell-typeclasses-and-c-template-classes)
* [OOP-vs-Typeclass](https://wiki.haskell.org/OOP_vs_type_classes)
* [How Many x86-64 Instructions Are There Anyway](https://stefanheule.com/blog/how-many-x86-64-instructions-are-there-anyway/)
* [VHDL-or-Verilog](http://fpgasite.blogspot.jp/2017/04/vhdl-or-verilog.html)
* [The Mother of all Monads](http://blog.sigfpe.com/2008/12/mother-of-all-monads.html)
* [no-returning-rvalue-reference](http://stackoverflow.com/questions/4986673/c11-rvalues-and-move-semantics-confusion-return-statement)
* [move-proposal](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2002/n1377.htm)
* [Optimize-Option](https://gcc.gnu.org/onlinedocs/gcc/Optimize-Options.html)
* [Mirrored-Lenses/Haskell](http://comonad.com/reader/2012/mirrored-lenses/)

### 2017-5-2
* [Intel-AMT-remote-vulnerability](https://mjg59.dreamwidth.org/48429.html)
* [How-to-create-AWS-python-lambda-function](https://www.fullstackpython.com/blog/aws-lambda-python-3-6.html)
* [Cpp-Integral-Conversion](https://zhuanlan.zhihu.com/p/26675068)
* [PWN2OWN-2017-Linux](https://zhuanlan.zhihu.com/p/26674557)
* [ctai-compile-time-x86](http://stryku.pl/poetry/ctai.php)
* [Applicative-other-than-monad-ziplist](http://stackoverflow.com/questions/2120509/applicative-functors-other-than-monads-and-ziplist)

### 2017-5-3
* [Not-lisp-again](https://funcall.blogspot.jp/2009/03/not-lisp-again.html)
* [GUI-Architecture](https://martinfowler.com/eaaDev/uiArchs.html)
* [SQL-43-Yrs](http://blog.sqlizer.io/posts/sql-43/)
* [I tried Haskell for 5 years and here’s how it was](https://metarabbit.wordpress.com/2017/05/02/i-tried-haskell-for-5-years-and-heres-how-it-was/)
* [passing-parameter-assembly](https://www.cs.uaf.edu/2010/fall/cs301/lecture/09_20_functions_parameters.html)
* [How to write x64 assembly functions in Visual C++](http://www.sciencezero.org/index.php?title=How_to_write_x64_assembly_functions_in_Visual_C%2B%2B)
* [X86-calling-conventions](https://en.wikipedia.org/wiki/X86_calling_conventions#x86-64_calling_conventions)
* [Function-parameter-eval-order-C/Cpp](http://stackoverflow.com/questions/9566187/function-parameter-evaluation-order)
* [Beginner-guide-python-nn-sklearn](https://www.springboard.com/blog/beginners-guide-neural-network-in-python-scikit-learn-0-18/)
* [SBrain-extended-brainfuck](https://silverwingedseraph.net/programming/2017/04/16/sbrain-an-extension-of-brainfzck.html)

### 2017-5-4
* [FP-Concurrency](https://softwareengineering.stackexchange.com/questions/195718/functional-programming-right-ideas-about-concurrency-and-state)
* [BS-Expectation-Cpp17](https://www.reddit.com/r/cpp/comments/49dgdb/why_i_am_not_happy_with_c17_c_17_outlook_march/)
* [Alternative-MonadPlus](https://en.wikibooks.org/wiki/Haskell/Alternative_and_MonadPlus)
* [Alternative-MonadPlus-Monoid](http://stackoverflow.com/questions/13080606/confused-by-the-meaning-of-the-alternative-type-class-and-its-relationship-to?noredirect=1&lq=1)
* [xanthe/Dlang](https://gitlab.com/sarneaud/xanthe)

### 2017-5-5
* [C#-GC](https://www.reddit.com/r/csharp/comments/69aime/what_are_good_resources_on_garbage_collection_in_c/)
* [Linus-node**](http://coolshell.cn/articles/8990.html)
* [No-Show-instance-function](https://wiki.haskell.org/Show_instance_for_functions)

### 2017-5-6
* [ST-vs-State](http://haskell.1045720.n5.nabble.com/ST-vs-State-td3192383.html)
* [()-in-Haskell](http://stackoverflow.com/questions/16892570/what-is-in-haskell-exactly)
* [Horror-in-libstdc++](https://www.zerotier.com/blog/2017-05-05-theleak.shtml)
* [Generating all permutations, combinations, and power set of a string (or set of numbers)](http://exceptional-code.blogspot.com/2012/09/generating-all-permutations.html)
* [Cpp-Modules-in-VS](https://blogs.msdn.microsoft.com/vcblog/2017/05/05/cpp-modules-in-visual-studio-2017/)
* [No-overlaping-circles](https://www.zhihu.com/question/53012468)

### 2017-5-7
* [When my base class’s constructor calls a virtual function on its this object, why doesn’t my derived class’s override of that virtual function get invoked?](https://isocpp.org/wiki/faq/strange-inheritance#calling-virtuals-from-ctors)
* [JSON-hijack](http://haacked.com/archive/2009/06/25/json-hijacking.aspx/)
* [JSON-while(1)](http://stackoverflow.com/questions/2669690/why-does-google-prepend-while1-to-their-json-responses)
* [Cpp-reflection-std::meta-reflexpr](http://matus-chochlik.github.io/mirror/doc/html/index.html)
* [Fun-with-Reflection-in-Cpp](http://jackieokay.com/2017/05/06/reflection2.html)
* [Cppx-meta](https://godbolt.org/g/Gcmdel)
* [Is It Time To Get Rid Of The Linux OS Model In The Cloud](http://highscalability.com/blog/2012/1/19/is-it-time-to-get-rid-of-the-linux-os-model-in-the-cloud.html)
* [shared_ptr==nullptr](https://segmentfault.com/q/1010000004078858)
* [this==nullptr](https://www.reddit.com/r/cpp_questions/comments/3roy3e/this_nullptr_can_this_ever_be_true/)
* [this==nullptr-2](http://stackoverflow.com/questions/21724951/do-compilers-assume-that-this-is-not-nullptr-in-debug-mode)
* [this==nullptr-3](https://www.viva64.com/en/b/0226/)
* [this==nullptr-4](https://www.viva64.com/en/w/V704/)
* [this==nullptr-5](https://hownot2code.com/2016/07/04/do-not-compare-this-to-nullptr-anymore/)

### 2017-5-8
* [The key differences between Python 2.7.x and Python 3.x with examples](http://sebastianraschka.com/Articles/2014_python_2_3_key_diff.html)
* [strong types are (mostly) free in C++](http://www.fluentcpp.com/2017/05/05/news-strong-types-are-free)
* [Is the preprocessor still needed in C++](http://foonathan.net/blog/2017/05/08/preprocessor.html)
* [COW-String](http://developer.51cto.com/art/201608/516340.htm)
* [四论-数理逻辑、类型论、抽象代数及范畴论](https://www.zhihu.com/question/37050853?sort=created)

### 2017-5-9
* [Build-gcc-7-in-WSL](https://solarianprogrammer.com/2017/05/04/building-gcc-wsl-windows-subsystem-linux/)
* [Functional Programming in Javascript === Garbage](http://awardwinningfjords.com/2014/04/21/functional-programming-in-javascript-equals-garbage.html)
* [mprotect](http://man7.org/linux/man-pages/man2/mprotect.2.html)
* [VirtualProtect](https://msdn.microsoft.com/en-us/library/windows/desktop/aa366898)

### 2017-5-10
* [HOAS-SKI](https://zhuanlan.zhihu.com/p/22231273)
* [Dynamic-Dispatch-in-Haskell](https://two-wrongs.com/dynamic-dispatch-in-haskell-how-to-make-code-extendable)
* [Python-unbuffer-output](http://stackoverflow.com/questions/107705/disable-output-buffering)

### 2017-5-11
* [C++17-in-VS2017.3](https://blogs.msdn.microsoft.com/vcblog/2017/05/10/c17-features-in-vs-2017-3/)
* [FizzBuzz](https://www.reddit.com/r/programming/comments/10d7w/fizzbuzz_spoilers/)
* [NN-FP](http://colah.github.io/posts/2015-09-NN-Types-FP/)
* [Thonny-Python-IDE](http://thonny.org/)

### 2017-5-12
* [dllexport-WINAPI-conflict](http://stackoverflow.com/questions/538134/exporting-functions-from-a-dll-with-dllexport)
* [IBM-memory-manage](https://www.ibm.com/developerworks/cn/linux/l-memory/)
* [glibc-malloc](https://code.woboq.org/userspace/glibc/malloc/malloc.c.html)
* [linked-list-sort-1-2-4-8](https://www.zhihu.com/question/47675652/answer/167696236)
* [DB-benchmark-5-10](https://www.techempower.com/benchmarks/?#section=data-r14)
* [WSL-openSUSE-Fedora](https://blogs.msdn.microsoft.com/commandline/2017/05/11/new-distros-coming-to-bashwsl-via-windows-store/)
* [The-year-of-Linux-Desktop-Reddit](https://www.reddit.com/r/linux/comments/6alcsr/the_year_of_the_linux_desktop/)
* [SciKit-GIFs](https://dashee87.github.io/data%20science/general/Clustering-with-Scikit-with-GIFs/)

### 2017-5-13
* [自然变换-Natural-Transformation](https://zh.wikipedia.org/wiki/%E8%87%AA%E7%84%B6%E8%AE%8A%E6%8F%9B)
* [Cpp-vs-Rust](https://www.reddit.com/r/cpp/comments/6asjmd/my_friend_keeps_trying_to_convince_me_to_use_rust/)
* [Natural-Transformation](https://www.johndcook.com/blog/2017/03/16/natural-transformations/)
* [Rewrite-BSD-like-1994-cat](https://www.youtube.com/watch?v=MCuzvy79WWQ)
* [constexpr-float](http://stackoverflow.com/questions/34665079/initializing-a-constexpr-with-a-const-int-vs-float)
* [What Every Programmer Should Know About Floating-Point Arithmetic](http://floating-point-gui.de/)
* [I-made-a-game-in-Rust](https://michaelfairley.com/blog/i-made-a-game-in-rust/)
* [Simon Peyton-Jones: Escape from the ivory tower: the Haskell journey](https://www.youtube.com/watch?v=re96UgMk6GQ)
* [Implement-cpp-borrow-checker](http://nibblestew.blogspot.com/2017/05/emulating-rust-borrow-checker-with-c.html)
* [std::async](https://bartoszmilewski.com/2011/10/10/async-tasks-in-c11-not-quite-there-yet/)
* [cpp-pointer-vs2015-bug](https://social.msdn.microsoft.com/Forums/sqlserver/en-US/15529acd-259b-488d-8961-13e834cdc1fe/c-pointer-to-member-nullptr-check-fails-with-multiple-inheritance?forum=vclanguage&prof=required)

### 2017-5-14
* [idiomatic Haskell-1](http://bitemyapp.com/posts/2014-12-03-why-are-types-useful.html)
* [idiomatic Haskell-2](http://bitemyapp.com/posts/2014-11-18-strong-types-and-testing.html)
* [The-Unsound-Playground](http://io.livecode.ch/learn/namin/unsound)
* [Declarative Control Flow](https://www.youtube.com/watch?v=WjTrfoiB0MQ)
* [Null-Reference-The-Billion-Dollar-Mistake](https://www.infoq.com/presentations/Null-References-The-Billion-Dollar-Mistake-Tony-Hoare)
* [Hands-on-Dotty](https://www.youtube.com/watch?v=aftdOFuVU1o)

### 2017-5-15
* [C++-object-model](https://zhihu.com/question/59810837/answer/169132185)
* [Linux-ELF-in-Windows](http://www.cnblogs.com/zkweb/p/6856879.html?from=timeline)

### 2017-5-16
* [“What part of Milner-Hindley do you not understand?”](http://stackoverflow.com/questions/12532552/what-part-of-milner-hindley-do-you-not-understand)
* [difference-between-auto-decltype(auto)](http://stackoverflow.com/questions/21369113/what-is-the-difference-between-auto-and-decltypeauto-when-returning-from-a-fun)
* [WannaCry-North-Korea](https://blog.comae.io/wannacry-links-to-lazarus-group-dcea72c99d2d)
* [Pyformat](https://pyformat.info/)
* [asm-view-of-call-convention](http://www.unixwiz.net/techtips/win32-callconv-asm.html)
* [Meizu-QR-code-analysis](https://zhuanlan.zhihu.com/p/26936016)
* [MS-calling-convention](http://www.cs.cornell.edu/courses/cs412/2001sp/resources/microsoft-calling-conventions.html)
* [x86-cdecl/stdcall](http://www.cs.cornell.edu/courses/cs412/2001sp/resources/microsoft-calling-conventions.html)
* [Timsort](https://en.wikipedia.org/wiki/Timsort)
* + linked-list connect sort (1 5 3 | 4 5 6 2 | 3 -> merge 1-3-5 2-4-5-6 3)
* [code-as-data](http://stackoverflow.com/questions/5833033/in-lisp-code-is-data-what-benefit-does-that-provide)

### 2017-5-17
* [Haskell-Bits](http://www.kovach.me/posts/2017-01-30-haskell-bits-randomness.html)
* [How misaligning data can increase performance 12x by reducing cache misses](https://danluu.com/3c-conflict/)
* [Design-by-Introspection-AA](https://www.youtube.com/watch?v=es6U7WAlKpQ)

### 2017-5-18
* [INLIN(E)ING-Haskell](http://mpickering.github.io/posts/2017-05-17-inlining-case-study.html)
* [std::allocator-deprecated-c++17](http://stackoverflow.com/questions/39414610/why-are-are-stdallocators-construct-and-destroy-functions-deprecated-in-c17)
* [SEH](http://www.pediy.com/kssd/pediy08/pediy8-308.htm)
* [SEH-Compiler](https://www.codeproject.com/Articles/2126/How-a-C-compiler-implements-exception-handling)
* [Callstack](http://www.cnblogs.com/saucerman/articles/3912157.html)
* [Setup-a-Hoogle](https://www.reddit.com/r/haskelltil/comments/6bsfqa/how_to_set_up_hoogle_for_a_particular_project_eg/)
* [TH-Haskell-And-recursive-type](https://www.reddit.com/r/haskellquestions/comments/6bt4iz/defining_two_types_whose_definitions_depend_on/)
* [Solve-GetVerson-Bug](http://blog.csdn.net/justfwd/article/details/44856277)
* [Macro-Type-Racket](https://zhuanlan.zhihu.com/p/26971686)
* [Schwartzian-Transform](https://en.wikipedia.org/wiki/Schwartzian_transform)

### 2017-5-19
* [git-log-pretty](http://www.cnblogs.com/bellkosmos/p/5923439.html)
* [Google-5K-Error-Page](https://slashcrypto.org/2017/05/17/5k_Error_Page/)
* [Let-them-paste-passwords](https://www.ncsc.gov.uk/blog-post/let-them-paste-passwords)
* [noexcept-container-in-vector](http://stackoverflow.com/questions/21320391/can-i-mark-a-classes-move-operation-noexcept-if-it-contains-a-standard-container)
* [Y-combinator](https://zhuanlan.zhihu.com/p/26995216)
* [C-main](http://imzlp.me/posts/15272/)
* [Cpp-simulate-hardware](https://blog.feabhas.com/2017/03/making-things-stuff-part-1/)

### 2017-5-20
* [nth-prime-estimation](https://math.stackexchange.com/questions/1270814/bounds-for-n-th-prime)
* [setjmp.h](https://zh.wikipedia.org/wiki/Setjmp.h)
* [setjmp](http://web.eecs.utk.edu/~huangj/cs360/360/notes/Setjmp/lecture.html)

### 2017-5-21
* [rust-for-semantics](http://www.asaj.org/talks/lola16/?full#cover)
* [Escape-hell-with-Monads](https://philipnilsson.github.io/Badness10k/posts/2017-05-07-escaping-hell-with-monads.html)
* [memorize-fib-difference](https://www.zhihu.com/question/60112058/answer/172415244)

### 2017-5-22
* [Hussling Haskell types into Hasse diagrams](http://blog.ezyang.com/2010/12/hussling-haskell-types-into-hasse-diagrams/)
* [Haskell-Lattice-Bottom](http://stackoverflow.com/questions/6379458/the-concept-of-bottom-in-haskell)
* [Haskell-undefined-vs-Java-null](http://stackoverflow.com/questions/3962939/whats-the-difference-between-undefined-in-haskell-and-null-in-java)
* [Linux-pipeline](http://blog.csdn.net/recordme/article/details/22102241)
* [UB-closer](https://software.intel.com/en-us/blogs/2016/02/05/undefined-behavior-is-closer-than-you-think)
* [Cpp-Accelerate-GPU-SYCL](https://blog.tartanllama.xyz/c++/2017/05/19/sycl/)


### 2017-5-23
* [oh-my-dear-js](https://thomas-yang.me/projects/oh-my-dear-js/)
* [Z3-prover-soduko](https://www.zhihu.com/question/60145535/answer/173343948)

### 2017-5-24
* [underscore-in-Python](https://dbader.org/blog/meaning-of-underscores-in-python#.)
* [a-brief-history-of-types](http://arcanesentiment.blogspot.com/2015/01/a-brief-history-of-type.html)
* [Precedence-vs-Sequence](https://stackoverflow.com/questions/5473107/operator-precedence-vs-order-of-evaluation)
* [Python-GIL](https://wiki.python.org/moin/GlobalInterpreterLock)

### 2017-5-25
* [u8-character](https://stackoverflow.com/questions/31970111/what-is-the-point-of-the-utf-8-character-literals-proposed-for-c17)
* [Cpp17-new](https://stackoverflow.com/questions/38060436/what-are-the-new-features-in-c17)
* [Scheme-delimited-continuation](https://zhuanlan.zhihu.com/p/25864185)
* [type-family=vs-data-family](https://stackoverflow.com/questions/20870432/type-family-vs-data-family-in-brief)

### 2017-5-26
* [Lazier function definitions by merging partial values](http://conal.net/blog/posts/lazier-function-definitions-by-merging-partial-values)
* [Write-fast-json-parser](https://chadaustin.me/2017/05/writing-a-really-really-fast-json-parser/)
* [partition-problem-with-order](http://www8.cs.umu.se/kurser/TDBA77/VT06/algorithms/BOOK/BOOK2/NODE45.HTM)
* [partition-problem](https://www.quora.com/A-group-of-N-integer-numbers-need-to-be-divided-fairly-into-K-subgroups-A-fair-division-is-that-the-max-of-the-sums-of-K-subgroups-is-minimal)

### 2017-5-27
* [class-template-argument-deduction-not-working-with-alias-template](https://stackoverflow.com/questions/41008092/class-template-argument-deduction-not-working-with-alias-template)

### 2017-5-28
* [dependent-type](https://www.douban.com/group/topic/2718805/)
* [GADT](https://en.wikipedia.org/wiki/Generalized_algebraic_data_type)
* [real-world-use-of-gadt](https://stackoverflow.com/questions/3859200/real-world-use-of-gadt)
* [existential-type](https://stackoverflow.com/questions/292274/what-is-an-existential-type)
* [longshao-CPU](https://bbs.kechuang.org/t/68167)
* [Draw Behind Desktop Icons in Windows 8+](https://www.codeproject.com/articles/856020/draw-behind-desktop-icons-in-windows)
* [hackett](https://lexi-lambda.github.io/blog/2017/05/27/realizing-hackett-a-metaprogrammable-haskell/)
* [TLA+](https://pron.github.io/posts/tlaplus_part1)
* [__vectorcall/__circcall/__cdecl/__thiscall/__stdcall/__fastcall](https://my.oschina.net/ray1421/blog/699540)
* [Why-windows-lock-file](https://www.zhihu.com/question/19830109)
* [save-9-GB-with-slots](http://tech.oyster.com/save-ram-with-python-slots/)

### 2017-5-29
* [List-of-Cpp-online-compiler](https://arne-mertz.de/2017/05/online-compilers/)
* [RankNTypes](https://www.reddit.com/r/haskell/comments/6doa7e/what_is_the_use_of_rankntypes_language_extension/)
* [Existential Quantification Patterns and Antipatterns](https://medium.com/@jonathangfischoff/existential-quantification-patterns-and-antipatterns-3b7b683b7d71)
* [外接CPU](https://www.zhihu.com/question/23954924)
* [cache-instruction-_mm_clfushopt/_mm_prefetch](https://stackoverflow.com/questions/36563277/x86-64-cache-load-and-eviction-instruction)
* [prefetch-example](https://stackoverflow.com/questions/7327994/prefetching-examples)
* [gcc-prefetch](https://gcc.gnu.org/projects/prefetch.html)
* [difference-between-static_if-and-if_constexpr](https://www.reddit.com/r/cpp/comments/4y4opt/what_is_the_difference_between_constexpr_if_and/)

### 2017-5-30
* [DataKinds-Haskell](https://stackoverflow.com/questions/20558648/what-is-the-datakinds-extension-of-haskell)
* [Term:Type:Kind:Sort](http://itscstime.blogspot.com/2011/02/term-type-kind-sort.html)
* [Haskell-Concepts](http://v.youku.com/v_show/id_XMTQ4ODgxNTMwMA==.html?from=y1.7-2)
* [Linux-Calltable-for-x86-64](http://blog.rchapman.org/posts/Linux_System_Call_Table_for_x86_64/)
* [static-inline-functon-cpp](https://stackoverflow.com/questions/10876930/should-one-never-use-static-inline-function)
* [GNU-inline](https://gcc.gnu.org/onlinedocs/gcc/Inline.html)
* [Monomorphism-Restriction-Haskell](https://stackoverflow.com/questions/32496864/what-is-the-monomorphism-restriction)

### 2017-5-31
* [one-past-end-address](https://stackoverflow.com/questions/988158/take-the-address-of-a-one-past-the-end-array-element-via-subscript-legal-by-the)
* [rand()-quality](https://www.zhihu.com/question/20222653)
* [Interprocedural optimization in GCC](https://kristerw.blogspot.com/2017/05/interprocedural-optimization-in-gcc.html)
* [自指](https://chaoli.club/index.php/3302/p1#p39948)
* [enough-big-num-C](https://chaoli.club/index.php/1004/p1#p15591)
* [cpp-lambda](http://okmij.org/ftp/cpp-digest/Lambda-CPP-more.html)
* [二段构造](http://www.cppblog.com/huaxiazhihuo/archive/2012/06/14/178799.aspx)
* [expression-template](http://www.flipcode.com/archives/Faster_Vector_Math_Using_Templates.shtml)

### 2017-6-1
* [n3538-restrict-in-cpp](http://www.open-std.org/JTC1/SC22/WG21/docs/papers/2013/n3538.html)
* [virtual-class-initialization](https://stackoverflow.com/questions/2126522/c-virtual-inheritance)
* [Are Mutable References Fast?/Haskell](https://medium.com/@jonathangfischoff/are-mutable-references-in-haskell-fast-f095f4144977)
* [CPU-features-for-debugging](https://www.reddit.com/r/cpp/comments/6elgsg/cpu_features_for_debugging/)
* [递归下降](https://www.zhihu.com/question/41077098)
* [上下文有关文法(CSG)](https://www.zhihu.com/question/52619126)

### 2017-6-2
* [void-as-literal-type-in-cpp1y/Cpp](https://bugs.llvm.org/show_bug.cgi?id=19714)
* [const-void/Cpp](https://stackoverflow.com/questions/37881240/what-is-const-void)
* [constexpr-parameter-cannot-user-defined/Cpp](https://mpark.github.io/programming/2017/05/26/constexpr-function-parameters/)
* [Pointer Overflow Checking is in LLVM](https://blog.regehr.org/archives/1518)
* [多边形内接最大三角形-O(n)-错误](https://zhuanlan.zhihu.com/p/27222683?group_id=854098576312274944)

### 2017-6-3
* [superpipeline-superscalar/CPU](http://personal.denison.edu/~bressoud/cs281-s10/Supplements/pipelining.pdf)
* [超标量-超流水线/CPU](http://blog.csdn.net/do2jiang/article/details/4545889)
* [RISC-CISC/CPU](http://blog.csdn.net/shinezhang86/article/details/48393203)
* [mbcs-unicode](https://stackoverflow.com/questions/3298569/difference-between-mbcs-and-utf-8-on-windows)
* [MonadTransformer/Haskell](http://cnhaskell.com/chp/18.html)
* [STM/Haskell](http://cnhaskell.com/chp/28.html)
* [Strong-type-no-core-dump-?/Haskell](https://www.zhihu.com/question/19780166)

### 2017-6-4
* [create-a-breakpoint/C](https://stackoverflow.com/questions/4326414/set-breakpoint-in-c-or-c-code-programmatically-for-gdb-on-linux)
* [CRTP-detection-cannot-construct/Cpp](https://www.zhihu.com/question/51297276)
* [Write-Linux-Kernel-in-Rust](https://dominuscarnufex.github.io/cours/rs-kernel/en.html)
* [Report-error-in-Haskell](http://blog.ezyang.com/2011/08/8-ways-to-report-errors-in-haskell-revisited/)
* [Eleven Reasons to use Haskell as a Mathematician](http://blog.sigfpe.com/2006/01/eleven-reasons-to-use-haskell-as.html)
* [constexpr-quicksort-Cpp17](http://playfulprogramming.blogspot.com/2017/06/constexpr-quicksort-in-c17.html)
* [exception-handling-cpp-abi](https://monoinfinito.wordpress.com/series/exception-handling-in-c/)
* [void_t-is-partialization](https://stackoverflow.com/questions/27687389/how-does-void-t-work)
* [vector-growth-speed](https://github.com/facebook/folly/blob/master/folly/docs/FBVector.md)


### 2017-6-5
* [empty-infinite-loop-ub?](https://stackoverflow.com/questions/3592557/optimizing-away-a-while1-in-c0x)
* [template-type-covariance](https://stackoverflow.com/questions/2203388/c-templates-polymorphism)
* [string.data](https://stackoverflow.com/questions/34155390/why-doesnt-stdstring-data-provide-a-mutable-char)
* [nested-namespace-extern-C](https://stackoverflow.com/questions/28996944/extern-c-linkage-inside-c-namespace)
* [dependent-type/Scala](http://japgolly.blogspot.com/2017/06/dependently-typed-functions.html)
* [list-metaprogramming-for-Cpp/Clojure/Cpp](https://deque.blog/2017/06/05/lisp-meta-programming-for-c-developers-automatic-traces-part-2/)
* [find-difference-pair/Alg](https://stackoverflow.com/questions/22282066/find-pairs-with-given-difference)
* [async-in-linux-epoll-select-poll/Linux](https://jvns.ca/blog/2017/06/03/async-io-on-linux--select--poll--and-epoll/)
* [reserved-identifiers-for-underscore/Cpp](https://stackoverflow.com/questions/228783/what-are-the-rules-about-using-an-underscore-in-a-c-identifier)


### 2017-6-6
* [Scheme-Type/Scheme](https://www.zhihu.com/question/21089222)
* [luogu-A+B/Alg](https://www.luogu.org/wiki/show?name=%E9%A2%98%E8%A7%A3+P1001)
* [standard=layout/Cpp](https://msdn.microsoft.com/en-us/library/mt767760.aspx)
* [non-trivially-copyable-memcpy/Cpp](https://stackoverflow.com/questions/29777492/why-would-the-behavior-of-stdmemcpy-be-undefined-for-objects-that-are-not-triv)
* [unordered_map-erase-before-Cpp14-UB/Cpp](https://stackoverflow.com/questions/38468844/erasing-elements-from-unordered-map-in-a-loop)
* [assignment-:=-or-=](https://en.wikipedia.org/wiki/Assignment_(computer_science))

### 2017-6-7
* [adder-overflow-detection](http://www.c-jump.com/CIS77/CPU/Overflow/lecture.html)
* [c++-exception](https://www.zhihu.com/question/22889420)
* [Cleaner, more elegant, and wrong](https://blogs.msdn.microsoft.com/oldnewthing/20040422-00/?p=39683)
* [Cleaner, more elegant, and harder to recognize](https://blogs.msdn.microsoft.com/oldnewthing/20050114-00/?p=36693/)
* [member-function-template-non-namespace-scope-explicit-specialization](https://stackoverflow.com/questions/3052579/explicit-specialization-in-non-namespace-scope?noredirect=1&lq=1)
* [webassembly-101](http://blog.openbloc.fr/webassembly-first-steps/)

### 2017-6-8
* [lookahead-adder](http://www.yalewoo.com/alu_adder.html)
* [ALU-one-adder](http://www.c-jump.com/CIS77/CPU/Overflow/lecture.html)

### 2017-6-9
* [code-as-data](https://stackoverflow.com/questions/28267029/what-does-code-as-data-mean)
* [ie-old-bugs](http://www.freebuf.com/articles/web/136299.html)
* [A-early-look-of-C#7.1-1](https://www.infoq.com/news/2017/06/CSharp-7.1-a?utm_source=infoq&utm_medium=popular_widget&utm_campaign=popular_content_list&utm_content=homepage)
* [A-early-look-of-C#7.1-2](https://www.infoq.com/news/2017/06/CSharp-7.1-b?utm_source=infoq&utm_medium=popular_widget&utm_campaign=popular_content_list&utm_content=homepage)
* [stateful-stateless](http://blog.csdn.net/zhoumingp/article/details/50457203)
* [TCP/IP-OSI](http://blog.csdn.net/superjunjin/article/details/7841099)
* [repeated-move-in-boost-asio](https://stackoverflow.com/questions/17715794/repeated-stdmove-on-an-boostasio-socket-object-in-c11)
* [difference-between-32bit-64bit-programming](https://www.reddit.com/r/learnprogramming/comments/6g24r5/whats_the_difference_between_32_bit_and_64_bit/)

### 2017-6-10
* [openbsd-daily](https://blog.tintagel.pl/2017/06/09/openbsd-daily.html)
* [JPEG](https://zhuanlan.zhihu.com/p/27296876)
* [BDE-allocator](https://github.com/bloomberg/bde/wiki/BDE-Allocator-model)
* [allocator-vs-new](https://stackoverflow.com/questions/31358804/whats-the-advantage-of-using-stdallocator-instead-of-new-in-c?noredirect=1&lq=1)
* [gcc-generate-memmove-instead-of-memcpy/Cpp](https://stackoverflow.com/questions/37175209/why-does-gcc-generate-a-memmove-instead-of-a-memcpy-for-copying-a-stdvector)
* [compile-time-jump-table](https://stackoverflow.com/questions/908256/getting-template-metaprogramming-compile-time-constants-at-runtime)

### 2017-6-11
* [Diting0x-concurrency](http://www.chongh.wiki/categories/High-performance/)
* [Translating a C++ parser to Haskell](http://www.haskellforall.com/2017/06/translating-c-parser-to-haskell.html)

### 2017-6-12
* [Memory-barrier/Cpp](https://stackoverflow.com/questions/8841738/c-memory-barriers-for-atomics)
* [volatile-vs-atomic/Cpp](https://stackoverflow.com/questions/12878344/volatile-in-c11)
* [asm volatile("" ::: "memory")-gcc/Cpp](https://stackoverflow.com/questions/14950614/working-of-asm-volatile-memory)
* [volatile-cpp-microsoft/Cpp](https://docs.microsoft.com/zh-cn/cpp/cpp/volatile-cpp)
* [volatile-cpp-gcc/Cpp](https://gcc.gnu.org/onlinedocs/gcc/Volatiles.html)
* [Init-in-Cpp-is-bonker](https://accu.org/index.php/journals/2379)

### 2017-6-13
* [atomic-signal-fence](https://stackoverflow.com/questions/14581090/how-to-correctly-use-stdatomic-signal-fence)
* [compile-time-fence](https://stackoverflow.com/questions/18449291/when-is-a-compiler-only-memory-barrier-such-as-stdatomic-signal-fence-useful?rq=1)
* [Memory Ordering at Compile Time](http://preshing.com/20120625/memory-ordering-at-compile-time/)
* [asm-vs-fence](https://stackoverflow.com/questions/40579342/is-there-any-compiler-barrier-which-is-equal-to-asm-memory-in-c11)
* [scanner-less-parsing](https://en.wikipedia.org/wiki/Scannerless_parsing)
* [sort-semantics](https://cs.stackexchange.com/questions/11735/what-is-a-sort-in-programming-language-semantics)
* [cerr-flush](https://stackoverflow.com/questions/6027034/why-cerr-flushes-the-buffer-of-cout)
* [how-is-GNU-yes-efficient](https://news.ycombinator.com/item?id=14542938)
* [next-permutation/Cpp/Alg](http://blog.csdn.net/c18219227162/article/details/50301513)
* [std::pair的复杂异常安全](https://code.woboq.org/llvm/include/c++/6.3.1/bits/stl_pair.h.html)
* [Exception-Handling](https://msdn.microsoft.com/en-us/library/4t3saedz.aspx)
* [exception-handling-in-C++](https://stackoverflow.com/questions/490773/how-is-the-c-exception-handling-runtime-implemented)
* [Exception-handling-wiki](https://zh.wikipedia.org/wiki/%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86)
* [ifstream.eof](https://stackoverflow.com/questions/4533063/how-does-ifstreams-eof-work)

### 2017-6-14
* [write-a-unix-shell](https://indradhanush.github.io/blog/writing-a-unix-shell-part-2/)
* [statement-expression](https://gcc.gnu.org/onlinedocs/gcc/Statement-Exprs.html)
* [TCPL-ub-which-changed-in-function-parameter-evalutaion-order-Cpp17](https://stackoverflow.com/questions/27158812/does-this-code-from-the-c-programming-language-4th-edition-section-36-3-6-ha/27158813#27158813)
* [rust-as-a-gateway-drug-to-Haskell](http://xion.io/post/programming/rust-into-haskell.html)
* [vtable-entry-itanium/Cpp](https://stackoverflow.com/questions/5712808/what-is-the-first-int-0-vtable-entry-in-the-output-of-g-fdump-class)

### 2017-6-15
* [blocking-non-blocking-verilog](http://www.cnblogs.com/xd-elegant/p/3982274.html)
* [WASAPI](https://stackoverflow.com/questions/37468283/how-to-get-below-10ms-latency-using-wasapi-shared-mode#)
* [lambda-function-pointer-compare](https://stackoverflow.com/questions/3988869/c-lambda-operator)

### 2017-6-16
* [shared_ptr-performance-problem](https://stackoverflow.com/questions/3628081/shared-ptr-horrible-speed)
* [CriticalSecion-by-WaitonAddress](https://blogs.msdn.microsoft.com/oldnewthing/20160825-00/?p=94165)
* [llvm-dynamic-cast](https://www.zhihu.com/question/61101212)

### 2017-6-17
* [switch-assembly](https://www.codeproject.com/Articles/100473/Something-You-May-Not-Know-About-the-Switch-Statem)
* [mmap-faster-than-sequential-IO](https://stackoverflow.com/questions/9817233/why-mmap-is-faster-than-sequential-io)
* [mmap-cnblog](http://www.cnblogs.com/charlesblc/p/6263665.html)
* [member-template-function-cannot-be-virtual](https://stackoverflow.com/questions/2354210/can-a-c-class-member-function-template-be-virtual)
* [ISPC-Intel-SPMD-Program-Compiler](http://ispc.github.io/documentation.html)
* [VLA-implement](https://stackoverflow.com/questions/21182307/how-does-gcc-implement-variable-length-arrays)
* [implement-alloca](https://stackoverflow.com/questions/714692/alloca-implementation)
* [Heegner number](http://zhihu.com/question/51033691/answer/134759209)
* [rust-fv](https://zhuanlan.zhihu.com/p/27438530)
* [Idris-over-Haskell](https://deque.blog/2017/06/14/10-things-idris-improved-over-haskell/)


### 2017-6-19
* [java-value-type](http://cr.openjdk.java.net/~jrose/values/values-0.html)
* [direct-value-type-proposal](http://cr.openjdk.java.net/~dlsmith/values.html)
* [avoid-unboxing](http://blog.zhaojie.me/2013/04/dont-go-half-way-of-preventing-boxing.html)
* [visual-c++-is-so-liberal-avoid-nonconst-lvalue-ref-bind-to-rvalue](http://www.asawicki.info/news_1482_visual_c_is_so_liberal.html)
* [haskell-practice](http://zhihu.com/question/61225796/answer/185412037)
* [wire-reg-verilog](https://www.zhihu.com/question/21021718)
* [FSM-PDA-TM](https://www.zhihu.com/question/22303575)
* [dir-overflow](http://zhihu.com/question/46394184/answer/185429008)


### 2017-6-20
* [find_if-native-STL-for-loop](https://kristerw.blogspot.jp/2017/06/a-look-at-range-v3-code-generation.html?m=1)
* [inside-D's-GC](http://olshansky.me/gc/runtime/dlang/2017/06/14/inside-d-gc.html)
* [move-only-vector-initializer-list](https://stackoverflow.com/questions/8468774/can-i-list-initialize-a-vector-of-move-only-type)
* [Tinix/OS](https://github.com/bajdcc/tinix)
* [GNU-GPL-v2](https://jxself.org/translations/gpl-2.zh.shtml)
* [ISO-C-forbid-void*-function-pointer](https://stackoverflow.com/questions/14134245/iso-c-void-and-function-pointers)
* [dlsym-2004](http://pubs.opengroup.org/onlinepubs/009695399/functions/dlsym.html)
* [dlsym-2016](http://pubs.opengroup.org/onlinepubs/9699919799/functions/dlsym.html)
* [assign-deassign-force-release](http://www.eefocus.com/xiaxing_fpga/blog/11-08/230004_7058d.html)
* [scanf-printf-in-libc](https://stackoverflow.com/questions/2199076/printf-and-scanf-work-without-stdio-h-why)
* [auto-stdio](https://stackoverflow.com/questions/4654147/without-including-stdio-h)

### 2017-6-21
* [behavior-tree](http://blog.renatopp.com/2014/07/25/an-introduction-to-behavior-trees-part-1/)
* [horrible-union-with-undefined-behavior](https://stackoverflow.com/questions/13334703/implementation-of-c-cast)

### 2017-6-22
* [Rust-vs-C++](http://mainisusuallyafunction.blogspot.com/2017/06/a-rust-view-on-effective-modern-c.html)
* [common-ub](https://stackoverflow.com/questions/367633/what-are-all-the-common-undefined-behaviours-that-a-c-programmer-should-know-a)

### 2017-6-23
* [FreeMonadInterpreter/F#](http://fssnip.net/7SX/title/Freemonad-interpreter)
* [VS-RTC-0c0h](https://stackoverflow.com/questions/4024492/can-anyone-help-me-interpret-this-simple-disassembly-from-windbg)
* [Challenges of Debugging Optimized x64 Code](https://blogs.msdn.microsoft.com/ntdebugging/2009/01/09/challenges-of-debugging-optimized-x64-code/)
* [7-ways-for-better-Cpp-code](http://www.fluentcpp.com/2017/06/23/7-ways-better-cpp-summer/)
* [64bit-fastcall-reserve-stack-shadow-space](https://stackoverflow.com/questions/21991961/fastcall-what-happens-with-the-stack)
* [x64-calling-convention](http://www.cnblogs.com/shines77/p/3788514.html?utm_source=tuicool&utm_medium=referral)
* [Stack frame layout on x86-64](http://eli.thegreenplace.net/2011/09/06/stack-frame-layout-on-x86-64)

### 2017-6-24
* [weak-callback-bind-weak_ptr](https://stackoverflow.com/questions/11680680/binding-to-a-weak-ptr)
* [weak-callback-weak_ptr](http://blog.csdn.net/pi9nc/article/details/19325653)
* [CESU-8-UTF-16](https://en.wikipedia.org/wiki/CESU-8)
* [Exploring Kotlin’s hidden costs — Part 1](https://medium.com/@BladeCoder/exploring-kotlins-hidden-costs-part-1-fbb9935d9b62)
* [Exploring Java's hidden costs](https://news.realm.io/news/360andev-jake-wharton-java-hidden-costs-android/)
* [torrent-sites](https://www.lifewire.com/top-torrent-sites-alternatives-to-kat-2483512)
* [C-extern-inline](https://stackoverflow.com/questions/216510/extern-inline)
* [C-inline-undefined-reference](https://stackoverflow.com/questions/6312597/is-inline-without-static-or-extern-ever-useful-in-c99)

### 2017-6-25
* [inline-cpp-internal-entity](http://www.alinshans.com/2017/05/23/p1705231/)
* [RFC-character-sets](https://www.iana.org/assignments/character-sets/character-sets.xhtml)
* [llvm-says-no-global-static-ctor](https://stackoverflow.com/questions/1271248/c-when-and-how-are-c-global-static-constructors-called)
* [Python-package-phishing](http://paper.seebug.org/326/)
* [test-32-64-bit-golf](https://codegolf.stackexchange.com/questions/127322/is-my-os-32-bit-or-64-bit)
* [member-initializer-list](https://stackoverflow.com/questions/926752/why-should-i-prefer-to-use-member-initialization-list)
* [smart-pointer-bad-idea](https://www.zhihu.com/question/61008381)
* [difference-between-shared_ptr-make_shared](https://stackoverflow.com/questions/20895648/difference-in-make-shared-and-normal-shared-ptr-in-c)
* [object-files](https://stackoverflow.com/questions/23615282/object-files-vs-library-files-and-why)
* [xvalue-ends-when-full-expression-evaluated](https://stackoverflow.com/questions/2506793/c-life-span-of-temporary-arguments)
* [is-std::atomic_compare_and_exchange-implementable](https://herbsutter.com/2014/02/19/reader-qa-is-stdatomic_compare_exchange_-implementable/)
* [LZ4](https://ticki.github.io/blog/how-lz4-works/)

### 2017-6-26
* [MSVC-not-support-x64-asm](https://stackoverflow.com/questions/1295452/why-does-msvc-not-support-inline-assembly-for-amd64-and-itanium-targets)
* [zhihu-x64-msvc-no-asm](https://www.zhihu.com/question/28357966)
* [const-T[]-prvalue-subscript-lvalue](https://gcc.gnu.org/ml/gcc-patches/2017-05/msg00656.html)
* [array-rvalue](https://www.quora.com/What-is-a-array-rvalue-in-C++)
* [array-rvalue-bugs](https://zhuanlan.zhihu.com/p/27550465)
* [verilog-execution-order](http://www.vlsiinterviewquestions.org/2012/07/18/verilog-execution-order/)

### 2017-6-27
* [getline-cpp](https://gehrcke.de/2011/06/reading-files-in-c-using-ifstream-dealing-correctly-with-badbit-failbit-eofbit-and-perror/)
* [ELI5-Kerberos](http://www.roguelynn.com/words/explain-like-im-5-kerberos/)
* [python-pickle-multiprocess](https://www.zhihu.com/question/61617396)
* [harddisk](https://zybuluo.com/GavinNicholas/note/795957)

### 2017-6-28
* [void()](https://stackoverflow.com/questions/28688522/why-cannot-we-use-brace-initializer-in-an-un-evaluated-context)
* [return-void](https://stackoverflow.com/questions/35987493/return-void-type-in-c-and-c)
* [5-languages-should-learn](http://www.bradcypert.com/5-programming-languages-you-could-learn-from/)

### 2017-6-29
* [cryptocurrencies](https://news.ycombinator.com/item?id=14659775)
* [interview-questions](http://jamescun.github.io/iPG/)

### 2017-6-30
* [effective-matplotlib](http://pbpython.com/effective-matplotlib.html)
* [injective-class-name](https://stackoverflow.com/questions/25549652/why-is-there-an-injected-class-name)
* [GPG-SSH](http://ryanlue.com/posts/2017-06-29-gpg-for-ssh-auth)

### 2017-7-1
* [Integral-tricks](http://zhihu.com/question/24853026/answer/191406404)
* [regex-XHTML](https://stackoverflow.com/questions/1732348/regex-match-open-tags-except-xhtml-self-contained-tags/1732454#1732454)
* [Are-Css-Regular](https://cs.stackexchange.com/questions/12867/are-html-and-css-regular-languages)
* [网站权限加固](http://www.jianshu.com/p/44fe3ec5b704)
* [From-pixels-to-POC](https://blogs.technet.microsoft.com/srd/2017/06/20/tales-from-the-msrc-from-pixels-to-poc/)
* [filepath-bash](http://blog.csdn.net/ljianhui/article/details/43128465)
* [sudo-secure-path-in-root-user](https://unix.stackexchange.com/questions/8646/why-are-path-variables-different-when-running-via-sudo-and-su)
* [void* p = &p](https://www.quora.com/What-does-void*-p-p-mean-in-C++)

### 2017-7-2
* [rm-root-directory](https://superuser.com/questions/542978/is-it-possible-to-remove-the-root-directory)
* [boost-typeof-implementation](https://stackoverflow.com/questions/12199280/how-to-implement-boost-typeof)
* [What's-in-a-Continuation](http://jlongster.com/Whats-in-a-Continuation)
* [Turing-Complete-Language-Realization](https://cs.stackexchange.com/questions/63961/why-are-some-programming-languages-turing-complete-but-lack-some-abilities-of-ot)
* [Cpp17-new](https://zhuanlan.zhihu.com/p/27551890)
* [TRESOR/cipher](https://en.wikipedia.org/wiki/TRESOR)

### 2017-7-3
* [VLC-player-out-of-bounds](http://www.freebuf.com/articles/system/138574.html)
* [Python-hacker-tools](http://www.freebuf.com/sectool/138779.html)
* [Nuts and Bolts of Multithreaded Programming](https://software.intel.com/en-us/articles/nuts-and-bolts-of-multithreaded-programming)

### 2017-7-4
* [make_shared-RTTI-QoI](https://stackoverflow.com/questions/43093492/why-does-stdmake-shared-perform-two-separate-allocations-with-fno-rtti)
* [RTTI-shared_ptr-get_deleter](https://gcc.gnu.org/viewcvs/gcc/trunk/libstdc%2B%2B-v3/include/bits/shared_ptr_base.h?r1=154376&r2=154377&pathrev=154377&)
* [LLVM-_LIBCPP_NO_RTTI-get_deleter](https://github.com/llvm-mirror/libcxx/blob/master/include/memory)
* [How-I-found-intel-skylake-bug](http://gallium.inria.fr/blog/intel-skylake-bug/)
* [Writing-a-Memory-Allocator-for-Fast-Serialization](http://www.idryman.org/blog/2017/06/28/opic-a-memory-allocator-for-fast-serialization/)
* [Windows-locale-gbk-core-unicode](https://www.zhihu.com/question/24103924)
* [The-Utlimate-Oldschool-PC-fonts](http://int10h.org/oldschool-pc-fonts/)
* [Old-C-declaration](https://www.zhihu.com/question/59092129)

### 2017-7-5
* [Haskell-lazy-IO](https://stackoverflow.com/questions/8225920/lazy-evaluation-and-io-side-effect-confusion)
* [Haskell-bad-lazy-IO](https://stackoverflow.com/questions/5892653/whats-so-bad-about-lazy-i-o)
* [UB-in-2017](https://blog.regehr.org/archives/1520)
* [RE-to-Verilog-FSM](http://198.23.161.92/)
* [代数基本定理](http://zhihu.com/question/62027029/answer/194040006)

### 2017-7-6
* [value-init-and-=delete-aggregate](https://stackoverflow.com/questions/23882409/c14-value-initialization-with-deleted-constructor)
* [aggregate-delete-ctor-solution](https://stackoverflow.com/questions/33988297/deleted-default-constructor-objects-can-still-be-created-sometimes)
* [Why-INI-deprecated](https://blogs.msdn.microsoft.com/oldnewthing/20071126-00/?p=24383/)
* [/r/Python-users](https://www.reddit.com/r/Python/comments/6leaqy/top_250_subreddits_that_rpython_users_are_active/)
* [How-the-clipboard-works](https://blogs.msdn.microsoft.com/ntdebugging/2012/03/16/how-the-clipboard-works-part-1/)
* [Brainfucker-visualizer](https://fatiherikli.github.io/brainfuck-visualizer/#)
* [ZIP-defend](https://blog.haschek.at/2017/how-to-defend-your-website-with-zip-bombs.html)
* [Applicative-Normal-Order](http://blog.csdn.net/sk__________________/article/details/12848597)
* [Sound-effects](http://ninichimusic.com/blog/2017/3/29/12-great-places-to-find-sound-effects-for-your-game-or-project)
* [Cpp-seeding-surprise](http://www.pcg-random.org/posts/cpp-seeding-surprises.html#bias)

### 2017-7-7
* [VS-debug](https://blogs.msdn.microsoft.com/visualstudio/2017/06/26/7-lesser-known-hacks-for-debugging-in-visual-studio/)
* [comment-Python-speed](https://stackoverflow.com/questions/2731022/do-comments-slow-down-an-interpreted-language)


### 2017-7-8
* [16-bit-floating-number-opengl](https://stackoverflow.com/questions/22210684/16-bit-floats-and-gl-half-float)

### 2017-7-9
* [cisco-guide-in-DDoS](http://www.cisco.com/c/en/us/about/security-center/guide-ddos-defense.html)
* [challenge-collapsar](http://blog.sina.com.cn/s/blog_a5097c1a01015vwt.html)
* [GPU-performance-for-game-artists](http://www.fragmentbuffer.com/gpu-performance-for-game-artists/)
* [C++-design-error](http://tieba.baidu.com/p/3202116449)
* [docker-sandbox-judger](https://oi.men.ci/docker-sandbox-judger/)
* [Catch-segmentation-fault](https://stackoverflow.com/questions/2350489/how-to-catch-segmentation-fault-in-linux)
* [Heap-elision](https://www.reddit.com/r/cpp/comments/5j8h1e/c_weekly_ep_42_clangs_heap_elision/)
* [API-Security-Checklist](https://github.com/shieldfy/API-Security-Checklist)


### 2017-7-10
* [three-address-code](http://blog.csdn.net/attilax/article/details/51224390)
* [Byzantine Generals Problem](https://www.zhihu.com/question/23167269)
* [Understanding-SVM-via-examples](https://sadanand-singh.github.io/posts/svmpython/)
* [Alice-Bob-Eve-Crypto](https://zh.wikipedia.org/wiki/%E6%84%9B%E9%BA%97%E7%B5%B2%E8%88%87%E9%AE%91%E4%BC%AF)
* [How-not-to-use-DLLs](https://h3r2tic.github.io/posts/how-not-to-use-dlls/)
* [Python-import-from-performance-difference](https://stackoverflow.com/questions/3591962/python-import-x-or-from-x-import-y-performance)
* [PythonSpeed](https://wiki.python.org/moin/PythonSpeed)

### 2017-7-11
* [24-core-cpu](https://randomascii.wordpress.com/2017/07/09/24-core-cpu-and-i-cant-move-my-mouse/)
* [How-rust-is-tested](https://brson.github.io/2017/07/10/how-rust-is-tested)

### 2017-7-12
* [not-inverted-connected-itself-ring-oscillator](https://electronics.stackexchange.com/questions/243977/what-will-happen-if-the-output-from-a-not-gate-injected-back-to-its-own-input)
* [Profunctor](https://www.schoolofhaskell.com/school/to-infinity-and-beyond/pick-of-the-week/profunctors)
* [Template-explicit-instantiaton](https://stackoverflow.com/questions/2351148/explicit-instantiation-when-is-it-used)
* [Profunctor-zhihu](https://www.zhihu.com/question/40102263)
* [Profunctor-in-Haskell](http://blog.sigfpe.com/2011/07/profunctors-in-haskell.html)
* [Keeping Python competitive](https://lwn.net/Articles/723752/#723949)
* [Tagged pointer](http://www.infoq.com/cn/articles/deep-understanding-of-tagged-pointer/)
* [PEP: Hide implementation details in the C API](https://mail.python.org/pipermail/python-ideas/2017-July/046399.html)
* [C++-undecidable-grammar](https://stackoverflow.com/questions/794015/what-do-people-mean-when-they-say-c-has-undecidable-grammar)
* [Exotic Data Structures](http://concatenative.org/wiki/view/Exotic%20Data%20Structures)
* [.io-Network-hack](https://thehackerblog.com/the-io-error-taking-control-of-all-io-domains-with-a-targeted-registration/)
* [FAT-Python](https://medium.com/@anthonypjshaw/fat-python-the-next-chapter-in-python-optimization-69dc974bcca2)

### 2017-7-13
* [cout-volatile-pointer](https://stackoverflow.com/questions/2501737/why-does-stdcout-convert-volatile-pointers-to-bool)
* [system-error-cpp](https://akrzemi1.wordpress.com/2017/07/12/your-own-error-code/)
* [No-UB-pass-uninitialized-reference](https://stackoverflow.com/questions/35306345/is-it-undefined-behavior-to-pass-by-reference-uninitialized-variable)

### 2017-7-14
* [toward-go-2](https://blog.golang.org/toward-go2)
* [hello_world-without-header](https://pastebin.com/QG7MM3a7)
* [no-header-c-program](https://stackoverflow.com/questions/18223649/c-c-program-without-header-files)
* [PCH-VC++](https://blogs.msdn.microsoft.com/vcblog/2017/07/13/precompiled-header-pch-issues-and-recommendations/)
* [Performance-std::vector<std::unique_ptr<T>>](https://stackoverflow.com/questions/45089049/performance-of-resizing-stdvectorstdunique-ptrt)
* [guokr-soft-string-match](https://guokr.github.io/pattern-matching-problem.html)

### 2017-7-15
* [How to save a web page to the Internet Archive](http://www.bitsgalore.org/2014/08/02/How-to-save-a-web-page-to-the-Internet-Archive)
* [Python-books](http://pythonbooks.org/)
* [gameUI-patterns](http://www.gameuipatterns.com/)
* [What's in C++20 and the C++17 final score card](https://www.codeplay.com/portal/10-06-17-whats-in-cpp-20-and-cpp17-final-score-card)
* [Microsoft-free-ebook](https://blogs.msdn.microsoft.com/mssmallbiz/2017/07/11/largest-free-microsoft-ebook-giveaway-im-giving-away-millions-of-free-microsoft-ebooks-again-including-windows-10-office-365-office-2016-power-bi-azure-windows-8-1-office-2013-sharepo/)

### 2017-7-16
* [Convering-DOS-to-Shell](http://tldp.org/LDP/abs/html/dosbatch.html)
* [Develop-ecosystem](https://www.jetbrains.com/research/devecosystem-2017/#fun-facts)
* [Cpp20TO](https://www.reddit.com/r/cpp/comments/6ngkgc/2017_toronto_iso_c_committee_discussion_thread/)
* [HS-trip-report-to-Cpp20TO](https://herbsutter.com/2017/07/15/trip-report-summer-iso-c-standards-meeting-toronto/)
* [thread-accumulate](https://stackoverflow.com/questions/33766857/thread-pool-example-in-concurrency-in-action)
* [字体子集化](https://ecomfe.github.io/fontmin/)

### 2017-7-17
* [Basic Syntax Extension/Haskell](https://www.schoolofhaskell.com/school/to-infinity-and-beyond/pick-of-the-week/guide-to-ghc-extensions/basic-syntax-extensions)
* [stateful-metaprogramming-cpp](https://stackoverflow.com/questions/44267673/is-stateful-metaprogramming-ill-formed-yet)
* [difference-between-static-and-global](https://stackoverflow.com/questions/13415321/difference-between-static-auto-global-and-local-variable-in-the-context-of-c-a)

### 2017-7-18
* [bad-design-of-cpp-iostream](https://stackoverflow.com/questions/2753060/who-architected-designed-cs-iostreams-and-would-it-still-be-considered-wel)
* [java-gc](https://www.zhihu.com/question/21539353)
* [DFT-IDFT-Polynomial-Square](http://blog.miskcoo.com/2015/04/polynomial-multiplication-and-fast-fourier-transform)
* [STL-Alg-for-overload](http://www.fluentcpp.com/2017/07/18/can-you-wield-cpp-function-overloading-like-jon-snow-wields-longclaw/)
* [enable_shared_from_this](https://stackoverflow.com/questions/712279/what-is-the-usefulness-of-enable-shared-from-this)

### 2017-7-19
* [SS-deprecate-OTA](https://juejin.im/entry/589d3e4386b599006b2cbaae)
* [Typeable/Haskell](https://stackoverflow.com/questions/6600380/what-is-haskells-data-typeable)

### 2017-7-20
* [bitcount/cpp](https://stackoverflow.com/questions/45188786/bit-count-preprocessor-magic-vs-modern-c)
* [difference-between-static-extern](https://www.quora.com/What-is-the-deep-difference-between-static-extern-declaration-in-C-C++-programming)
* [non-type-template-lvalue-reference](https://stackoverflow.com/questions/5687540/non-type-template-parameters)

### 2017-7-21
* [js-no-lookbehind](https://stackoverflow.com/questions/30118815/why-are-lookbehind-assertions-not-supported-in-javascript)
* [mimic-js-lookbehind](http://blog.stevenlevithan.com/archives/mimic-lookbehind-javascript)
* [js-lookbehind-alternative](https://stackoverflow.com/questions/7376238/javascript-regex-look-behind-alternative)
* [code-golf-sum](https://codegolf.stackexchange.com/questions/133109/sum-of-all-integers-from-1-to-n)

### 2017-7-22
* [valgrind-on-WSL](http://www.albertgao.xyz/2016/09/28/how-to-use-valgrind-on-windows/)
* [valgrind-on-WSL-hack](https://github.com/Grauniad/valgrind)
* [ld.so.nohwcap](https://www.quora.com/What-is-the-purpose-of-the-code-etc-ld-so-nohwcap-code-file-on-Linux-Systems)

### 2017-7-23
* [lens-tutorial](http://www.mchaver.com/posts/2017-07-12-lens-tutorial-1.html)
* [Library InductiveTypes](http://adam.chlipala.net/cpdt/html/InductiveTypes.html)
* [The Y Combinator and strict positivity](http://blog.ezyang.com/2012/09/y-combinator-and-strict-positivity/)
* [strlen-optimization](https://github.com/lhmouse/MCF/issues/7#issuecomment-317245365)
* [Computational-Linear-Algebra](http://www.fast.ai/2017/07/17/num-lin-alg/)
* [Reasoning about type inhabitants in Haskell](https://gist.github.com/pchiusano/444de1f222f1ceb09596)
* [Type-inhabitation](https://www.zhihu.com/question/41925054)

### 2017-7-23
* [difference-between-pedantic-errors-and-Werror=pedantic](https://stackoverflow.com/questions/31567491/the-difference-between-pedantic-errors-and-werror-pedantic-in-gcc)
* [Fibonacci-matrix-Russian-peasant](https://thesundayprogrammer.wordpress.com/2016/06/27/on-computing-the-fibonacci-number-in-ologn-iteratively/)
* [1<<32-undefined](https://stackoverflow.com/questions/45268467/is-131-well-defined-in-c-when-sizeofint-4)

### 2017-7-25
* [binary-hello-world](https://stackoverflow.com/questions/10821875/how-could-i-write-hello-world-in-binary)
* [(a - > b) -> b === a](https://stackoverflow.com/questions/45287954/is-having-a-a-b-b-equivalent-to-having-an-a)
* [Roles/Haskell](https://typesandkinds.wordpress.com/2013/08/15/roles-a-new-feature-of-ghc/)

### 2017-7-26
* [Intro=to-UCRT](https://blogs.msdn.microsoft.com/vcblog/2015/03/03/introducing-the-universal-crt/)
* [XSS](https://www.zhihu.com/question/26628342/answer/33572866)
* [Java-NIO](http://blog.csdn.net/foart/article/details/47614841)
* [Strict-aliasing-is-really-bad](https://blog.regehr.org/archives/1307)
* [memset-avoid-side-channel-attack](http://git.musl-libc.org/cgit/musl/tree/src/string/memset.c#n33)
* [iOS-security](https://zhuanlan.zhihu.com/p/28068886)
* [Distribute-source-cpp-code](https://hackernoon.com/6-reasons-why-we-distribute-c-libraries-as-source-code-2dc614d5ef1e)
* [ADL-for-old-style-enumeration-template](https://stackoverflow.com/questions/45307231/how-to-get-enum-value-from-enum-type)
* [bool-vs-void*-in-operator-if](https://stackoverflow.com/questions/45322138/bool-vs-void-casts-on-the-same-object)

### 2017-7-29
* [Evolution of trust](http://ncase.me/trust/)
* [GHC-warnings-you-should-use](https://functor.tokyo/blog/2017-07-28-ghc-warnings-you-should-enable)
* [Herb-Metaclasses](https://www.youtube.com/watch?v=6nsyX37nsRs)
* [NTFS-MFT-joke](https://arstechnica.com/information-technology/2017/05/in-a-throwback-to-the-90s-ntfs-bug-lets-anyone-hang-or-crash-windows-7-8-1/)

### 2017-7-30
* [Build-a-8bit-computer-from-scratch](https://eater.net/8bit/)
* [The purpose of memory_order_consume](http://preshing.com/20140709/the-purpose-of-memory_order_consume-in-cpp11/)
* [modify-python-grammar-ast-flowpython](https://github.com/thautwarm/flowpython)
* [Using Enum Classes as Bitfields](https://accu.org/index.php/journals/2228)
* [Shor-algorithm](http://www.scottaaronson.com/blog/?p=208)
* [Throw-exception-through-SEH](https://blogs.msdn.microsoft.com/oldnewthing/20170728-00/?p=96706)

### 2017-7-31
* [Python-raw-string-with-ending-\\](https://stackoverflow.com/questions/647769/why-cant-pythons-raw-string-literals-end-with-a-single-backslash/19654184#19654184)
* [fprintf](http://pubs.opengroup.org/onlinepubs/9699919799/functions/printf.html)
* [Computed goto for efficient dispatch tables](http://eli.thegreenplace.net/2012/07/12/computed-goto-for-efficient-dispatch-tables#id4)
* [try-else-python](https://stackoverflow.com/questions/8130355/whats-try-else-good-for-in-python)
* [Elm-in-production](https://charukiewi.cz/posts/elm/)
* [LaTeX-math-in-Office](https://blogs.msdn.microsoft.com/murrays/2017/07/30/latex-math-in-office/)

### 2017-8-1
* [unlifted-unboxed-ghc](https://stackoverflow.com/questions/39985296/what-are-lifted-and-unlifted-product-types-in-haskell)
* [levity-polymorphism](https://stackoverflow.com/questions/35318562/what-is-levity-polymorphism/35320729#35320729)
* [UnLiftedDataTypes](https://ghc.haskell.org/trac/ghc/wiki/UnliftedDataTypes)
* [CEK](https://cs.umd.edu/class/summer2015/cmsc330/material/cek/)
* [*-in-Haskell](https://stackoverflow.com/questions/27095011/what-exactly-is-the-kind-in-haskell/27095012#27095012)
* [What should the ISO C++ Standards Committee be doing?](https://isocpp.org/blog/2017/07/what-should-the-iso-cpp-standards-committee-be-doing)
* [Computed-GOTO-gcc](https://github.com/python/cpython/blob/master/Python/ceval.c#L714)
* [C++-metaprogramming-HTML-parser](https://github.com/rep-movsd/see-phit)

### 2017-8-2
* [libc++-overload-lvalue-ref-move-element-in-vector](https://stackoverflow.com/questions/30695810/libc-difference-between-vectorinsert-overloads)
* [RAII-IncreaseAnnotator](https://code.woboq.org/llvm/libcxx/include/vector.html#std::__1::vector::__RAII_IncreaseAnnotator)
* [boost-multi-index-implementation](https://stackoverflow.com/questions/4206349/how-boost-multi-index-is-implemented)
* [qualified-polymorphism-vs-bounded-polymorphism(subtyping)](https://stackoverflow.com/questions/11474754/what-are-types-with-type-constraints-called)
* + typeclass 约束的 instance 是 type，interface 约束的是 value
* [why-no-subtyping-haskell](https://www.reddit.com/r/haskell/comments/423o0c/why_no_subtypingsubtype_polymorphism/)
* [Bottom-up Type Annotation with the Cofree Comonad](https://brianmckenna.org/blog/type_annotation_cofree)
* [lens-over-tea](https://artyom.me/lens-over-tea-1)

### 2017-8-3
* [Floating-math-not-associative](https://stackoverflow.com/questions/6430448/why-doesnt-gcc-optimize-aaaaaa-to-aaaaaa?rq=1)
* [Microsoft didn’t sandbox Windows Defender, so I did](https://blog.trailofbits.com/2017/08/02/microsoft-didnt-sandbox-windows-defender-so-i-did/)
* [non-lexicla-scope-rust](https://zhuanlan.zhihu.com/p/25429005)
* [votaile-C-abstract-machine](https://blog.regehr.org/archives/28)
* [volatile-setjump](https://stackoverflow.com/questions/7996825/why-volatile-works-for-setjmp-longjmp)
* [multithread-volatile-useless](https://software.intel.com/en-us/blogs/2007/11/30/volatile-almost-useless-for-multi-threaded-programming/)
* [How I implemented my own crypto](http://loup-vaillant.fr/articles/implemented-my-own-crypto)
* [function-try-block](https://stackoverflow.com/questions/5612486/when-is-a-function-try-block-useful)


### 2017-8-4
* [power-of-set-on-another-set-map-function](https://math.stackexchange.com/questions/129301/whats-the-meaning-of-a-set-to-the-power-of-another-set)
* [typedef-as-storage-class-specifier](https://stackoverflow.com/questions/8674236/is-typedef-a-storage-class-specifier)
* [lambda-function-list-or-tuple-deep-or-shadow-copy](https://stackoverflow.com/questions/6076270/python-lambda-function-in-list-comprehensions)
* [metaclass-summary-cpp](http://www.fluentcpp.com/2017/08/04/metaclasses-cpp-summary/)


### 2017-8-5
* [The constraint trick for instances-Haskell](http://chrisdone.com/posts/haskell-constraint-trick)
* [getch-in-linux](https://stackoverflow.com/questions/7469139/what-is-equivalent-to-getch-getche-in-linux)
* [kbhit-in-linux](https://stackoverflow.com/questions/29335758/using-kbhit-and-getch-on-linux)


### 2017-8-6
* [CppTO20-vcblog](https://blogs.msdn.microsoft.com/vcblog/2017/07/28/trip-report-evolution-working-group-at-the-summer-iso-c-standards-meeting-toronto/)
* [Scott-encoding-for-haskell-type](https://kseo.github.io/posts/2016-12-13-scott-encoding.html)
* [Church-and-scott](https://www.zhihu.com/question/39930042)
* [Church-encoding-for-hasekll-type](http://www.cbdumas.com/posts/church_encoding.html)
* [Bootloader and Low-Level Programming Tutorial](https://www.apriorit.com/dev-blog/66-develop-boot-loader)
* [INTRO TO LINUX FORENSICS](https://countuponsecurity.com/2017/04/12/intro-to-linux-forensics/)


### 2017-8-7
* [How-do-malloc-free-work](https://stackoverflow.com/questions/1119134/how-do-malloc-and-free-work)
* [SRP](https://en.wikipedia.org/wiki/Single_responsibility_principle)
* [constexpr-counter](https://segmentfault.com/n/1330000008559854)
* [SMP-+1/cpp](https://zhuanlan.zhihu.com/p/24928414)
* [SMP-1/cpp](https://zhuanlan.zhihu.com/p/24835482)
* [SMP-2/cpp](https://zhuanlan.zhihu.com/p/24910829)
* [mmap/linux](http://www.cnblogs.com/huxiao-tee/p/4660352.html)
* [ECS-entity-component-system](https://en.wikipedia.org/wiki/Entity%E2%80%93component%E2%80%93system)
* [pmr-polymorphic_allocator/Cpp](https://stackoverflow.com/questions/38010544/polymorphic-allocator-when-and-why-should-i-use-it)
* [synchronized/Cpp](https://stackoverflow.com/questions/45487135/what-advantage-does-the-new-feature-synchronized-block-in-c-provide)


### 2017-8-8
* [gcc-generate-ud2/udf-for-ub](https://twitter.com/blackhole0173/status/306286002215993346)
* [rm-rf-and-UEFI](https://www.zhihu.com/question/60703547)
* [WindowsNT-undocumented](http://www.stratigery.com/nt.sekrits.html)
* [Include-a-file-as-string/Cpp](https://stackoverflow.com/questions/410980/include-a-text-file-in-a-c-program-as-a-char)
* [Add-static-resource-to-executable](https://stackoverflow.com/questions/4864866/c-c-with-gcc-statically-add-resource-files-to-executable-library)
* [Raw-string-tokens(tokenization)-before-preprocessor/Cpp](https://stackoverflow.com/questions/30997129/in-c11-what-should-happen-first-raw-string-expansion-or-macros)
* [include-a-file-as-a-string-and-a-code](https://stackoverflow.com/questions/28103029/how-to-include-a-file-in-cpp-as-both-a-string-and-code)

### 2017-8-9
* [in_constexpr](http://saadahmad.ca/detecting-evaluation-context-inside-constexpr-functions/)
* [__attribute__((constructor))](https://stackoverflow.com/questions/2053029/how-exactly-does-attribute-constructor-work)
* [Nmap-cheat-sheet](https://www.stationx.net/nmap-cheat-sheet/)
* [Haskell-libgmp](http://www.well-typed.com/blog/32/)


### 2017-8-10
* [Python-code-object](https://late.am/post/2012/03/26/exploring-python-code-objects.html)
* [How-python-lookup-work](https://stupidpythonideas.blogspot.com/2015/12/how-lookup-works.html)
* [Performance profiling with ghc-events-analyze](http://www.well-typed.com/blog/2014/02/ghc-events-analyze/)
* [covariance-contravariance](https://www.fpcomplete.com/blog/2016/11/covariance-contravariance)
* [协变-逆变](https://zh.wikipedia.org/wiki/%E5%8D%8F%E5%8F%98%E4%B8%8E%E9%80%86%E5%8F%98)
* [Beautiful-concurrency/Haskell](https://www.schoolofhaskell.com/school/advanced-haskell/beautiful-concurrency)
* [virtual-inheritance-for-interface](https://stackoverflow.com/questions/4605556/when-virtual-inheritance-is-a-good-design)
* [Haskell-for-C-programmer](http://www.haskellforall.com/2012/01/haskell-for-c-programmers-for-loops.html)
* [unsigned-vs-signed-performance](https://stackoverflow.com/questions/4712315/performance-of-unsigned-vs-signed-integers)
* [VPN-report](https://vpnreport.org/)

### 2017-8-11
* [Writing Performant Haskell (1 of 6): Intro](https://jship.github.io/posts/2017-08-09-writing-performant-haskell-part-1.html)
* [Windows-devices-for-different-port](https://blogs.msdn.microsoft.com/oldnewthing/20041110-00/?p=37343)
* [Learn-GHC-core-by-example](http://alpmestan.com/posts/2013-06-27-ghc-core-by-example-episode-1.html)
* [Learn-STG-by-example](https://ghc.haskell.org/trac/ghc/wiki/Commentary/Compiler/GeneratedCode)


### 2017-8-12 - 2017-8-14
* [Intro-to-compiler](https://nicoleorchard.com/blog/compilers)
* [LaTeX-fetish](http://www.danielallington.net/2016/09/the-latex-fetish/)
* [VS-15.3-fix](https://blogs.msdn.microsoft.com/vcblog/2017/08/11/c17-features-and-stl-fixes-in-vs-2017-15-3/)
* [subtyping-vs-inheritance](https://www.zhihu.com/question/57486254/answer/153071178)
* [four-month-in-Haskell](https://lexi-lambda.github.io/blog/2016/06/12/four-months-with-haskell/)
* [MonadTransformer-free](https://ocharles.org.uk/blog/posts/2016-01-26-transformers-free-monads-mtl-laws.html)
* [parser-in-Haskell-from-scratch](https://stackoverflow.com/questions/20660782/writing-a-parser-from-scratch-in-haskell)
* [仙境中的Haskell](https://zhuanlan.zhihu.com/p/21371274)
* [形式化方法](https://mp.weixin.qq.com/s?__biz=MzI5MjEyNjI5NQ==&mid=2650112204&idx=1&sn=75ca08855d424b1344eafab2ae453762&chksm=f4070bf4c37082e24a8864d224967536dd952267cc122a201c442ec1c8a55013aaf95c7095a1&mpshare=1&scene=1&srcid=0808Q2Ix24T10nDErSMDn6vB&pass_ticket=it4i3GHXmDHfTHlVq%2Fhsp2Rm7ab0udS%2BI%2BxwzHDYEMenOMUQDam7S34PJ1Vl560%2B#rd)
* [fs-gs-register](https://stackoverflow.com/questions/10810203/what-is-the-fs-gs-register-intended-for)
* [extended-template-literal](https://gcc.gnu.org/ml/gcc-patches/2013-04/msg00998.html)
* [JIT-in-JVM](https://zhuanlan.zhihu.com/p/28476709)
* [fibonacci-problem](https://www.zhihu.com/question/63700400/answer/212458501)

### 2017-8-15 - 2017-8-21
* [gcc-template-access-checking-error](https://zhuanlan.zhihu.com/p/28480569)
* [PyPy-vs-Cpython](https://www.zhihu.com/question/19588346)
* [Leetcode-answer](https://zhuanlan.zhihu.com/p/25697275)
* [Debug-method](https://www.zhihu.com/question/61826619)
* [shared_ptr-thread-safety-issue](https://stackoverflow.com/questions/9127816/stdshared-ptr-thread-safety-explained)
* [JVM-finalizer](https://zhuanlan.zhihu.com/p/28562588)
* [内存对齐](http://blog.csdn.net/markl22222/article/details/38051483)
* [typeid-implementation](http://blog.csdn.net/markl22222/article/details/10474591)
* [V8-opcode](https://zhuanlan.zhihu.com/p/28590489)
* [Windows-name-path](https://msdn.microsoft.com/en-us/library/windows/desktop/aa365247%28v=vs.85%29.aspx?f=255&MSPPError=-2147217396)
* [golang-scheduler](https://www.zhihu.com/question/20862617)
* [reg-stack-based-vm](http://blog.csdn.net/u012481172/article/details/50904574)
* [reg-stack-based-vm-js](http://www.cnblogs.com/dracohan/p/4354254.html)
* [数据库范式](http://blog.csdn.net/famousdt/article/details/6921622)
* [const_cast-and-repeat-code](https://stackoverflow.com/questions/2673508/correct-usages-of-const-cast)
* [WSABUF-const-problem](http://www.verycomputer.com/5_82adc5abcacdd56d_1.htm)
* [return-type-polymorphism](https://softwareengineering.stackexchange.com/questions/105662/is-return-type-only-polymorphism-in-haskell-a-good-thing)
* [visual-rust-typesystem](http://jadpole.github.io/rust/type-system)
* [rust-trait-object-safety](http://huonw.github.io/blog/2015/01/object-safety/)
* [Rasberry-Pi-for-wireless-route](http://shumeipai.nxez.com/2013/09/11/raspberry-pi-configured-as-a-wireless-router.html)

### 2017-8-22
* [torsors-subtractive](https://ro-che.info/articles/2013-01-08-torsors)
* [Four-ML-and-Python-command-line-parsing](https://thebreakfastpost.com/2015/04/22/four-mls-and-a-python/)
* [torsors-made-easy](http://math.ucr.edu/home/baez/torsors.html)
* [What's-next-in-PL-design](http://graydon2.dreamwidth.org/253769.html)
* [Using C++ Resumable Functions with Libuv](https://blogs.msdn.microsoft.com/vcblog/2017/02/02/using-ibuv-with-c-resumable-functions/)
* [boost-coroutine-implementation](http://ju.outofmemory.cn/entry/57710)
* [copy-elision-and-structure-binding](https://stackoverflow.com/questions/45698326/does-copy-elision-work-with-structured-bindings)
* [string-c_str()-difference-in-03-11](https://stackoverflow.com/questions/45782237/difference-in-c-str-function-specification-between-c03-and-c11)
* [Writing a Concatenative Programming Language: Introduction](https://suhr.github.io/wcpl/intro.html)
* [Zero-GC-in-.NET](http://tooslowexception.com/zero-garbage-collector-for-net-core/)
* [Insiding-V8-js](https://blog.sessionstack.com/how-javascript-works-inside-the-v8-engine-5-tips-on-how-to-write-optimized-code-ac089e62b12e)
* [Zsh-configuration-from-ground-up](https://zanshin.net/2013/02/02/zsh-configuration-from-the-ground-up/)
* [git-https-gnutls-bug](https://stackoverflow.com/questions/13524242/error-gnutls-handshake-failed-git-repository)

### 2017-8-23
* [fix-point-and-Y](https://en.wikipedia.org/wiki/Fixed-point_combinator)
* [implement-Y-in-Haskell](https://stackoverflow.com/questions/4273413/y-combinator-in-haskell)
* [Write Haskell as fast as C: exploiting strictness, laziness and recursion](https://donsbot.wordpress.com/2008/05/06/write-haskell-as-fast-as-c-exploiting-strictness-laziness-and-recursion/)
* [Why-C-code-faster-than-asm](https://stackoverflow.com/questions/40354978/why-is-this-c-code-faster-than-my-hand-written-assembly-for-testing-the-collat)
* [Church-numeral-pred](https://www.zhihu.com/question/64274105)
* [change-name-of-dynamic-shared-lib](https://stackoverflow.com/questions/2759254/how-can-i-change-the-filename-of-a-shared-library-after-building-a-program-that)
* [Inside-a-fast-CSS-engine-quantum](https://hacks.mozilla.org/2017/08/inside-a-super-fast-css-engine-quantum-css-aka-stylo/)
* [MonadFix is Time Travel](http://elvishjerricco.github.io/2017/08/22/monadfix-is-time-travel.html)

### 2017-8-24
* [D-as-better-C](http://dlang.org/blog/2017/08/23/d-as-a-better-c/)
* [Gcc-Low-IR](https://kristerw.blogspot.com/2017/08/gcc-low-level-ir-and-basic-code.html)
* [metaclass-summary](https://www.fluentcpp.com/2017/08/04/metaclasses-cpp-summary/)
* [metaclass-strong-typing](https://www.fluentcpp.com/2017/08/08/metaclasses-ultimate-answer-strong-typing-c/)
* [Offline-only](https://chris.bolin.co/offline/)

### 2017-8-25
* [Haskell-printf](https://stackoverflow.com/questions/7828072/how-does-haskell-printf-work)
* [Quine](http://www.nyx.net/~gthompso/quine.htm)

### 2017-8-29
* [exploit-guide-corealen-team](https://www.corelan.be/index.php/2009/07/19/exploit-writing-tutorial-part-1-stack-based-overflows/)
* [improve-python-to-julia-performance](https://www.ibm.com/developerworks/community/blogs/jfp/entry/Python_Meets_Julia_Micro_Performance?lang=en)

### 2017-8-30
* [CPS](https://zhuanlan.zhihu.com/p/22721931)
* [Scala-Form](https://www.zhihu.com/question/64568400/answer/222581715)
* [Div-0-and-SEH](https://www.zhihu.com/question/58565645)
* [bad-cmov-linus](http://yarchive.net/comp/linux/cmov.html)
* [gcc-O3-slower-than-O2](https://stackoverflow.com/questions/28875325/gcc-optimization-flag-o3-makes-code-slower-then-o2)
* [lineno-remove-in-Py3.6](https://www.zhihu.com/question/64616810/answer/222686143)
* [no-IOT-in-Haskell](https://stackoverflow.com/questions/13056663/why-is-there-no-io-transformer-in-haskell)

### 2017-8-31
* [crypto-guide](https://mycrypto.guide/)
* [What's Functional Programming All About?](http://www.lihaoyi.com/post/WhatsFunctionalProgrammingAllAbout.html)
* [OOP-datatype-to-Haskell](https://stackoverflow.com/questions/45974033/restructuring-an-oop-datatype-into-haskell-types)
* [golang-asm](http://davidwong.fr/goasm/)

### 2017-9-1
* [detecting-debugger-by-int3-behavior](http://www.triplefault.io/2017/08/detecting-debuggers-by-abusing-bad.html)
* + 0xCD 0x03 not work in Windows (《软件调试》)
* [ub-cause-nevercall-run](http://hn.premii.com/#/comments/15147335)
* [redesign-python-namedtuple](https://lwn.net/Articles/731423/)
* [package-fishing-pypi](http://blog.fatezero.org/2017/06/01/package-fishing/)
* [inactive-union](https://stackoverflow.com/questions/11373203/accessing-inactive-union-member-and-undefined-behavior)
* [deque-vector-of-fixed-array](https://stackoverflow.com/questions/2297164/stl-deque-accessing-by-index-is-o1)
* [ub-no-execution](https://stackoverflow.com/questions/24186681/does-an-expression-with-undefined-behaviour-that-is-never-actually-executed-make)

### 2017-9-2
* [triple-fault](https://www.cs.cmu.edu/~410/doc/triple.html)
* [What is GDT/LDT/IDT/TSS](http://chunqili.blogspot.com/2013/06/what-is-gdtldtidttss.html)
* [CreateFile-hidden-attribute](https://stackoverflow.com/questions/13215716/ioerror-errno-13-permission-denied-when-trying-to-open-hidden-file-in-w-mod?rq=1)
* [alignas-and-new](https://stackoverflow.com/questions/15511909/does-the-alignas-specifier-work-with-new)

### 2017-9-3
* [GTK-video-in-Haskell](https://lettier.github.io/posts/2017-08-30-haskell-gtk-video-player.html)
* [.Net-Standard](https://msdn.microsoft.com/en-us/magazine/mt842506?f=255&MSPPError=-2147217396)
* [std::invoke-constexpr](https://www.zhihu.com/question/64644157)
* [Config-problem-Haskell](https://www.zhihu.com/question/58557828)
* [mtl-is-not-MonadTransform](https://blog.jle.im/entry/mtl-is-not-a-monad-transformer-library)
* [init-list](https://stackoverflow.com/questions/45939190/vector-does-not-convert-brace-encloser-list/45939475)
* [0.30000000004](http://0.30000000000000004.com/)
* [.long func_name](https://stackoverflow.com/questions/14538075/meaning-long-function-name-in-assembly-language)

### 2017-9-4
* [Intro-to-HTML-Component](http://blog.mecheye.net/2017/08/introduction-to-html-components/)
* [Binary data visualization](https://codisec.com/binary-data-visualization/)
* [The Sweetness of Cake & .NET Core](https://medium.com/@pielegacy/the-sweetness-of-cake-net-core-cb3dfaabb60f)
* [Simple-C++-Reflection-with-CMake](http://onqtam.com/programming/2017-09-02-simple-cpp-reflection-with-cmake/)
* [Value-Category-in-Cpp17](https://medium.com/@barryrevzin/value-categories-in-c-17-f56ae54bccbe)
* [Interpolated-string-ternary](https://stackoverflow.com/questions/31844058/how-to-use-the-ternary-operator-inside-an-interpolated-string)

### 2017-9-6
* [Flash-Dumping](https://blog.quarkslab.com/flash-dumping-part-i.html)
* [Cpp17-is-formally-approved](https://herbsutter.com/2017/09/06/c17-is-formally-approved/)
* [{}-to-std::nullptr_t](https://stackoverflow.com/questions/46082318/why-converted-to-stdnullptr-t-in-first-order)
* [How Python does Unicode](http://www.b-list.org/weblog/2017/sep/05/how-python-does-unicode/)

### 2017-9-7
* [new-Python-CAPI](https://haypo.github.io/new-python-c-api.html)
* [Neural Language Modeling From Scratch](http://ofir.io/Neural-Language-Modeling-From-Scratch/)
* [LLVM5.0-release-note](http://releases.llvm.org/5.0.0/docs/ReleaseNotes.html)

### 2017-9-8
* [assembly-va-pa-mmu](https://reverseengineering.stackexchange.com/questions/5911/virtual-address-translation-in-assembly-language)
* [Lisp-Machine](https://www.youtube.com/watch?v=T1QlEJ-2Gho)
* [ARMv7-finally-divison](https://community.arm.com/processors/b/blog/posts/divide-and-conquer)
* [Program-Library-HOWTO](http://tldp.org/HOWTO/Program-Library-HOWTO/index.html)
* [gcc-finstrument-functions](http://blog.csdn.net/iamljj/article/details/5886492)
* [Implementing strcmp, strlen, and strstr using SSE 4.2 instructions](https://www.strchr.com/strcmp_and_strlen_using_sse_4.2)
* [vector<bool>](https://isocpp.org/blog/2012/11/on-vectorbool)

### 2017-9-9
* [max-thread-cgroup](https://zhuanlan.zhihu.com/p/29192624)

### 2017-9-10
* [HKT-in-Rust](https://zhuanlan.zhihu.com/p/29021140)
* [Prime-sieve-in-Haskell](https://stackoverflow.com/questions/11768958/prime-sieve-in-haskell)
* [Dynamic-MST](https://zhuanlan.zhihu.com/p/28644481)
* [Build-a-PL](http://hn.premii.com/#/comments/15171238)
* [Delimited Continuations and Exception](https://gist.github.com/sebfisch/2235780)
* [Unikernel-Intro](http://blog.dongyueweb.com/unikernel:_从不入门到入门.html)
* [OOP-and-Parallel](https://www.zhihu.com/question/19728806)
* [SSO-23-cpp](https://github.com/elliotgoodrich/SSO-23/blob/master/README.md)
* [GHCI-return-Nothing-default-IO](https://stackoverflow.com/questions/45558914/why-does-return-nothing-return-nothing)
* [Js-ASI-one-line-task](https://stackoverflow.com/questions/2846283/what-are-the-rules-for-javascripts-automatic-semicolon-insertion-asi)
* [Compiler-Intro](https://zhuanlan.zhihu.com/p/29148222)
* [gets()-unsafety](https://stackoverflow.com/questions/1694036/why-is-the-gets-function-so-dangerous-that-it-should-not-be-used)
* [Mixing-x86-and-x64](http://blog.rewolf.pl/blog/?p=102)
* [Execute-x64-under-WOW64](https://int0h.wordpress.com/2009/12/24/the-power-of-wow64/)
* [lambda-capture-forwarding-and-universal-reference](https://stackoverflow.com/questions/46118564/alternative-for-stdbind-in-modern-c)
* [LTO-wrapper](https://stackoverflow.com/questions/19807107/what-is-gcc-lto-wrapper)
* [Working-with-binary-Python](http://www.devdungeon.com/content/working-binary-data-python)

### 2017-9-11
* [What's-bad-POSIX-IO](https://www.nextplatform.com/2017/09/11/whats-bad-posix-io/)
* [2-Phase-lookup-come-to-MSVC](https://blogs.msdn.microsoft.com/vcblog/2017/09/11/two-phase-name-lookup-support-comes-to-msvc/)
* [dll-共享节](http://blog.csdn.net/mydreamremindme/article/details/10311075)
* [ARM-immediate-number-encoding](https://alisdair.mcdiarmid.org/arm-immediate-value-encoding/)
* [ARM-constant-expresssion](https://www.bbsmax.com/A/LPdobBE53a/)

### 2017-9-12
* [gcc-optimization-guide](https://stackoverflow.com/questions/14492436/g-optimization-beyond-o3-ofast)
* [fast-io-in-C](http://abhisharlives.blogspot.com/2012/06/really-fast-io-methods-for-programming.html)
* [backslash-in-Cpp-include](https://stackoverflow.com/questions/5790161/is-the-backslash-acceptable-in-c-and-c-include-directives)
* [POSIX-detect](https://stackoverflow.com/questions/11350878/how-can-i-determine-if-the-operating-system-is-posix-in-c)

### 2017-9-13
* [Monoid](https://deque.blog/2017/09/13/monoids-what-they-are-why-they-are-useful-and-what-they-teach-us-about-software/)
* [march-mtune](http://sdf.org/~riley/blog/2014/10/30/march-mtune/)
* [template-template-template](https://stackoverflow.com/questions/6484484/template-template-parameters/6485439#6485439)
* [apostrophe-and-quotation](https://www.cl.cam.ac.uk/~mgk25/ucs/quotes.html)
* [python-__slots__](https://www.chrisbarra.xyz/posts/let-me-introduce-slots/)
* [ARM-conditional-codes](https://community.arm.com/processors/b/blog/posts/condition-codes-1-condition-flags-and-codes)

### 2017-9-14
* [Performance-equation](https://www.d.umn.edu/~gshute/arch/performance-equation.xhtml)

### 2017-9-15-2017-9-17
* [Python并行编程 中文版](http://python-parallel-programmning-cookbook.readthedocs.io/en/latest/index.html)
* [What's-new-in-Py3.7](https://docs.python.org/3.7/whatsnew/3.7.html)
* [Universal-Charset-Detection](http://www-archive.mozilla.org/projects/intl/UniversalCharsetDetection.html)
* [Python-super](https://stackoverflow.com/questions/15896265/python-super-inheritance-and-needed-arguments)
* [Python-dict-implementation](https://www.laurentluce.com/posts/python-dictionary-implementation/)

### 2017-9-18
* [memory-usage-cpp](https://stackoverflow.com/questions/669438/how-to-get-memory-usage-at-run-time-in-c)
* [libstdcxx-allocator](https://gcc.gnu.org/onlinedocs/libstdc++/manual/memory.html#std.util.memory.allocator)
* [rvalue-ref-lvalue-ref-T-overload-resolution](https://stackoverflow.com/questions/17961719/overload-resolution-between-object-rvalue-reference-const-reference)

### 2017-9-19
* [gcc-memory-usage](https://stackoverflow.com/questions/29853981/how-can-i-optimize-gcc-compilation-for-memory-usage)
* [Hindley-Milner-in-Vivint](http://goc.vivint.com/problems/hm)
* [macro-lisp/Rust](https://github.com/JunSuzukiJapan/macro-lisp)
* [CHiso-1](http://cgnail.github.io/academic/lambda-7/)
* [CHiso-Haskell](https://wiki.haskell.org/Curry-Howard-Lambek_correspondence)
* [C++-Allocator](https://zhuanlan.zhihu.com/p/29345773)
* [W3C-DRM-EFF](https://boingboing.net/2017/09/18/antifeatures-for-all.html)
* [crates-io-security](https://users.rust-lang.org/t/security-advisory-for-crates-io-2017-09-19/12960)
* [difference-between-IVT-IDT](https://stackoverflow.com/questions/11540095/what-is-the-difference-between-ivt-and-idt)
* [x86-syscall-better-than-int](https://stackoverflow.com/questions/12806584/what-is-better-int-0x80-or-syscall)
* [x86-syscall-optimization-vDSO](https://en.wikipedia.org/wiki/VDSO)
* [MOVK-example](https://stackoverflow.com/questions/27938768/moving-a-32-bit-constant-in-arm-arch64-register)
* [program-in-memory](http://duartes.org/gustavo/blog/post/anatomy-of-a-program-in-memory/)
* [__builtin_expect](https://stackoverflow.com/questions/15468042/how-far-does-gccs-builtin-expect-go)

### 2017-9-20
* [gcc-prefetch](https://gcc.gnu.org/projects/prefetch.html)
* [PEP-0393-Unicode-flexible-length](https://www.python.org/dev/peps/pep-0393/)
* [wchar_t-Unicode](https://stackoverflow.com/questions/2259544/is-wchar-t-needed-for-unicode-support)
* [syscall-made-by-malloc](https://sploitfun.wordpress.com/2015/02/11/syscalls-used-by-malloc/)
* [computers-are-fast](https://jvns.ca/blog/2014/05/12/computers-are-fast/)
* [Haswell-CPU](https://www.realworldtech.com/haswell-cpu/)
* [XZR-ignore-write](https://community.arm.com/processors/f/discussions/3185/wzr-xzr-register-s-purpose)

### 2017-9-21
* [Python-hash(1)==hash(1.0)](https://stackoverflow.com/questions/32209155/why-can-a-floating-point-dictionary-key-overwrite-an-integer-key-with-the-same-v/32211042#32211042)
* [Python-scope](http://sebastianraschka.com/Articles/2014_python_scope_and_namespaces.html#1-lg---local-and-global-scopes)
* [left-right-hand-matrix](https://ask.helplib.com/1357913)

### 2017-9-22
* [mmap() vs. reading blocks](https://stackoverflow.com/questions/45972/mmap-vs-reading-blocks)
* [Numba-GPU-Python](https://devblogs.nvidia.com/parallelforall/numba-python-cuda-acceleration/)
* [Find-missing-numbers-from-1-N](https://stackoverflow.com/questions/3492302/easy-interview-question-got-harder-given-numbers-1-100-find-the-missing-numbe)
* [register-allocation](https://www.zhihu.com/question/29355187)
* [dyncast](https://github.com/gcc-mirror/gcc/blob/master/libstdc%2B%2B-v3/libsupc%2B%2B/dyncast.cc)
* [FP-Events](https://blog.qfpl.io/posts/reflex/basics/events/)
* [FP-Behavior](https://blog.qfpl.io/posts/reflex/basics/behaviors/)
* [malloc-MT-safety-reentrant](https://stackoverflow.com/questions/855763/is-malloc-thread-safe)
* [TLB-cache-page-miss](https://stackoverflow.com/questions/37825859/cache-miss-a-tlb-miss-and-page-fault)
* [virtual-function-call-assembly](https://stackoverflow.com/questions/4464144/does-c-virtual-function-call-on-derived-object-go-through-vtable)

#### 2017-9-23
* [Link-Cut-Tree](http://blog.csdn.net/Sunshine_cfbsl/article/details/52199415)
* [Bootstrapper](http://www.tldp.org/LDP/LG/issue70/ghosh.html)
* [网络流](http://sunshine-cfbsl.com/2017/02/12/%E5%85%B3%E4%BA%8E%E7%BD%91%E7%BB%9C%E6%B5%81-%EF%BC%88%E8%BD%AC%EF%BC%89/#comment-77)
* [glibc-malloc](https://sploitfun.wordpress.com/2015/02/10/understanding-glibc-malloc/)
* [va-args-overload-last](https://stackoverflow.com/questions/24876550/how-does-overload-resolution-work-with-variadic-functions)
* [PyPI-malicious-package](https://arstechnica.com/information-technology/2017/09/devs-unknowingly-use-malicious-modules-put-into-official-python-repository/)
* [Cpp-Zero-width](https://twitter.com/randal_olson/status/744169075497123840?lang=en)
* [dos2unix-to-stderr](https://stackoverflow.com/questions/24720429/why-does-dos2unix-print-to-stderr/24720454)
* [Intro-to-Webrender](https://mozillagfx.wordpress.com/2017/09/21/introduction-to-webrender-part-1-browsers-today/)

#### 2017-9-24
* [clear_cache](https://stackoverflow.com/questions/35741814/how-does-builtin-clear-cache-work)
* [01背包-伪多项式](https://www.zhihu.com/question/20686504)
* [JS-Emulator](https://gist.github.com/creaktive/978540)
* [What's-new-in-Cpython-0.27](http://blog.behnel.de/posts/whats-new-in-cython-027.html)
* [2-variable-recurrence-generating-function](https://math.stackexchange.com/questions/206158/solving-recurrence-relation-in-2-variables)
* [multivariable-generating-function](http://www.kylem.net/math/recurrence.html)
* [clobber-list-inline-asm](https://stackoverflow.com/questions/15815901/explanation-for-clobber-list-in-extended-gcc-inline-assembly-executing-the-x87-f)
* [parallel-processing-with-Unix](http://www.pixelbeat.org/docs/unix-parallel-tools.html)
* [MathML-is-a-failed-standard](https://www.peterkrautzberger.org/0186/)
* [Basic-category-for-scala-I](https://blog.scalents.com/2017/09/22/basic-category-theory-for-scala-programmers-part-i/)

#### 2017-9-24
* [strrchr-compile-time-BASEFILE](https://stackoverflow.com/questions/8487986/file-macro-shows-full-path)
* [Bessel-glibc](https://www.zhihu.com/question/52901649/answer/132560490)
* [Paxos-intro](https://zhuanlan.zhihu.com/p/29522440)
* [fast-output-cpp](https://stackoverflow.com/questions/1924530/mixing-cout-and-printf-for-faster-output/1926432#1926432)
* [C-externel-inline](https://www.zhihu.com/question/65633138)
* [C-Type](https://zhuanlan.zhihu.com/p/25380214)
* [Cat-Initial-Algebra](https://zhuanlan.zhihu.com/p/24161398)
* [ML-derivation-type-unification](https://zhuanlan.zhihu.com/p/28300506)
* [Algorithm-W-Step-by-Step](https://zhuanlan.zhihu.com/p/26076902)
* [C++-nested-exception-dtor](https://stackoverflow.com/questions/37227300/why-doesnt-c-use-stdnested-exception-to-allow-throwing-from-destructor)
* [Precise-GC-by-Stateful-Metaprogramming](https://medium.com/@bhuztez/precise-garbage-collection-for-c-with-stateful-metaprogramming-726c7b3972fd)
* [Garbage Collection for Python](http://arctrix.com/nas/python/gc/)
* [Emulate GLSL in C++ with stateful metaprogramming](https://medium.com/@bhuztez/emulate-glsl-in-c-with-stateful-metaprogramming-e77640d10d4d)
* [Emulate borrow checker in C++ with stateful metaprogramming](https://medium.com/@bhuztez/emulate-borrow-checker-in-c-with-stateful-metaprogramming-db4b5e94449f)
* [Notation as a Tool of Thought-Convolution](http://www.jsoftware.com/papers/tot.htm)
* [Python-closure-1](https://stackoverflow.com/questions/14413946/what-exactly-is-contained-within-a-obj-closure/14414638#14414638)
* [Python-closure-2](https://stackoverflow.com/questions/26094700/cell-contents-in-python-closure/26094746#26094746)
* [Comparison-of-NTP](https://chrony.tuxfamily.org/comparison.html)
* [Python-MRO-1](http://xymlife.com/2016/05/22/python_mro/)
* [Python-MRO-2](https://laike9m.com/blog/li-jie-python-super,70/)
* [Graphviz](https://www.worthe-it.co.za/programming/2017/09/19/quick-introduction-to-graphviz.html)

#### 2017-9-25
* [Linux-C10K](https://www.urbanairship.com/blog/linux-kernel-tuning-for-c500k)
* [gcc-get-overflow](https://stackoverflow.com/questions/2340259/how-to-turn-off-gcc-compiler-optimization-to-enable-buffer-overflow)
* [Intel-i9-Review](https://www.anandtech.com/show/11839/intel-core-i9-7980xe-and-core-i9-7960x-review)
* [Hooking-LuaJIT](https://nickcano.com/hooking-luajit/)
* [Aggregation-in-Haskell](http://tech.frontrowed.com/2017/09/22/aggregations/)
* [SML-and-Ocaml](http://adam.chlipala.net/mlcomp/)
* [let-vs-let*](https://stackoverflow.com/questions/15003518/confused-by-the-difference-between-let-and-let-in-scheme)
* [Pierce-Law-call/cc](https://www.zhihu.com/question/21954238)

#### 2017-9-26
* [falign-gcc](https://stackoverflow.com/questions/19470873/why-does-gcc-generate-15-20-faster-code-if-i-optimize-for-size-instead-of-speed)
* [Omit-the-frame-pointer](https://stackoverflow.com/questions/1942801/when-should-i-omit-the-frame-pointer)
* [Link-register-and-Frame-pointer](https://stackoverflow.com/questions/15752188/arm-link-register-and-frame-pointer)
* [Dijkstra-with-negative-edge](https://www.zhihu.com/question/21620069)
* [BL-in-arm-ins](https://stackoverflow.com/questions/34091898/bl-instruction-arm-how-does-it-work)
* [Abseil-cpp-google](https://opensource.googleblog.com/2017/09/introducing-abseil-new-common-libraries.html)
* [ARM-C-Calling-Convention](https://stackoverflow.com/questions/261419/arm-to-c-calling-convention-registers-to-save)
* [permutation-python](https://stackoverflow.com/questions/104420/how-to-generate-all-permutations-of-a-list-in-python)
* [You-are-not-expect-to-understand-pdp-linux](https://www.bell-labs.com/usr/dmr/www/odd.html)

#### 2017-9-27
* [.NET-runtime](https://www.hanselman.com/blog/TheBookOfTheRuntimeTheInternalsOfTheNETRuntimeThatYouWontFindInTheDocumentation.aspx)
* [Rust-TiKV-why](https://pingcap.github.io/blog/2017/09/26/whyrust/)
* [Free-Monad-harmful](https://markkarpov.com/post/free-monad-considered-harmful.html)
* [TreeListRecursion](http://cslibrary.stanford.edu/109/TreeListRecursion.html)
* [STL-thread-safety](https://stackoverflow.com/questions/12931787/c11-stl-containers-and-thread-safety)

#### 2017-9-28
* [Underhanded-Rust-contest](http://blog.community.rs/underhanded/2016/12/15/underhanded-rust.en-US.html)
* [Microsoft-SAL(source-code-annotation-language)](https://docs.microsoft.com/en-us/visualstudio/code-quality/understanding-sal)
* [Decision Trees Are Free Monads](http://clathomasprime.github.io/hask/freeDecision)
* [Python-get-set-attribute](https://stackoverflow.com/questions/14787334/confused-with-getattribute-and-setattribute-in-python/14787509)
* [__get__-and-__set__](https://stackoverflow.com/questions/3798835/understanding-get-and-set-and-python-descriptors/34554353)
* [Knapsack-NPC](https://www.zhihu.com/question/20686504/answer/230840120)
* [C++-POD-I](https://zhuanlan.zhihu.com/p/29734547)
* [C++-POD-II](https://zhuanlan.zhihu.com/p/29746508)
* [Wiener-RSA-attack](https://sagi.io/2016/04/crypto-classics-wieners-rsa-attack/)
* [Derbycon-2017-writeup](https://labs.nettitude.com/blog/derbycon-2017-ctf-write-up/)
* + tar with symbol link

#### 2017-9-29
* [Floating-point-visually-explained](http://fabiensanglard.net/floating_point_visually_explained/)
* [Call-by](https://courses.cs.washington.edu/courses/cse341/98sp/general/parameters.html)
* [Call-by-VResult-Ref](https://stackoverflow.com/questions/32794008/call-by-reference-and-call-by-value-result)

#### 2017-9-30
* [Visualize-Ruby-Heap](http://tenderlovemaking.com/2017/09/27/visualizing-your-ruby-heap.html)
* [Top-10-Py-Sept](https://medium.mybridge.co/python-top-10-articles-for-the-past-month-v-sep-2017-e42c26816ab9)
* [remove-last-\n-POSIX](https://stackoverflow.com/questions/1654021/how-can-i-delete-a-newline-if-it-is-the-last-character-in-a-file)
* [C-extern-static-global-variable](https://stackoverflow.com/questions/11055802/static-and-extern-global-variables-in-c-and-c)

#### 2017-10-1
* [merge-string-literal](https://stackoverflow.com/questions/6281835/how-do-c-compilers-merge-identical-string-literals)
* [successful-git-branching](http://nvie.com/posts/a-successful-git-branching-model/)
* [Alice-in-Python-projectland](https://veekaybee.github.io/2017/09/26/python-packaging/)
* [Attacking-Bluetooth-BLE](https://www.pentestpartners.com/security-blog/screwdriving-locating-and-exploiting-smart-adult-toys/)
* [ARMv8-vs-v7](https://community.arm.com/cn/f/discussions/2471/armv7-armv8)

#### 2017-10-2
* [Diminishing returns of static typing](https://blog.merovius.de/2017/09/12/diminishing-returns-of-static-typing.html)

#### 2017-10-3
* [rbp-4-clang-implicit-return-from-main](https://stackoverflow.com/questions/31149806/why-is-0-moved-to-stack-when-using-return-value)
* [Build-a-CPU-with-Haskell](http://yager.io/CPU/CPU1.html)
* [Strong-weak-global-gcc](https://leondong1993.github.io/2017/04/15/strong-weak-symbol/)
* [weak-symbol-uninitialized-global-tentative-definition-Appendix-J](https://stackoverflow.com/questions/3691835/why-uninitialized-global-variable-is-weak-symbol)
* [branch-return-address](https://community.arm.com/processors/b/blog/posts/branch-and-call-sequences-explained)
* [Are-switch-jump-table-the-fastest](http://www.cipht.net/2017/10/03/are-jump-tables-always-fastest.html)
* [A-lesson-in-shortcuts](https://plus.google.com/+RobPikeTheHuman/posts/R58WgWwN9jp)

#### 2017-10-4
* [Reverse-trickbot](https://qmemcpy.github.io/post/reverse-engineering-malware-trickbot-part-2-loader)
* [CppCon2017-Trip-Report](https://deque.blog/2017/10/04/my-cppcon-2017-trip-report-10-great-talks-to-watch-and-learn-from/)
* [Useful-gcc-warning-options-not-by-Wall](https://kristerw.blogspot.com/2017/09/useful-gcc-warning-options-not-enabled.html)
* [Interactive-vim](http://www.openvim.com/)
* [Determine-word-size](https://stackoverflow.com/questions/2301007/determine-word-size-of-my-processor)
* [From-design-patterns-to-Category-theory](http://blog.ploeh.dk/2017/10/04/from-design-patterns-to-category-theory/)
* [An Internship on Laziness](https://v8project.blogspot.com/2017/10/lazy-unlinking.html)

#### 2017-10-5
* [why-python-not-del-large-object](http://effbot.org/pyfaq/why-doesnt-python-release-the-memory-when-i-delete-a-large-object.htm)
* [py-ctypes-tutorial](http://starship.python.net/crew/theller/ctypes/tutorial.html)


#### 2017-10-6 - 2017-10-8
* [Visual-sorting](https://caspervonb.github.io/toneofsorting/)
* [Rust-container-cheat-sheet](https://www.reddit.com/r/rust/comments/74yrdp/rust_container_cheat_sheet_reposted/)
* [C++-compiler-bench-mark](https://imagine-rt.blogspot.com/2017/10/c-compiler-benchmarks-v2.html)
* [Security.txt](https://securitytxt.org/)
* [Learn-NoSQL](http://hn.premii.com/#/comments/15427932)
* [Visual-ML-dataset](https://github.com/PAIR-code/facets)
* [LivePython](https://github.com/agermanidis/livepython)
* [Runtime-bound-decidable?](https://cstheory.stackexchange.com/questions/5004/are-runtime-bounds-in-p-decidable-answer-no)

#### 2017-10-9 - 2017-10-10
* [printf-long-long](https://stackoverflow.com/questions/6400180/how-to-printf-long-long)
* [CSV-injection](http://georgemauer.net/2017/10/07/csv-injection.html)
* [TrickBot-reverse-loader](http://qmemcpy.io/post/reverse-engineering-malware-trickbot-part-2-loader)
* [TrickBot-reverse-core](http://qmemcpy.io/post/reverse-engineering-malware-trickbot-part-3-core)
* [Linux-Windows-driver-difference](https://linux.cn/article-7943-1.html)
* [Hello-world-without-...](https://www.zhihu.com/question/66088898/answer/238099435)
* [Sequence-point-in-printf-%n](https://stackoverflow.com/questions/34637712/sequence-points-in-printf/34637823#34637823)
* [SIMD-via-C#](https://zhuanlan.zhihu.com/p/29842129)
* [Python-exec-2-3-change-global](https://stackoverflow.com/questions/12484706/assignment-order-matters-unexpectedly-with-exec-expr-in-globals-locals/12484830#12484830)
* [ARM-naming-AArch-Thumb](https://stackoverflow.com/questions/28669905/arm-thumb-and-thumb-2-instructions-confusion/28670713#28670713)
* [MSVC-BitScan-intrinin](https://stackoverflow.com/questions/355967/how-to-use-msvc-intrinsics-to-get-the-equivalent-of-this-gcc-code/20468180#20468180)
* [log2-bsr](https://stackoverflow.com/questions/994593/how-to-do-an-integer-log2-in-c/994709#994709)
* [Rust-to-Cpp](https://github.com/bhuztez/porus)
* [gcc-fPIC](https://stackoverflow.com/questions/5311515/gcc-fpic-option)
* [Intel-Tick-Tock](https://zh.m.wikipedia.org/zh-hans/Intel_Tick-Tock)
* [Not-join-on-thread-terminate](https://stackoverflow.com/questions/27392743/c11-what-happens-if-you-dont-call-join-for-stdthread/27392989#27392989)
* [Tensorflow-sucks](http://nicodjimenez.github.io/2017/10/08/tensorflow.html)
* [Hack-CupHead-Collision-check](https://www.youtube.com/watch?v=6B-QN8GFxrI)
* [LEARNABLE PROGRAMMING-Bret-Victor](http://worrydream.com/LearnableProgramming/)
* [Whole-web-at-max-FPS](https://hacks.mozilla.org/2017/10/the-whole-web-at-maximum-fps-how-webrender-gets-rid-of-jank/)
* [iOS-steal-password-by-asking](https://krausefx.com/blog/ios-privacy-stealpassword-easily-get-the-users-apple-id-password-just-by-asking)
* [Windows-NT-overview-no-runtime-but-cpp](https://technet.microsoft.com/library/cc767881.aspx)
* [cpp-in-jemalloc](https://lists.freebsd.org/pipermail/freebsd-current/2017-October/067109.html)
* [Macro-less-code-exec-in-MsWord](https://sensepost.com/blog/2017/macro-less-code-exec-in-msword/)
* [Implement-TCO](https://stackoverflow.com/questions/6003037/what-are-some-good-ways-of-implementing-tail-call-elimination)
* [gcc-fPIE-ASLR](https://stackoverflow.com/questions/2463150/fpie-position-independent-executable-option-gcc-ld/5030518#5030518)
* [Disable-Intel-IME](https://wiki.gentoo.org/wiki/Sakaki%27s_EFI_Install_Guide/Disabling_the_Intel_Management_Engine)
* [Playing-APK-Golf](https://fractalwrench.co.uk/posts/playing-apk-golf-how-low-can-an-android-app-go/)
* [NF-HNF-WHNF](https://stackoverflow.com/questions/6872898/haskell-what-is-weak-head-normal-form)
* [return-unique_ptr](https://stackoverflow.com/questions/4316727/returning-unique-ptr-from-functions)
* [propagate_on_xxx](https://stackoverflow.com/questions/27471053/example-usage-of-propagate-on-container-move-assignment)
* [Cpp-exception-from-SEH](https://blogs.msdn.microsoft.com/oldnewthing/20170728-00/?p=96706)
* [selenium-switch-iframe](https://stackoverflow.com/questions/37687149/how-to-switch-to-iframe-in-selenium)

#### 2017-10-11
* [slow-power-glibc](http://entropymine.com/imageworsener/slowpow/)
* [DLL-best-practice](https://msdn.microsoft.com/en-us/library/windows/desktop/dn633971.aspx)
* [Killing-Module-TS](https://izzys.casa/posts/millennials-are-killing-the-modules-ts.html)
* [Little-story-about-the-yes-Linux-command](https://matthias-endler.de/2017/yes/)
* [implicit-constexpr-virtual-bug](https://stackoverflow.com/questions/46696247/implicitly-virtual-constexpr-function)
* [phantom-type-alignment-not layout-compatitible](https://stackoverflow.com/questions/46425250/does-a-phantom-type-have-the-same-alignment-as-the-original-one)

#### 2017-10-12
* [Rust-1.21](https://blog.rust-lang.org/2017/10/12/Rust-1.21.html)
* [git-bomb](https://kate.io/blog/git-bomb/)
* [Kernel-ASLR-and-amd64](http://blog.netbsd.org/tnf/entry/kernel_aslr_on_amd64)
* [large-arg-to-sine](https://stackoverflow.com/questions/46711285/sine-result-depends-on-c-compiler-used)
* [atomic-with-multiple-CPU](https://software.intel.com/zh-cn/blogs/2010/01/14/cpucpu)
* [Cache-coherence](https://en.wikipedia.org/wiki/Cache_coherence)
* [Musing-on-Cython](http://notes-on-cython.readthedocs.io/en/latest/index.html)

#### 2017-10-13
* [Cache-swap-alg](http://www.cnblogs.com/-OYK/archive/2012/12/05/2803317.html)
* [CFG-decidable](https://cs.stackexchange.com/questions/315/are-all-context-free-and-regular-languages-efficiently-decidable)
* [OMG-a-lisp-runs-python](http://kitchingroup.cheme.cmu.edu/blog/2016/03/30/OMG-A-Lisp-that-runs-python/)
* [Computational-Geometry-Set-Operations-on-Polytopes](https://maxow.github.io/posts/computational-geometry-set-operations-on-polytopes.html)
* [SmallerC](https://github.com/alexfru/SmallerC)
* [Shell-operator](https://unix.stackexchange.com/questions/159513/what-are-the-shells-control-and-redirection-operators)
* [Lambda-cubde](http://www.rbjones.com/rbjpub/logic/cl/tlc001.htm)

#### 2017-10-14
* [Cost-of-Kotlin](http://oneeyedmen.com/cost-of-kotlin-preliminary-results-part3-invocation.html)
* [Impossible-dream-of-USB-C](https://marco.org/2017/10/14/impossible-dream-of-usb-c)
* [Xbox360-to-Win-Exec](https://github.com/rexdex/recompiler#porting-xbox360-executables-to-windows)

#### 2017-10-15
* [Why-physicists-still-use-Fortran](http://moreisdifferent.com/2015/07/16/why-physicsts-still-use-fortran/)
* [What-is-Nix](https://yakking.branchable.com/posts/what-and-why-nix/)
* [From-CL-to-Julia](https://tpapp.github.io/post/common-lisp-to-julia/)
* [No-Y-in-Haskell-HM](https://stackoverflow.com/questions/4273413/y-combinator-in-haskell)
* [Why-PostgreSQL-is-better-than-MySQL](https://blog.2ndquadrant.com/postgresql-better-mysql-1/)
* [Good/Bad-Math-Lambda-Calculus](http://cgnail.github.io/academic/lambda-index/)

#### 2017-10-16
* [Teach Youself Scheme in Fixnum Days](http://tiankonguse.com/manual/t-y-scheme/zh/)
* [Yet Another Scheme Tutorial](https://deathking.github.io/yast-cn)
* [Security-Public-RSS](https://www.zhihu.com/question/66470538/answer/242568128)
* [剖析Haskell应用架构/DDD](https://zhuanlan.zhihu.com/p/21898460)
* [Programming-with-Algebra](https://developer.atlassian.com/blog/2016/03/programming-with-algebra/)
* [DLL-UEFI-1](https://zhuanlan.zhihu.com/p/30000572)
* [DLL-UEFI-2](https://zhuanlan.zhihu.com/p/30106517)
* [Real-qsort-in-Haskell](http://augustss.blogspot.com/2007/08/quicksort-in-haskell-quicksort-is.html)
* + normally it's deforested tree sort
* [Haskell-mapM-mapM_](https://stackoverflow.com/questions/27609062/what-is-the-difference-between-mapm-and-mapm-in-haskell)
* [Reverse-Luac](https://zhuanlan.zhihu.com/p/30094117)
* [Rust-overflow-usize](https://zhuanlan.zhihu.com/p/30117447)
* [read()-depends-on-files](https://stackoverflow.com/questions/8975521/read-from-stdin/8975733#8975733)
* [McCarthy-91-verification-decreasing-termination](https://en.wikipedia.org/wiki/McCarthy_91_function)
* [Kan-extension](https://www.zhihu.com/question/65645659)
* [Perceptually uniform color spaces](https://programmingdesignsystems.com/color/perceptually-uniform-color-spaces/)
* [Rust-embedded](https://github.com/rust-embedded/)
* [WPA2-KRACK](https://www.zhihu.com/question/66736864)
* [Is-Haskell-right-language-teach-FP-PLT](http://profsjt.blogspot.com/2017/10/is-haskell-right-language-for-teaching.html)
* [std::string-optimization](https://shaharmike.com/cpp/std-string/)
* [std::string-concatentation-+=/append](https://stackoverflow.com/questions/18892281/most-optimized-way-of-concatenation-in-strings)

#### 2017-10-17
* [SMP-NUMA](https://www.quora.com/What-is-the-difference-between-SMP-and-NUMA-architectures)
* [Falling through the KRACKs](https://blog.cryptographyengineering.com/2017/10/16/falling-through-the-kracks/)
* [Keyboard-latency](https://danluu.com/keyboard-latency/)
* [Grok-the-GIL](https://opensource.com/article/17/4/grok-gil)
* [x86-64-canonical-form-addresses](https://stackoverflow.com/questions/38977755/address-canonical-form-and-pointer-arithmetic)
* [iterative-copy-tree](https://stackoverflow.com/questions/9647559/make-a-copy-of-a-binary-tree-in-an-iterative-manner-i-e-no-recursion-is-allowe)
* [Continuation-develop](http://www.ccidnet.com/2005/0722/292705.shtml)
* [Coroutine-and-Continuation](http://simple-is-better.com/news/697)
* [Pentium-FDIV-bug](https://en.wikipedia.org/wiki/Pentium_FDIV_bug)
* [Hot-swapping-Haskell](http://simonmar.github.io/posts/2017-10-17-hotswapping-haskell.html)
* [Haskell Typeclasses vs. C++ Classes](http://www.michaelburge.us/2017/10/15/haskell-typeclasses-vs-cpp-classes.html)
* [MTBF](https://zh.wikipedia.org/wiki/%E5%B9%B3%E5%9D%87%E6%95%85%E9%9A%9C%E9%96%93%E9%9A%94)

#### 2017-10-18
* [Stop-using-word2vec](http://multithreaded.stitchfix.com/blog/2017/10/18/stop-using-word2vec/)
* [TiDB-1.0](https://pingcap.github.io/blog/2017/10/17/announcement/)
* [FE=Checklist](https://github.com/thedaviddias/Front-End-Checklist)
* [KRACK-test](https://github.com/vanhoefm/krackattacks-test-ap-ft)
* [let-let*-letrec](https://www.reddit.com/r/Racket/comments/778qkf/let_let_and_letrec/)
* [browser-security-beyond-sandboxing](https://blogs.technet.microsoft.com/mmpc/2017/10/18/browser-security-beyond-sandboxing/)
* [symmetric-difference-of-recognizable-not-closed](https://cs.stackexchange.com/questions/9760/non-turing-recognizable-from-symmetric-difference?rq=1)
* + [but with finite language](https://cs.stackexchange.com/questions/44091/symmetric-difference-of-turing-recognizable-and-finite-languages)
* [practical-public-crypto](https://hackaday.com/2017/10/18/practical-public-key-cryptography/)
* [set-of-R-and-2^N](https://math.stackexchange.com/questions/553526/the-set-of-real-numbers-and-power-set-of-the-natural-numbers)
* [Gentle-introducion-to-parsec](https://www.barrucadu.co.uk/posts/etc/2013-05-27-a-gentle-introduction-to-parsec.html)
* [Python-sandbox-exploiting](https://zhuanlan.zhihu.com/p/30169159)
* [角点检测](https://www.cnblogs.com/ronny/p/4009425.html)
* [AlphaGo Zero](https://www.zhihu.com/question/66861516)
* [some-tools-of-PFE](https://blogs.msdn.microsoft.com/daviddasneves/2017/10/15/some-tools-of-a-pfe/)
* [C90-implicit-function-definition](https://stackoverflow.com/questions/46645399/why-is-c-more-restrictive-regarding-forward-declaration-of-function-prototypes)
* [Creating rows vs. columns performance](https://stackoverflow.com/questions/4988915/mysql-creating-rows-vs-columns-performance)
* [Python-basic-NN](http://iamtrask.github.io/2015/07/12/basic-python-network/)
* [Why-windows-10-sucks](http://itvision.altervista.org/why-windows-10-sucks.html)
* [bool-macro-int-typedef](https://stackoverflow.com/questions/46797609/why-do-major-compilers-use-typedef-for-stdint-h-but-use-define-for-stdbool-h)
* [p=27a^2+27a+7-RSA-is-unsafe](https://mathoverflow.net/questions/283767/conjecturally-unsafe-rsa-primes-p-27a227a7)
* [Less-copy-in-memoryview](https://eli.thegreenplace.net/2011/11/28/less-copies-in-python-with-the-buffer-protocol-and-memoryviews)

#### 2017-10-19
* [Blockchain-visually](https://unwttng.com/what-is-a-blockchain)
* [x86-LFENCE-SFENCE-MFENCE](https://stackoverflow.com/questions/20316124/does-it-make-any-sense-instruction-lfence-in-processors-x86-x86-64)
* [How-x86-implement-atomic-operation](https://stackoverflow.com/questions/38447226/atomicity-on-x86)
* [Modern-JS-explained-to-dinosaurs](https://medium.com/@peterxjang/modern-javascript-explained-for-dinosaurs-f695e9747b70)
* [Why do we need atomic_shared_ptr?](https://www.justsoftwaresolutions.co.uk/threading/why-do-we-need-atomic_shared_ptr.html)
* [shared_ptr-vs-atomic_shared_ptr](https://www.justsoftwaresolutions.co.uk/threading/why-do-we-need-atomic_shared_ptr.html)
* [shared_ptr-thread-safety](https://stackoverflow.com/questions/9127816/stdshared-ptr-thread-safety-explained)
* [std::string-memory-overhead](https://stackoverflow.com/questions/5058676/stdstring-implementation-in-gcc-and-its-memory-overhead-for-short-strings)
* [PyPy, Garbage Collection, and a Deadlock](https://emptysqua.re/blog/pypy-garbage-collection-and-a-deadlock/)
* [The definitive guide on how to use static, class or abstract methods in Python](https://julien.danjou.info/blog/2013/guide-python-static-class-abstract-methods)
* [The definitive guide to Python exceptions](https://julien.danjou.info/blog/2016/python-exceptions-guide)
* [pythonthreads-and-the-global-interpreter-lock](http://jessenoller.com/blog/2009/02/01/python-threads-and-the-global-interpreter-lock)
* [using-cgroups-to-limit-IO](https://andrestc.com/post/cgroups-io/)
* [Faster, more memory efficient and more ordered dictionaries on PyPy](https://morepypy.blogspot.com/2015/01/faster-more-memory-efficient-and-more.html)
* [EternalBlue-everything](https://research.checkpoint.com/eternalblue-everything-know/)
* [Nim-GC](https://nim-lang.org/araq/destructors.html)

#### 2017-10-20
* [threadpool-c++14](http://roar11.com/2016/01/a-platform-independent-thread-pool-using-c14/)
* [kernel-101](http://arjunsreedharan.org/post/82710718100/kernel-101-lets-write-a-kernel)
* [Object-Oriented-Haskell-SQL](https://programming.tobiasdammers.nl/blog/2017-10-17-object-oriented-haskell)
* [First-PS4-exploit-adieu](https://fail0verflow.com/blog/2017/ps4-namedobj-exploit/)
* [HolyJIT](https://blog.mozilla.org/javascript/2017/10/20/holyjit-a-new-hope/)
* [Simplifiy-build-c++](https://mropert.github.io/2017/10/19/simplifying_build-part1/)
* [lptable-tutorial](https://www.frozentux.net/iptables-tutorial/iptables-tutorial.html)
* [Round-robin](http://blog.csdn.net/ytdxyhz/article/details/52760960)
* [Top-20-C++-multithread-problem](http://www.acodersjourney.com/2017/08/top-20-cplusplus-multithreading-mistakes/)
* [python-logging-multithread-to-single-file](https://www.v2ex.com/t/399193#reply3)
* [Haskell-Any](https://stackoverflow.com/questions/6479444/is-there-a-type-any-in-haskell)

#### 2017-10-20
* [Dismissing-Python-GC](https://engineering.instagram.com/dismissing-python-garbage-collection-at-instagram-4dca40b29172)
* [GHC-cross-platform](https://medium.com/@zw3rk/ghc-cross-compiler-binary-distributions-490bb2c0c411)
* [C#-7.2-with-VS](http://www.c-sharpcorner.com/article/c-sharp-7-2-new-features-with-visual-studio-2017/)
* [Write-a-bootloader](http://3zanders.co.uk/2017/10/13/writing-a-bootloader/)
* [Squeezing Rust into production](http://www.tzaeru.com/squeezing-rust-into-production-part-2/)
* [VIM-after-15yrs](https://statico.github.io/vim3.html)
* [Type-Inference](https://medium.com/@dhruvrajvanshi/type-inference-for-beginners-part-1-3e0a5be98a4b)
* [9-new-features-in-Java-9](https://www.pluralsight.com/blog/software-development/java-9-new-features)
* [Dafny-intro](https://zhuanlan.zhihu.com/p/30321583)
* [Pipeline-prediction](http://www.cnblogs.com/yangecnu/p/4196026.html)
* [Type-Inference-2](https://medium.com/@dhruvrajvanshi/type-inference-for-beginners-part-2-f39c33ca9513)
* [L_REC-undecidable](https://math.stackexchange.com/questions/344545/is-this-undecidable-language-recognizable)
* [pyc-files](http://www.curiousefficiency.org/posts/2011/04/benefits-and-limitations-of-pyc-only.html)

#### 2017-10-22
* [scrap-all-typeclasses-into-1](http://h2.jaguarpaw.co.uk/posts/scrap-all-your-typeclasses-but-one/)
* [scrap-your-typeclass](http://www.haskellforall.com/2012/05/scrap-your-type-classes.html)
* [kernel-exploitation-deferencing-nullptr](https://0x00sec.org/t/kernel-exploitation-dereferencing-a-null-pointer/3850)
* [Rust-to-wasm](https://lord.io/blog/2017/wargo/)

#### 2017-10-23
* [Java-List<>](https://stackoverflow.com/questions/6231973/difference-between-list-list-listt-liste-and-listobject)
* [game-developer-resources](https://unlikekinds.com/t/game-developer-resources)
* [spin_lock](https://www.zhihu.com/question/66889164)
* [analysis-malware-by-statistics](https://zhuanlan.zhihu.com/p/30291905)
* [.volatile.iso/ms](https://msdn.microsoft.com/en-us/library/jj204392.aspx?f=255&MSPPError=-2147217396)
* [acquire-and-release-sementics](http://preshing.com/20120913/acquire-and-release-semantics/)
* [memory_order_consume](http://preshing.com/20140709/the-purpose-of-memory_order_consume-in-cpp11/)
* [React-design](https://zhuanlan.zhihu.com/p/30277192)
* [NLP-intro](https://zhuanlan.zhihu.com/p/30354720)
* [goroutine-抢占](https://zhuanlan.zhihu.com/p/30353139)
* [Timsort-verification](http://mp.weixin.qq.com/s/wEl7CY9dvY96M-0JrgqI0g)
* [Covariance-Contravariance](https://extremegtr.github.io/2016/07/11/Covariance-And-Contravariance-In-Java/)
* [IIFE-cpp](http://articles.emptycrate.com/2014/12/16/complex_object_initialization_optimization_with_iife_in_c11.html)
* [C#-8-future](https://rubikscode.net/2017/10/23/c-8-the-shape-of-the-things-to-come/)
* [stack-protector](http://www.productive-cpp.com/hardening-cpp-programs-stack-protector/)
* [stack-smashing-protector(SSP)](http://wiki.osdev.org/Stack_Smashing_Protector)
* [Magic-about-Websocket-CSS3](https://medium.com/outsystems-engineering/making-magic-with-websockets-and-css3-ec22c1dcc8a8)
* [Why-no-VLA-in-C++0x](https://groups.google.com/forum/#!topic/comp.std.c++/K_4lgA1JYeg)
* [Why-no-VLA-in-C++](https://stackoverflow.com/questions/1887097/why-arent-variable-length-arrays-part-of-the-c-standard)
* [OCaml-let-rec](https://stackoverflow.com/questions/900585/why-are-functions-in-ocaml-f-not-recursive-by-default)
* [MSVC-d2cgsummary-compile-time](http://aras-p.info/blog/2017/10/23/Best-unknown-MSVC-flag-d2cgsummary/)
* [MSVC-hidden-flags](https://www.reddit.com/r/cpp/comments/787lmw/best_unkown_msvc_flag_d2cgsummary_compile_time/)
* [binomial-tail-recursive](https://stackoverflow.com/questions/28896626/tail-recursive-binomial-coefficient-function-in-haskell)
* [Derived-template-class](https://stackoverflow.com/questions/4643074/why-do-i-have-to-access-template-base-class-members-through-the-this-pointer)
* [Dis-interview](http://www.zenlife.tk/interview-for-distributed-storage.md)
* [Multiple-def-of-spin_lock](http://locklessinc.com/articles/locks/)
* [spin-lock-implementation](https://www.zhihu.com/question/55764216)

#### 2017-10-24
* [Rust-1.21](https://www.infoq.com/news/2017/10/rust-1-21-released)
* [Cpp17-interview-with-Herb-Sutter](https://www.infoq.com/news/2017/10/cpp-17-herb-sutter-interview)
* [.NET-Core-2.0](https://weblog.west-wind.com/posts/2017/Oct/22/NET-Core-20-and-ASPNET-20-Core-are-finally-here)
* [PWN2WIn2017-shift-register-reverse-integrated-circuits](http://blog.dragonsector.pl/2017/10/pwn2win-2017-shift-register.html)
* [Counter-example-of-typeclass](http://blog.functorial.com/posts/2015-12-06-Counterexamples.html?repost)
* [Games-Look-Bad-1](https://ventspace.wordpress.com/2017/10/20/games-look-bad-part-1-hdr-and-tone-mapping/)

#### 2017-10-25
* [VLA-speed](https://stackoverflow.com/questions/34847662/is-accessing-statically-or-dynamically-allocated-memory-faster)
* [Why-Python-is-slow](http://jakevdp.github.io/blog/2014/05/09/why-python-is-slow/)
* [SciPy-1.0](https://mail.python.org/pipermail/scipy-user/2017-October/037357.html)
* [Imperative-Haskell](http://vaibhavsagar.com/blog/2017/05/29/imperative-haskell/)
* [Want-speed-passing-by-value](https://web.archive.org/web/20140205194657/http://cpp-next.com/archive/2009/08/want-speed-pass-by-value/)
* [copy-elision-on-argument](https://stackoverflow.com/questions/33872026/copy-elision-for-pass-by-value-arguments)
* [copy-elision-prvalue+xvalue](https://zhuanlan.zhihu.com/p/22821671)

#### 2017-10-26
* [Optimising-free-monad-using-Plate](https://qfpl.io/posts/optimising-free-with-plated/)
* [Learning-a-hierarchy](https://blog.openai.com/learning-a-hierarchy/)
* [How-to-use-Zorn's-lemma](http://www.tricki.org/article/How_to_use_Zorns_lemma)
* [recursion-tail-calls-and-trampolines](http://www.datchley.name/recursion-tail-calls-and-trampolines/)

#### 2017-10-27
* [Make-2+2=5](https://codegolf.stackexchange.com/questions/28786/write-a-program-that-makes-2-2-5)

#### 2017-10-28
* [Void-linux](https://www.linux.com/learn/intro-to-linux/2017/10/void-linux-salute-old-school-linux)
* [GADT](https://www.zhihu.com/question/67043774)
* [Linux-PLT-GOT](https://www.zhihu.com/question/21249496)
* [From-object-algebra-to-finally-tagless-interpreter](https://oleksandrmanzyuk.wordpress.com/2014/06/18/from-object-algebras-to-finally-tagless-interpreters-2/)
* [tagless-final-encoding-of-language](https://wickstrom.tech/programming/2017/06/05/tagless-final-encoding-of-a-test-language.html)
* [Agda-intro](http://hawnzug.me/posts/2017-03-01-translation-agda-introduction.html)
* [Max-size-of-IOS-app](https://stackoverflow.com/questions/19646205/maximum-size-for-ios-app)
* [eval-apply-circle](https://mitpress.mit.edu/sicp/full-text/sicp/book/node77.html)
* [Hack-webapp](https://zhuanlan.zhihu.com/p/30400096)
* [parametricity-intro](https://www.well-typed.com/blog/2015/05/parametricity/)
* [constexpr-captured-lambda](https://stackoverflow.com/questions/46900655/is-it-legal-to-use-a-const-value-captured-in-a-lambda-as-a-template-argument)
* [Structure-encoding-editting](https://blog.isomorf.io/an-experiment-in-structured-code-editing-68b917a9157c)
* [Enum-as-template-argument](https://stackoverflow.com/questions/46933091/is-it-allowed-to-specialize-a-template-with-enums-with-the-same-integral-value/46933478#46933478)
* [language-implementing-null](https://softwareengineering.stackexchange.com/questions/237697/if-null-is-bad-why-do-modern-languages-implement-it)
* [Monad-io-computational-order-temporal-order](https://www.reddit.com/r/haskell/comments/244gil/how_are_monads_not_about_orderingsequencing/)
* [IO-not-satify-monad-laws](https://stackoverflow.com/questions/12617664/a-simple-example-showing-that-io-doesnt-satisfy-the-monad-laws)
* [intel-lapicw-twice](https://twitter.com/johnregehr/status/923591402767900672)
* [uint_fast32_t](https://stackoverflow.com/questions/46959685/why-would-uint32-t-be-preferred-rather-than-uint-fast32-t/46960509#46960509)
* [understanding-FFT](http://jakevdp.github.io/blog/2013/08/28/understanding-the-fft/)
* [C++-compile-time](https://www.zhihu.com/question/42964826)

#### 2017-10-29
* [Docker-over-fat-binary](http://www.smashcompany.com/technology/why-would-anyone-choose-docker-over-fat-binaries)
* [Gilectomy-GIL-less-python](https://lwn.net/Articles/723514/)
* [PyPy-STM-GIL-less-python](http://pypy.org/tmdonate2.html)
* [PyPy-remove-GIL](https://morepypy.blogspot.com/2017/08/lets-remove-global-interpreter-lock.html)
* [Greg's-1.5-Python-remove-GIL](https://mail.python.org/pipermail/python-dev/2001-August/017099.html)
* [PyPy-GIL](http://doc.pypy.org/en/latest/faq.html#does-pypy-have-a-gil-why)

#### 2017-10-30
* [Python-hardest-problem-GIL](https://jeffknupp.com/blog/2012/03/31/pythons-hardest-problem/)
* [Python-hardest-problem-GIL-revisited](https://jeffknupp.com/blog/2013/06/30/pythons-hardest-problem-revisited/)

#### 2017-10-31
* [Do-you-need-a-VPN](https://blog.mozilla.org/internetcitizen/2017/08/29/do-you-need-a-vpn/)
* [HTTP=103](https://datatracker.ietf.org/doc/draft-ietf-httpbis-early-hints/)
* [So-you-want-to-write-a-type-checker](http://languagengine.co/blog/so-you-want-to-write-a-type-checker/)
* [C++-Bestiary](http://videocortex.io/2017/Bestiary/)
* [Persistent-RBT-Haskell](https://functional.works-hub.com/blog/Persistent-Red-Black-Trees-in-Haskell?utm_source=Reddit&utm_medium=post&utm_campaign=peter&utm_content=blog)
* [Crafting-interpreter](http://www.craftinginterpreters.com/contents.html)
* [How-to-implement-dependent-type-theory](http://math.andrej.com/2012/11/08/how-to-implement-dependent-type-theory-i/)
* [dependent-type-compiler](https://cstheory.stackexchange.com/questions/18777/is-compiler-for-dependent-type-much-harder-than-an-intepreter)

#### 2017-11-1
* [How-lazy-evaluation-in-Haskell](https://hackhands.com/lazy-evaluation-works-haskell/)
* [Common-misconception-of-C++-TS-Modules](https://build2.org/article/cxx-modules-misconceptions.xhtml)

#### 2017-11-2
* [Minimal-guide-to-SQLite](http://tech.marksblogg.com/sqlite3-tutorial-and-guide.html)
* [Fearlesss-Concurrency-in-Rust](https://blog.rust-lang.org/2015/04/10/Fearless-Concurrency.html)
* [Have-fun-with-Mach-O](https://www.pnfsoftware.com/blog/having-fun-with-obfuscated-mach-o-files/)
* [Python-Parallelism](https://segmentfault.com/a/1190000000382873)

#### 2017-11-3
* [2FA-Hash](https://techblog.bozho.net/enabling-two-factor-authentication-web-application/)
* [WPS-developing](http://bbs.wps.cn/thread-22332423-1-1.html)
* [MySQL-vs-MariaDB](https://www.percona.com/blog/2017/11/02/mysql-vs-mariadb-reality-check/)
* [Linux-container-in-500-lines](https://blog.lizzie.io/linux-containers-in-500-loc.html)
* [Reverse-guitar-hero](https://hackaday.com/2017/09/25/reverse-engineering-guitar-hero/)

#### 2017-11-4
* [Cpp-Relaxed-template-argument](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2016/p0522r0.html)
* [Write-line-in-C](https://zhuanlan.zhihu.com/p/30553006)
* [Implement-coroutine-C](https://stackoverflow.com/questions/121757/how-do-you-implement-coroutines-in-c)
* [Coroutine-in-C](https://www.chiark.greenend.org.uk/~sgtatham/coroutines.html)
* [My-VM-is-lighter-than-you](https://zhuanlan.zhihu.com/p/30594040)
* [Neural Language Modeling From Scratch](http://ofir.io/Neural-Language-Modeling-From-Scratch/?a=1)
* [Why does using the same cache-line from multiple threads not cause serious slowdown?](https://stackoverflow.com/questions/46919032/why-does-using-the-same-cache-line-from-multiple-threads-not-cause-serious-slowd)
* [x86-SSE-auto-acquire-release?](https://stackoverflow.com/questions/19093137/does-x86-sse-instructions-have-an-automatic-release-acquire-order/27302931#27302931)
* [Cap'n Proto, FlatBuffers, and SBE](https://capnproto.org/news/2014-06-17-capnproto-flatbuffers-sbe.html)
* [AlphaGo-Zero](http://tim.hibal.org/blog/alpha-zero-how-and-why-it-works/)
* [Profiling-go](http://www.integralist.co.uk/posts/profiling-go/)
* [Implement-a-kv-store](https://samrat.me/posts/2017-11-04-kvstore-linear-hashing/)

#### 2017-11-5
* [Python-class-def-internals](https://eli.thegreenplace.net/2012/06/15/under-the-hood-of-python-class-definitions)
* [Self-Replicating Functions](http://tylerneylon.com/a/self_repl/)
* [Penetration-test-cheat-sheet](https://techincidents.com/penetration-testing-cheat-sheet/)

#### 2017-11-6
* [Python-Packaging-user-guide](https://packaging.python.org/)
* [MINIX-back-door-Intel](https://www.networkworld.com/article/3236064/servers/minix-the-most-popular-os-in-the-world-thanks-to-intel.html)
* [libreboot](https://libreboot.org/faq.html#intel)
* [GreenHoney](http://muyueh.com/greenhoney/)
* [Difference-between-stack-and-frame](https://stackoverflow.com/questions/23848391/what-is-the-difference-between-a-stack-and-a-frame)

#### 2017-11-7
* [FP-Jargon](https://functional.works-hub.com/blog/Functional-Programming-Jargon)
* [Virtual-memory-tricks](http://ourmachinery.com/post/virtual-memory-tricks/)
* [Advance-ctypes](https://dbader.org/blog/python-ctypes-tutorial-part-2)
* [heap-to-stack-optimization](https://stackoverflow.com/questions/47075871/can-the-compiler-optimize-from-heap-to-stack-allocation/47076607#47076607)
* [sort-and-universe](https://cs.stackexchange.com/questions/53674/difference-between-sort-and-universe)
* [__del__-PEP484-Py](https://stackoverflow.com/questions/18971451/how-many-times-can-del-be-called-per-object-in-python)
* [Race-condition-muduo](https://zhuanlan.zhihu.com/p/30522095)
* [folly-Poly](https://github.com/facebook/folly/blob/master/folly/docs/Poly.md)
* [type-family-dependency](https://stackoverflow.com/questions/11789552/type-keyword-in-class-and-instance-declarations/11791481#11791481)
* [quick-sort-better](https://stackoverflow.com/questions/4289024/why-is-quicksort-faster-in-average-than-others/4292700#4292700)
* [自相似函数](https://www.zhihu.com/question/35867114/answer/64865516)
* [|-,|=,=>](https://www.zhihu.com/question/21191299)
* [CSV-injection](https://zhuanlan.zhihu.com/p/30804904)
* [Hash-Killer](http://vfleaking.blog.163.com/blog/static/1748076342013229102430789/)
* [specifier-not-inherit](https://stackoverflow.com/questions/47104799/does-attribute-specifier-sequence-inherit/47105294#47105294)
* [STATS-385-theory-of-ML](https://stats385.github.io/)
* [Windows-TCP-winsocks](https://web.archive.org/web/20020322041909/http://www.kuro5hin.org/story/2001/6/19/05641/7357)
* [乱序执行-内存屏障](http://blog.csdn.net/dd864140130/article/details/56494925)

#### 2017-11-8 - 2017-11-9
* [i386-i686-x86_64](https://serverfault.com/questions/610308/x86-i386-i686-amd64-i5-i7-archtecture-processor-confusion)
* [F-Algebra](https://zhuanlan.zhihu.com/p/30833827)
* [Fast-typechecking-for-JS](https://blog.acolyer.org/2017/11/08/fast-and-precise-type-checking-for-javascript/)
* [MIN-MAX-operator-UNIX-C](https://retrocomputing.stackexchange.com/questions/4965/why-were-the-min-and-the-max-operators-abandoned-in-the-c-language)
* [Ten-modern-language-feature](https://medium.com/@kasperpeulen/10-features-from-various-modern-languages-that-i-would-like-to-see-in-any-programming-language-f2a4a8ee6727)
* [boost-multi_index_map](https://stackoverflow.com/questions/4206349/how-boost-multi-index-is-implemented)
* [real-time-ascii-decision-tree](https://art.pixlab.io/)
* [x86_64-JIT-python](https://csl.name/post/python-jit/)

#### 2017-11-10
* [8-yrs-of-Golang](https://blog.golang.org/8years)
* [Apple-A11-core](https://www.mikeash.com/pyblog/friday-qa-2017-11-10-observing-the-a11s-heterogenous-cores.html)
* [IME-JTAG-using-USB](https://thenextweb.com/security/2017/11/09/researchers-find-almost-every-computer-intel-skylake-cpu-can-owned-via-usb/?amp=1)

#### 2017-11-11
* [x86_64-TCP-bind-explain](https://pentesterslife.blog/2017/11/01/x86_64-tcp-bind-shellcode-with-basic-authentication-on-linux-systems/)
* [Create-MIDI-from-scratch-in-C++](https://www.youtube.com/watch?v=6PFf6klllAE)
* [buffer-overflow-attack](http://www.cnblogs.com/fanzhidongyzby/p/3250405.html)
* [Capsule-Network-explained](https://kndrck.co/posts/capsule_networks_explained/)
* [Albuquerque-ISO-C++-Trip-Report](https://www.reddit.com/r/cpp/comments/7ca2sh/2017_albuquerque_iso_c_committee_reddit_trip/)

#### 2017-11-12
* [Linux-sandboxing-improvement-in-FF57](http://www.morbo.org/2017/11/linux-sandboxing-improvements-in.html)
* [C-locale-MPV](https://github.com/mpv-player/mpv/commit/1e70e82baa9193f6f027338b0fab0f5078971fbe)
* [HS-ABQ-Trip-report](https://herbsutter.com/2017/11/11/trip-report-fall-iso-c-standards-meeting-albuquerque/amp/)
* [Careful-with-PyPI](https://glyph.twistedmatrix.com/2017/10/careful-with-that-pypi.html)
* [PowerPC-block-diagram](https://www.powerpc-notebook.org/2017/11/powerpc-notebook-block-diagram-done/)
* 

#### 2017-11-13
* [let-polymorphism](https://www.haskell.org/tutorial/pitfalls.html)
* [Unification-ML-in-JS](https://zhuanlan.zhihu.com/p/24181997)
* [Omega-in-Haskell](https://stackoverflow.com/questions/33546004/is-it-possible-to-define-omega-combinator-%CE%BBx-xx-in-modern-haskell)
* [Universal-Existential-type-in-Haskell](https://stackoverflow.com/questions/14299638/existential-vs-universally-quantified-types-in-haskell)
* [Existential-Type-in-Haskell](https://stackoverflow.com/questions/10753073/whats-the-theoretical-basis-for-existential-types/10753957#10753957)
* [Existential-type-haskell](http://iveselov.info/posts/2012-08-30-existential-types.html)

#### 2017-11-14
* [FSM-Haskell](https://wickstrom.tech/finite-state-machines/2017/11/10/finite-state-machines-part-1-modeling-with-haskell.html)
* [Executable-Space-protection-and-ASLR](http://www.productive-cpp.com/hardening-cpp-programs-executable-space-protection-address-space-layout-randomization-aslr/)
* [Fearless-concurrency-in-rust](https://blog.rust-lang.org/2017/11/14/Fearless-Concurrency-In-Firefox-Quantum.html)
* [Intel Microcode Extra Undocumented Header](https://github.com/platomav/MCExtractor/wiki/Intel-Microcode-Extra-Undocumented-Header)
* [Haskell-WASM](https://dhc.dfinity.org/)

#### 2017-11-15
* [Cost-of-JS](https://medium.com/dev-channel/the-cost-of-javascript-84009f51e99e)
* [Haskell-survey](http://taylor.fausak.me/2017/11/15/2017-state-of-haskell-survey-results/)
* [Optimizing-Pandas-code](https://engineering.upside.com/a-beginners-guide-to-optimizing-pandas-code-for-speed-c09ef2c6a4d6)

#### 2017-11-16
* [Intro-to-Nullable-Reference-Types](https://blogs.msdn.microsoft.com/dotnet/2017/11/15/nullable-reference-types-in-csharp/)
* [Digital-Securiry-Motherboard](https://motherboard.vice.com/en_us/article/d3devm/motherboard-guide-to-not-getting-hacked-online-safety-guide)
* [Speed-up-Python-using-Rust](https://developers.redhat.com/blog/2017/11/16/speed-python-using-rust/)

#### 2017-11-17
* [Improving-debugging-of-std-function](https://blogs.msdn.microsoft.com/vcblog/2017/11/16/improving-the-debugging-experience-for-stdfunction/)
* [C++-Interview](http://blog.csdn.net/shanghairuoxiao/article/details/72876248)
* [Best-result-of-ML](https://github.com//RedditSota/state-of-the-art-result-for-machine-learning-problems)
* [Graph-theorem](https://zhuanlan.zhihu.com/p/30947936)
* [smart-pointer](https://zhuanlan.zhihu.com/p/30933682)
* [Intro-to-ME](https://zhuanlan.zhihu.com/p/30971549)
* [MIT-6.824-Intro](https://www.zhihu.com/question/29597104/answer/128443409)
* [<=>-for-optional](https://medium.com/@barryrevzin/implementing-the-spaceship-operator-for-optional-4de89fc6d5ec)

#### 2017-11-18
* [Fast-exact-interger-division-using-floating-point-operations](https://lemire.me/blog/2017/11/16/fast-exact-integer-divisions-using-floating-point-operations/)
* [Wrong-way-for-benchmarking-integer-comparision](https://blogs.msdn.microsoft.com/oldnewthing/20171117-00/?p=97416)

#### 2017-11-19
* [内存断点/硬件断点](https://www.zhihu.com/question/52625624)
* [PE-files](http://www.4hou.com/system/7782.html)
* [Windows-VEH](http://syprog.blogspot.com/2011/10/windows-structured-and-vectored.html)

#### 2017-11-20
* [Design-of-Python](https://zhuanlan.zhihu.com/p/26895103)
* [Design-of-Python-2](https://zhuanlan.zhihu.com/p/27678351)
* [Python-ASDL-load-store-del](https://bytes.com/topic/python/answers/845057-what-do-_ast-load-store-del-augload-augstore-param-mean)
* + AugLoad/AugStore are not used in current implementation
* [Debugging-multiprocess-python](http://blog.ptsang.net/debugging_python_multiprocessing)
* [TLB-context-switch](http://www.wowotech.net/process_management/context-switch-tlb.html)
* [Inductive-Coinductive-Haskell](https://stackoverflow.com/questions/39854514/are-lists-inductive-or-coinductive-in-haskell)
* [Linus-Security-are-Bugs](https://www.reddit.com/r/programming/comments/7ebpum/linus_tells_google_security_engineers_what_he/)
* [Microservice-in-golang](http://ewanvalentine.io/microservices-in-golang-part-1/)
* [Improve-math-in-glibc](https://developers.redhat.com/blog/2015/01/02/improving-math-performance-in-glibc/)
* [block-rewriting-clang](https://techtalk.intersec.com/2014/11/blocks-rewriting-with-clang/)
* [implementation-block](http://linlexus.com/implementation_of_block/)
* [Implement-closure-in-C](http://hokstad.com/how-to-implement-closures)

#### 2017-11-21
* [Replacing x86 firmware with Linux and Go](https://lwn.net/SubscriberLink/738649/81007748bf15c1e5/)
* [Hask-is-even-not-a-category](https://wiki.haskell.org/Hask#Is_Hask_even_a_category.3F)
* [JIT-for-x86_64-Py](https://csl.name/post/python-compiler/)

#### 2017-11-22
* [deprecated-is_literal_type](https://stackoverflow.com/questions/40351816/deprecated-stdis-literal-type-in-c17)
* [constexpr-function-parameter](https://mpark.github.io/programming/2017/05/26/constexpr-function-parameters/)
* [compile-time-string-check](http://zverovich.net/2017/11/05/compile-time-format-strings.html)
* [Building-GHC-the-Stages](https://medium.com/@zw3rk/building-ghc-the-stages-2c6cf6fc4b29)

#### 2017-11-23
* [Rust-1.22](https://blog.rust-lang.org/2017/11/22/Rust-1.22.html)
* [understanding-co_await](https://lewissbaker.github.io/2017/11/17/understanding-operator-co-await)
* [using-c++-coroutine-in-boost](https://blogs.msdn.microsoft.com/vcblog/2017/05/19/using-c-coroutines-with-boost-c-libraries/)
* [coroutine-theory](https://lewissbaker.github.io/2017/09/25/coroutine-theory)
* [logical-linear-virtual-physical-address](https://www.zhihu.com/question/29918252)
* [MSVC-breakpoint](https://stackoverflow.com/questions/370195/when-and-why-will-an-os-initialise-memory-to-0xcd-0xdd-etc-on-malloc-free-new)
* [reverse-renpy](https://www.taricorp.net/2014/reverse-engineering-renpy-packages/)
* [隐写术](https://smartjinyu.com/ctf/2016/11/29/introduction_to_stereo.html)
* [Inside memory management](https://www.ibm.com/developerworks/linux/library/l-memory/)
* [理解 ReadDirectoryChangesW](http://blog.csdn.net/wzsy/article/details/6697613)

#### 2017-11-24
* [Spheres-and-points](https://ipfs.io/ipfs/QmfN5DojVnEsf1Une3DFwfUiFpfWnQf31f61qgybiXVeQE/blog/spheres-and-points/)
* [glibc-memory](http://blog.csdn.net/maokelong95/article/details/52006379)
* [design-memory-pool](https://www.zhihu.com/question/25527491)
* [understanding-glibc-ptmalloc2](http://blog.csdn.net/maokelong95/article/details/51989081)
* [fprintf-%p](https://stackoverflow.com/questions/24867814/printfp-and-casting-to-void)
* [LRU-implement-on-CPU](https://stackoverflow.com/questions/23448528/how-is-an-lru-cache-implemented-in-a-cpu)
* [KASLR](https://blog.netbsd.org/tnf/entry/the_strongest_kaslr_ever)

#### 2017-11-25
* [compare-POD-types](https://stackoverflow.com/questions/47437349/is-it-undefined-behavior-to-read-and-compare-padding-bytes-of-a-pod-type)
* [Python-Top-10-Nov-2017](https://medium.mybridge.co/python-top-10-articles-for-the-past-month-v-nov-2017-f46fcaa36e4b)
* [My-unusual-hobby-Coq](https://www.stephanboyer.com/post/134/my-unusual-hobby)

#### 2017-11-26
* [ILP-DLP-TLP](https://software.intel.com/zh-cn/blogs/2011/12/02/400009299)
* [constexpr-in-c++11-not-TM-Complete](https://stackoverflow.com/questions/9201506/is-constexpr-based-computation-turing-complete/9528554#9528554)
* [oi-tools/tuack](https://git.thusaac.org/publish/tuack)
* [std::reduce-in-C++17](https://stackoverflow.com/questions/47144083/why-has-stdreduce-been-added-in-c17/47191827#47191827)
* [Albuquerque-C++-2017-Trip-Report](https://botondballo.wordpress.com/2017/11/20/trip-report-c-standards-meeting-in-albuquerque-november-2017/amp/)
* [boost-coroutine-2-fiber](https://stackoverflow.com/questions/44521178/what-is-the-difference-between-coroutine-coroutine2-and-fiber/44562557#44562557)
* [redis-skiplist-instead-of-rbtree](https://www.zhihu.com/question/20202931)
* [Seemingly impossible functional programs](http://math.andrej.com/2007/09/28/seemingly-impossible-functional-programs/)
* [c++-std::thread-unwound-stack-gcc-fix-in-8](https://gcc.gnu.org/bugzilla/show_bug.cgi?id=55917)
* [inline-variables](https://tech.io/playgrounds/2205/7-features-of-c17-that-will-simplify-your-code/inline-variables)
* [Verify-Haskell-Functor](https://www.zhihu.com/question/65775009)
* [Verify your Typeclass Instances in Haskell Today!](https://blog.jle.im/entry/verified-instances-in-haskell.html)
* [constexpr-compile-faster](http://aras-p.info/blog/2017/10/24/Slow-to-Compile-Table-Initializers/)
* [L123-Cache](https://zhuanlan.zhihu.com/p/31422201)

#### 2017-11-27
* [Notes-on-shared_ptr/weak_ptr](https://eklitzke.org/notes-on-std-shared-ptr-and-std-weak-ptr)

#### 2017-11-28
* [Personal-finance-for-engineer](https://cs007.blog/)
* [Lib-of-parallel-algorithm-NESL](https://www.cs.cmu.edu/~scandal/nesl/algorithms.html)
* [aria2-repair-chunks](https://orzfly.com/html/repair-file-chunks-with-aria2.html)
* [Windows’s Virtual Address Space: A Short MSDN Story](http://www.tenouk.com/WinVirtualAddressSpace.html)

#### 2017-11-29
* [LINQ-ELI5](https://martinfowler.com/articles/collection-pipeline/)

#### 2017-11-30
* [why-no-unsigned-float](https://stackoverflow.com/questions/512022/why-doesnt-c-have-unsigned-floats)
* [TSP-approximation](https://zhuanlan.zhihu.com/p/28161351)

#### 2017-12-1
* [write-a-simple-linux-kernel-mode](https://blog.sourcerer.io/writing-a-simple-linux-kernel-module-d9dc3762c234)
* [functional-exceptionless-error-handling](https://blog.tartanllama.xyz/optional-expected/)

#### 2017-12-2
* [python-chanllenge-solution](https://the-python-challenge-solutions.hackingnote.com)

#### 2017-12-3
* [Python-3-readiness](http://py3readiness.org/)

#### 2017-12-4
* [Persistent-RBT-in-Haskell](https://functional.works-hub.com/blog/Persistent-Red-Black-Trees-in-Haskell)
* [SIMD-in-Rust](https://hugotunius.se/2017/12/01/exploring-simd-in-rust.html)
* [Use-all-the-databases](https://compose.com/articles/use-all-the-databases-part-1/?cm_mmc=PSocial_Twitter-_-Analytics_Watson%20Data%20Platform-_-WW_WW-_-23218161_Tracking%20Pixel&cm_mmca1=000000XH&cm_mmca2=10000863&cm_mmca4=23218161&cm_mmca5=49375798&cm_mmca6=b56e212b-edae-4c2e-a257-5aad1c08b7d4&cvosrc=social%20network%20paid.twitter.Q42017HandlesBlog5_SD%20Behav_DesktopMobile_1x1&cvo_campaign=000000XH&cvo_pid=23218161)

#### 2017-12-5
* [Dependent-type-for-F#](https://jackfoxy.github.io/DependentTypes/)
* [Tarjan-DS](https://www.zhihu.com/question/65155704)
* [HMM-CRF](https://www.zhihu.com/question/35866596)

#### 2017-12-6
* [PEP-557-Data-Classes](https://www.python.org/dev/peps/pep-0557/)

#### 2017-12-7
* [Attacking-IME](https://twitter.com/rootkovska/status/938458875522666497)
* [Ref-Out-C#](http://dailydotnettips.com/2017/11/17/back-to-basics-what-is-the-difference-between-ref-and-out-keyword-in-c/)
* [Visual-Studio-15.5-MSVC-code-opt](https://blogs.msdn.microsoft.com/vcblog/2017/12/03/msvc-code-optimizer-improvements-in-visual-studio-2017-versions-15-5-and-15-3/)
* [The Most Exciting Linux Kernel Stories Of 2017](https://www.phoronix.com/scan.php?page=news_item&px=Linux-Kernel-2017-Highlights)
* [tail-duplication](http://elegantc.blogspot.com/2016/05/tail-duplication-with-llvm.html)
* [assume-no-aliasing](https://stackoverflow.com/questions/7298546/gcc-c-c-assume-no-pointer-aliasing)

#### 2017-12-08
* [auto-deduce-a-reference](https://blog.petrzemek.net/2017/12/08/when-auto-seemingly-deduces-a-reference-in-cpp/)
* [C++17-feature-removal-deprecation](https://blogs.msdn.microsoft.com/vcblog/2017/12/08/c17-feature-removals-and-deprecations/)
* [longest-path-in-a-tree-proof](http://sighingnow.github.io/algorithm/longestpathintree.html)

#### 2017-12-09
* [mmap-DMA](http://blog.jobbole.com/91891/)
* [VFIO](https://ggaaooppeenngg.github.io/zh-CN/2017/06/05/VFIO-%E2%80%94%E2%80%94%E5%B0%86-DMA-%E6%98%A0%E5%B0%84%E6%9A%B4%E9%9C%B2%E7%BB%99%E7%94%A8%E6%88%B7%E6%80%81/)
* [levity-polymorphism](https://stackoverflow.com/questions/35318562/what-is-levity-polymorphism)
* [intrusive_ptr](https://www.zhihu.com/question/25271180)
* [MIDI](https://www.zhihu.com/question/19584704)
* [packaged_task-with-bind](https://stackoverflow.com/questions/33135304/c-create-an-stdpackaged-task-of-a-generic-stdbind/33156507#33156507)
* [difference-between-promise-packaged_task-async](http://jakascorner.com/blog/2016/03/promise-difference.html)
* [promise-packaged_task-async](https://stackoverflow.com/questions/17729924/when-to-use-promise-over-async-or-packaged-task/24164631#24164631)
* [Windows10-System-Call-Stub-Changes](https://www.malwaretech.com/2015/07/windows-10-system-call-stub-changes.html)
* [Windows-syscall](https://www.evilsocket.net/2014/02/11/on-windows-syscall-mechanism-and-syscall-numbers-extraction-methods/)
* [RankN-Types](https://ocharles.org.uk/blog/guest-posts/2014-12-18-rank-n-types.html)
* [Normal-to-Uniform-Distribution](https://www.zhihu.com/question/25111423)
* [RankN-polymorphism-and-System-F](https://stackoverflow.com/questions/12031878/what-is-the-purpose-of-rank2types/12033549#12033549)
* [Pushing the Limits of Windows](https://blogs.technet.microsoft.com/markrussinovich/2009/07/05/pushing-the-limits-of-windows-processes-and-threads/)
* [threads-has-distinct-heap?](https://stackoverflow.com/questions/1665419/do-threads-have-a-distinct-heap/1682518#1682518)
* [finally-always-execute-in-Java?](https://stackoverflow.com/questions/65035/does-finally-always-execute-in-java)
* [CrowdSourcing](https://www.zhihu.com/question/68660315/answer/267817552)
* [Happen-before-Synchronized-with](https://zhuanlan.zhihu.com/p/31386431)
* [Theorem-proof-in-Haskell](https://zhuanlan.zhihu.com/p/31567423)
* [How do type classes differ from interfaces?](http://www.parsonsmatt.org/2017/01/07/how_do_type_classes_differ_from_interfaces.html)
* [Desugar-Haskell-code](http://www.haskellforall.com/2014/10/how-to-desugar-haskell-code.html)
* [Windows-kernel-bug](https://zhuanlan.zhihu.com/p/31739344)
* [Partial-evaluation-interpreter-and-compiler](https://www.zhihu.com/question/263559593/answer/270924481)
* [Welcome to a tour of Go in Haskell](https://a-tour-of-go-in-haskell.syocy.net/en_US/index.html)
* [Data Structure for Strings](http://aandds.com/blog/algorithm-datastructure-str.html)
* [Finite Field Arithmetic](http://www.loper-os.org/?p=1913)
* [Dlang-with-C](https://dlang.org/blog/2017/12/05/interfacing-d-with-c-getting-started/)
* [Git-as-a-purely-functional-DS](https://blog.jayway.com/2013/03/03/git-is-a-purely-functional-data-structure/)
* [CSAPP-exception-OS](http://wdxtub.com/2016/04/16/thin-csapp-5/)

#### 2017-12-10
* [Find-haskell-bug-by-proving](https://www.joachim-breitner.de/blog/734-Finding_bugs_in_Haskell_code_by_proving_it)
* [C99-features-C++](https://stackoverflow.com/questions/47524553/are-all-of-the-features-of-c99-also-in-c)

#### 2017-12-11
* [Strictness-Analysis-Haskell](http://fixpt.de/blog/2017-12-04-strictness-analysis-part-1.html)
* [Monolithic-Micro-Hybrid-Kernel](https://www.zhihu.com/question/20314255)

#### 2017-12-12
* [Intro-to-Quantum-Computing](http://davidbkemp.github.io/QuantumComputingArticle/)
* [Internet-protocol-changes](https://blog.apnic.net/2017/12/12/internet-protocols-changing/)
* [石子归并-四边形优化-GarsiaWarch](http://blog.csdn.net/qq_33132383/article/details/75125993)
* [异步同步-阻塞非阻塞](https://www.zhihu.com/question/19732473)
* [Build-secure-PHP-software-2018](https://paragonie.com/blog/2017/12/2018-guide-building-secure-php-software)

#### 2017-12-13
* [Avast-retdec](https://blog.avast.com/avast-open-sources-its-machine-code-decompiler)
* [图像-波](http://www.ruanyifeng.com/blog/2017/12/image-and-wave-filters.html)
* [gcc-instruction-pattern](http://kristerw.blogspot.com/2017/12/more-about-gcc-instruction-patterns.html)
* [JPEG-DCT](http://blog.csdn.net/abcjennifer/article/details/8074492)
* [去除马赛克-GAN](https://zhuanlan.zhihu.com/p/27199954)
* [单写多读-加锁](https://www.zhihu.com/question/31325454)
* [ring-buffer-多核一致性](http://0xffffff.org/2017/02/21/40-atomic-variable-mutex-and-memory-barrier/)
* [7-example-of-cache](https://coolshell.cn/articles/10249.html)
* [false-sharing](http://0xffffff.org/2014/08/09/31-smp-false-sharing/)
* [测试时间](http://0xffffff.org/2015/12/06/37-How-to-benchmark-code-execution-times/)
* [Linux-IO](http://0xffffff.org/2017/05/01/41-linux-io/)
* [Linux-memory-manage](http://0xffffff.org/2014/10/31/32-memory-management/)
* [Linux-memory-structure](http://edsionte.com/techblog/archives/3652)
* [Linux-memory](http://edsionte.com/techblog/archives/3937)
* [Linux-Thread](http://0xffffff.org/2013/07/30/19-linux-thread-history/)

#### 2017-12-14
* [lock_guard-vs-unique_lock](https://stackoverflow.com/questions/20516773/stdunique-lockstdmutex-or-stdlock-guardstdmutex)
* [Shamir's-Secret-Sharing](https://en.wikipedia.org/wiki/Shamir%27s_Secret_Sharing)

#### 2017-12-15
* [MGSV-Graphics](http://www.adriancourreges.com/blog/2017/12/15/mgs-v-graphics-study/)
* [Top-10-article-ML-Dec-17](https://medium.mybridge.co/machine-learning-top-10-articles-for-the-past-month-v-dec-2017-82883b8062f5)
* [BackPropagation](http://www.cnblogs.com/charlotte77/p/5629865.html)

#### 2017-12-16
* [clang-in-docker-for-c++17](https://solarianprogrammer.com/2017/12/14/clang-in-docker-container-cpp-17-development/)

#### 2017-12-17
* [最大矩阵和/最大全1子矩阵](http://www.voidcn.com/article/p-waiiowua-vy.html)
* [Timeline-of-Programming-Languages](https://en.wikipedia.org/wiki/Timeline_of_programming_languages)
* [Rust-for-Rubyist](https://matthias-endler.de/2017/rust-for-rubyists/)
* [optional<bool>-specialization](https://medium.com/@barryrevzin/optional-bool-reference-or-constexpr-7cb410e8e4c4)
* [Windows启动过程](http://www.cnblogs.com/daizhj/articles/1934456.html)

#### 2017-12-18
* [What-ORM-tells-me](http://woz.posthaven.com/what-orms-have-taught-me-just-learn-sql)
* [How-to-write-your-own-cpp-game-engine](http://preshing.com/20171218/how-to-write-your-own-cpp-game-engine/)
* [Py-Ruby-Profiler](https://jvns.ca/blog/2017/12/17/how-do-ruby---python-profilers-work-/)

#### 2017-12-19
* [C++17-progress-in-VS15.5-VS15.6](https://blogs.msdn.microsoft.com/vcblog/2017/12/19/c17-progress-in-vs-2017-15-5-and-15-6/)

#### 2017-12-20
* [violation-of-TCP](https://blog.cloudflare.com/this-is-strictly-a-violation-of-the-tcp-specification/)
* [D's-newfangled-name-mangling](https://dlang.org/blog/2017/12/20/ds-newfangled-name-mangling/)

#### 2017-12-21
* [Rust-in-2017](https://blog.rust-lang.org/2017/12/21/rust-in-2017.html)

#### 2017-12-22
* [ncat-cheetsheet](https://bitrot.sh/cheatsheet/19-12-2017-ncat/)

#### 2017-12-23
* [reflection-in-Haskell](http://www.tweag.io/posts/2017-12-21-reflection-tutorial.html)
* [Linux-memory-lowmem-highmem](https://www.zhihu.com/question/52711172)
* [AVX-SSE-Transition-penalty](https://www.zhihu.com/question/37230675/answer/273654228)
* [Structured-binding-linkage](https://www.zhihu.com/question/263970502)
* [Program-Synthesis-Primer](http://barghouthi.github.io/articles/17/synthesis-primer)
* [Handbook-of-Philosophical-Logic](https://zhuanlan.zhihu.com/p/31965690)
* [二阶算术-big-five](https://www.zhihu.com/question/46778937)
* [std::move-object-member](http://oliora.github.io/2016/02/12/where-to-put-std-move.html)
* [__imp-and-_imp_](https://stackoverflow.com/questions/11236789/what-is-the-difference-between-imp-and-imp/11244199#11244199)
* [DLL-mmap-page-fault](https://stackoverflow.com/questions/5684365/what-causes-page-faults/5684422#5684422)
* [sqrt-inside-sqrt](https://www.zhihu.com/question/264207041/answer/278053059)
* [最小的HelloWorld-Win32](https://www.zhihu.com/question/21715980)
* [Everything-you-never-want-to-know-about-DLL](http://blog.omega-prime.co.uk/2011/07/04/everything-you-never-wanted-to-know-about-dlls/)
* [Hook-in-Linux](http://blog.csdn.net/tianxuhong/article/details/50974400)
* [构造主义-直觉主义-计算机](https://zhuanlan.zhihu.com/p/22389755)
* [memcached-lock-strategy](https://zhuanlan.zhihu.com/p/32273530)
* [Eigen-坑](https://zhuanlan.zhihu.com/p/32226967)

#### 2017-12-24
* [Vue.js-vs-React](http://pixeljets.com/blog/vue-js-vs-react-what-to-expect-in-2018/)
* [Which-Python-operation-are-atomic](http://blog.qqrs.us/blog/2016/05/01/which-python-operations-are-atomic/)
* [Formal-verification-the-gap-between-perfect-code-and-reality](https://raywang.tech/2017/12/20/Formal-Verification:-The-Gap-between-Perfect-Code-and-Reality/)

#### 2017-12-25
* [AI-Failures-in-2017](https://syncedreview.com/2017/12/23/2017-in-review-10-ai-failures/)
* [undefined-unsafe-in-Rust](https://manishearth.github.io/blog/2017/12/24/undefined-vs-unsafe-in-rust/)
* [Computer-latency-1977-2017](https://danluu.com/input-lag/)

#### 2017-12-26
* [libc_start](https://stackoverflow.com/questions/16970281/whats-going-on-in-libc-start-main)
* + [libc_start_main](https://github.com/bminor/glibc/blob/2a69f853c03034c2e383e0f9c35b5402ce8b5473/csu/libc-start.c)
* [FreeBSD-install-modification](https://vez.mrsk.me/freebsd-defaults.txt)
* [Execution-space-protection-and-ASLR](http://www.productive-cpp.com/hardening-cpp-programs-executable-space-protection-address-space-layout-randomization-aslr/)
* [Clang-extra-4-byte-in-main](http://nikhilism.com/post/2017/why-does-stack-extra-bytes-digging-clangs-return/)
* [Moorefs-恢复](http://blog.ztrix.me/blog/2012/05/13/restore-mfs-metadata/)
* [gdb-peda-god-mode](http://blog.ztrix.me/blog/2014/05/10/asis-quals-2014-serial-number-writeup/)

#### 2017-12-27
* [RELRO/CANARY/NX/PIE/ASLR/FORTIFY_SOURCE](http://blog.siphos.be/2011/07/high-level-explanation-on-some-binary-executable-security/)


## Tools
* [Repl.it](https://repl.it/)
* [Coliru-Cpp](http://coliru.stacked-crooked.com/)
* [Wandbox](http://melpon.org/wandbox)
* [pastebin](http://paste.ubuntu.com/)
* [Graph-Visualize](https://csacademy.com/app/graph_editor/)
* [Archive.org](http://archive.org/web/)
* [CoderPad](https://coderpad.io/)
* [Woboq](https://woboq.com/codebrowser.html)
* [Cling](https://rawgit.com/vgvassilev/cling/master/www/index.html))
* [ideone](http://ideone.com/)
* [Octave-Online](http://octave-online.net/)
* [Geordi](http://www.eelis.net/geordi/)
* [Godbolt](https://godbolt.org/)  (also cppx.godbolt)
* [loopy](http://ncase.me/loopy/)
* [factordb](http://factordb.com/)
* [pointfree-io](http://pointfree.io/)
* [Cpp-shell](http://cpp.sh/)
* [Cpp-formatter](http://codebeautify.org/cpp-formatter-beautifier)
* [RegExr](http://regexr.com/)
* [regex-online](http://tool.oschina.net/regex/#)
* [Linux-kernel-cross-reference](http://lxr.free-electrons.com/)
* [Haskell-tools](http://haskelltools.org/)
* [Pinboard](https://pinboard.in/)
* [DPaste](https://dpaste.dzfl.pl/new)
* [Verilog-online](http://www.tutorialspoint.com/compile_verilog_online.php)
* [Search-cppr](http://coudier.com/tk?entry=cppref)
* [TryHaskell](http://www.tryhaskell.org/)
* [webcompiler-VC++](http://webcompiler.cloudapp.net/)
* [TryKotlin](https://try.kotlinlang.org/)
* [RexTester](http://rextester.com/l/cpp_online_compiler_visual)
* [VirusTotal](https://www.virustotal.com/zh-cn/)
* [KeyBase](https://keybase.io/)
* [codeelf](https://unbug.github.io/codelf)
* [TIO](https://tio.run/#)
* [weavesilk](http://weavesilk.com/)
* [XSS'OR](http://xssor.io/)
* [VirusTotal](https://www.virustotal.com/en/)
* [CloudConvert](https://cloudconvert.com)
* [Discover-tech-stack-sitestack](https://sitestacks.com/?ref=nyc)
* [Quick-Bench-Cpp](http://quick-bench.com/)
* [高匿IP](https://proxy.coderbusy.com/zh-cn/classical/anonymous-type/highanonymous.aspx)
* [PythonTutor](http://pythontutor.com/)
* [ODA](https://www.onlinedisassembler.com/odaweb/)
* [tidr_](https://tldr.ostera.io)
* [matrix-calculus](http://www.matrixcalculus.org/)