# Linux Idioms

## \#

* | : pipe
* + command1 | command2 : command1 -> content -> command2
* >/</>>/<< 输出输入重定向
* >&/2>/2>> 错误重定向
* [good-blog](http://ytliu.info/blog/2015/01/24/zhi-shi-zheng-li-%282015-dot-1%29/)

## A


## B



## C


## D



## E


## F

* file descriptor
* + 0 : stdin
* + 1 : stdout
* + 2 : stderr
* + process independent
* file preread
* + [ref](http://www.d-kai.me/linux%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F%E9%A2%84%E8%AF%BB%E4%B8%80/)

## G


## H



## I
* IO
* + [ref](http://www.d-kai.me/linux-io%E8%AF%B7%E6%B1%82%E5%A4%84%E7%90%86%E6%B5%81%E7%A8%8B-1/)
* + [IO-stack](http://www.d-kai.me/linux-%E7%9A%84io%E5%B1%82%E6%AC%A1/)


## J



## K


## L



## M



## N



## O


## P



## Q



## R



## S
* system call
* + int 0x80
* + sysenter (i586)
* + - [how-to-use-sysenter](https://reverseengineering.stackexchange.com/questions/2869/how-to-use-sysenter-under-linux)
* + call *%gs:0x10 (vdso trampoline)
* + - [fs-and-gs-with-TLS-entries](https://stackoverflow.com/questions/6611346/how-are-the-fs-gs-registers-used-in-linux-amd64)
* + - i386 gs:
```c
typedef struct {
  void *tcb;              /* gs:0x00 Pointer to the TCB. */
  dtv_t *dtv;             /* gs:0x04 */
  void *self;             /* gs:0x08 Pointer to the thread descriptor.  */
  int multiple_threads;   /* gs:0x0c */
  uintptr_t sysinfo;      /* gs:0x10 Syscall interface */
  uintptr_t stack_guard;  /* gs:0x14 Random value used for stack protection */
  uintptr_t pointer_guard;/* gs:0x18 Random value used for pointer protection */
  int gscope_flag;        /* gs:0x1c */
  int private_futex;      /* gs:0x20 */
  void *__private_tm[4];  /* gs:0x24 Reservation of some values for the TM ABI.  */
  void *__private_ss;     /* gs:0x34 GCC split stack support.  */
} tcbhead_t;
```
* + - amd64 gs:
```c
typedef struct
{
    void *tcb;                /* Pointer to the TCB.  Not necessarily the
                            thread descriptor used by libpthread.  */
    dtv_t *dtv;
    void *self;                /* gs:0x18 Pointer to the thread descriptor.  */ 
    int multiple_threads;
    int gscope_flag;
    uintptr_t sysinfo;
    uintptr_t stack_guard;
    uintptr_t pointer_guard;
    unsigned long int vgetcpu_cache[2];
# ifndef __ASSUME_PRIVATE_FUTEX
    int private_futex;
# else
    int __glibc_reserved1;
# endif
    int __glibc_unused1;
    /* Reservation of some values for the TM ABI.  */
    void *__private_tm[4];
    /* GCC split stack support.  */
    void *__private_ss;
    long int __glibc_reserved2;
    /* Must be kept even if it is no longer used by glibc since programs,
        like AddressSanitizer, depend on the size of tcbhead_t.  */
    __128bits __glibc_unused2[8][4] __attribute__ ((aligned (32)));

    void *__padding[8];
} tcbhead_t;
```
* + syscall (amd64)



## T



## U
* user-level statically defined tracing (USDT) 
* unlink
* + [ref](http://www.d-kai.me/linux-close-%E4%B8%8Eunlink/)



## V



## W



## X



## Y



## Z

